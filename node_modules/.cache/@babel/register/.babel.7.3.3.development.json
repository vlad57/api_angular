{
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _graphqlYoga = require(\"graphql-yoga\");\n\nvar _prismaClient = require(\"./generated/prisma-client\");\n\nvar _Query = _interopRequireDefault(require(\"./resolvers/Query\"));\n\nvar _Serie = _interopRequireDefault(require(\"./resolvers/Serie\"));\n\nvar _Saison = _interopRequireDefault(require(\"./resolvers/Saison\"));\n\nvar _Episode = _interopRequireDefault(require(\"./resolvers/Episode\"));\n\nvar _FilmUser = _interopRequireDefault(require(\"./resolvers/FilmUser\"));\n\nvar _SerieUser = _interopRequireDefault(require(\"./resolvers/SerieUser\"));\n\nvar _User = _interopRequireDefault(require(\"./resolvers/User\"));\n\nvar _auth = _interopRequireDefault(require(\"./resolvers/Mutation/auth\"));\n\nvar _user = _interopRequireDefault(require(\"./resolvers/Mutation/user\"));\n\nvar _film = _interopRequireDefault(require(\"./resolvers/Mutation/film\"));\n\nvar _serie = _interopRequireDefault(require(\"./resolvers/Mutation/serie\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n_dotenv.default.config();\n\nvar prisma = new _prismaClient.Prisma({\n  endpoint: process.env.PRISMA_ENDPOINT //secret: process.env.PRISMA_SECRET\n\n});\nvar server = new _graphqlYoga.GraphQLServer({\n  typeDefs: './src/schema.graphql',\n  resolvers: {\n    Query: _Query.default,\n    Serie: _Serie.default,\n    Saison: _Saison.default,\n    Episode: _Episode.default,\n    FilmUser: _FilmUser.default,\n    SerieUser: _SerieUser.default,\n    User: _User.default,\n    Mutation: _objectSpread({}, _auth.default, _user.default, _film.default, _serie.default)\n  },\n  context: function context(req) {\n    return _objectSpread({}, req, {\n      prisma: prisma\n    });\n  }\n});\nserver.start(function () {\n  return console.log('Server is running on http://localhost:4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsInByaXNtYSIsIlByaXNtYSIsImVuZHBvaW50IiwicHJvY2VzcyIsImVudiIsIlBSSVNNQV9FTkRQT0lOVCIsInNlcnZlciIsIkdyYXBoUUxTZXJ2ZXIiLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsIlF1ZXJ5IiwiU2VyaWUiLCJTYWlzb24iLCJFcGlzb2RlIiwiRmlsbVVzZXIiLCJTZXJpZVVzZXIiLCJVc2VyIiwiTXV0YXRpb24iLCJhdXRoIiwidXNlciIsImZpbG0iLCJzZXJpZSIsImNvbnRleHQiLCJyZXEiLCJzdGFydCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUFBLGdCQUFPQyxNQUFQOztBQUVBLElBQU1DLE1BQU0sR0FBRyxJQUFJQyxvQkFBSixDQUFXO0FBQ3hCQyxFQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxlQURFLENBRXhCOztBQUZ3QixDQUFYLENBQWY7QUFLQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsMEJBQUosQ0FBa0I7QUFDL0JDLEVBQUFBLFFBQVEsRUFBRSxzQkFEcUI7QUFFL0JDLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxLQUFLLEVBQUxBLGNBRFM7QUFFVEMsSUFBQUEsS0FBSyxFQUFMQSxjQUZTO0FBR1RDLElBQUFBLE1BQU0sRUFBTkEsZUFIUztBQUlUQyxJQUFBQSxPQUFPLEVBQVBBLGdCQUpTO0FBS1RDLElBQUFBLFFBQVEsRUFBUkEsaUJBTFM7QUFNVEMsSUFBQUEsU0FBUyxFQUFUQSxrQkFOUztBQU9UQyxJQUFBQSxJQUFJLEVBQUpBLGFBUFM7QUFRVEMsSUFBQUEsUUFBUSxvQkFDSEMsYUFERyxFQUVIQyxhQUZHLEVBR0hDLGFBSEcsRUFJSEMsY0FKRztBQVJDLEdBRm9CO0FBaUIvQkMsRUFBQUEsT0FBTyxFQUFFLGlCQUFBQyxHQUFHO0FBQUEsNkJBQVNBLEdBQVQ7QUFBY3ZCLE1BQUFBLE1BQU0sRUFBTkE7QUFBZDtBQUFBO0FBakJtQixDQUFsQixDQUFmO0FBb0JBTSxNQUFNLENBQUNrQixLQUFQLENBQWE7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSw0Q0FBWixDQUFOO0FBQUEsQ0FBYiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9UZXN0UHJpc21hL2FwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0BiYWJlbC9wb2x5ZmlsbCdcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52J1xuaW1wb3J0IHsgR3JhcGhRTFNlcnZlciB9IGZyb20gJ2dyYXBocWwteW9nYSdcbmltcG9ydCB7IFByaXNtYSB9IGZyb20gJy4vZ2VuZXJhdGVkL3ByaXNtYS1jbGllbnQnXG5pbXBvcnQgUXVlcnkgZnJvbSAnLi9yZXNvbHZlcnMvUXVlcnknXG5pbXBvcnQgU2VyaWUgZnJvbSAnLi9yZXNvbHZlcnMvU2VyaWUnXG5pbXBvcnQgU2Fpc29uIGZyb20gJy4vcmVzb2x2ZXJzL1NhaXNvbidcbmltcG9ydCBFcGlzb2RlIGZyb20gJy4vcmVzb2x2ZXJzL0VwaXNvZGUnXG5pbXBvcnQgRmlsbVVzZXIgZnJvbSAnLi9yZXNvbHZlcnMvRmlsbVVzZXInXG5pbXBvcnQgU2VyaWVVc2VyIGZyb20gJy4vcmVzb2x2ZXJzL1NlcmllVXNlcidcbmltcG9ydCBVc2VyIGZyb20gJy4vcmVzb2x2ZXJzL1VzZXInXG5pbXBvcnQgYXV0aCBmcm9tICcuL3Jlc29sdmVycy9NdXRhdGlvbi9hdXRoJ1xuaW1wb3J0IHVzZXIgZnJvbSAnLi9yZXNvbHZlcnMvTXV0YXRpb24vdXNlcidcbmltcG9ydCBmaWxtIGZyb20gJy4vcmVzb2x2ZXJzL011dGF0aW9uL2ZpbG0nXG5pbXBvcnQgc2VyaWUgZnJvbSAnLi9yZXNvbHZlcnMvTXV0YXRpb24vc2VyaWUnXG5cbmRvdGVudi5jb25maWcoKVxuXG5jb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hKHtcbiAgZW5kcG9pbnQ6IHByb2Nlc3MuZW52LlBSSVNNQV9FTkRQT0lOVCxcbiAgLy9zZWNyZXQ6IHByb2Nlc3MuZW52LlBSSVNNQV9TRUNSRVRcbn0pXG5cbmNvbnN0IHNlcnZlciA9IG5ldyBHcmFwaFFMU2VydmVyKHtcbiAgdHlwZURlZnM6ICcuL3NyYy9zY2hlbWEuZ3JhcGhxbCcsXG4gIHJlc29sdmVyczoge1xuICAgIFF1ZXJ5LFxuICAgIFNlcmllLFxuICAgIFNhaXNvbixcbiAgICBFcGlzb2RlLFxuICAgIEZpbG1Vc2VyLFxuICAgIFNlcmllVXNlcixcbiAgICBVc2VyLFxuICAgIE11dGF0aW9uOiB7XG4gICAgICAuLi5hdXRoLFxuICAgICAgLi4udXNlcixcbiAgICAgIC4uLmZpbG0sXG4gICAgICAuLi5zZXJpZSxcbiAgICB9XG4gIH0sXG4gIGNvbnRleHQ6IHJlcSA9PiAoey4uLnJlcSwgcHJpc21hfSlcbn0pXG5cbnNlcnZlci5zdGFydCgoKSA9PiBjb25zb2xlLmxvZygnU2VydmVyIGlzIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDo0MDAwJykpXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "prisma",
        "Prisma",
        "endpoint",
        "process",
        "env",
        "PRISMA_ENDPOINT",
        "server",
        "GraphQLServer",
        "typeDefs",
        "resolvers",
        "Query",
        "Serie",
        "Saison",
        "Episode",
        "FilmUser",
        "SerieUser",
        "User",
        "Mutation",
        "auth",
        "user",
        "film",
        "serie",
        "context",
        "req",
        "start",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,gBAAOC,MAAP;;AAEA,IAAMC,MAAM,GAAG,IAAIC,oBAAJ,CAAW;AACxBC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,eADE,CAExB;;AAFwB,CAAX,CAAf;AAKA,IAAMC,MAAM,GAAG,IAAIC,0BAAJ,CAAkB;AAC/BC,EAAAA,QAAQ,EAAE,sBADqB;AAE/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAALA,cADS;AAETC,IAAAA,KAAK,EAALA,cAFS;AAGTC,IAAAA,MAAM,EAANA,eAHS;AAITC,IAAAA,OAAO,EAAPA,gBAJS;AAKTC,IAAAA,QAAQ,EAARA,iBALS;AAMTC,IAAAA,SAAS,EAATA,kBANS;AAOTC,IAAAA,IAAI,EAAJA,aAPS;AAQTC,IAAAA,QAAQ,oBACHC,aADG,EAEHC,aAFG,EAGHC,aAHG,EAIHC,cAJG;AARC,GAFoB;AAiB/BC,EAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,6BAASA,GAAT;AAAcvB,MAAAA,MAAM,EAANA;AAAd;AAAA;AAjBmB,CAAlB,CAAf;AAoBAM,MAAM,CAACkB,KAAP,CAAa;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,4CAAZ,CAAN;AAAA,CAAb",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src",
      "sourcesContent": [
        "import '@babel/polyfill'\nimport dotenv from 'dotenv'\nimport { GraphQLServer } from 'graphql-yoga'\nimport { Prisma } from './generated/prisma-client'\nimport Query from './resolvers/Query'\nimport Serie from './resolvers/Serie'\nimport Saison from './resolvers/Saison'\nimport Episode from './resolvers/Episode'\nimport FilmUser from './resolvers/FilmUser'\nimport SerieUser from './resolvers/SerieUser'\nimport User from './resolvers/User'\nimport auth from './resolvers/Mutation/auth'\nimport user from './resolvers/Mutation/user'\nimport film from './resolvers/Mutation/film'\nimport serie from './resolvers/Mutation/serie'\n\ndotenv.config()\n\nconst prisma = new Prisma({\n  endpoint: process.env.PRISMA_ENDPOINT,\n  //secret: process.env.PRISMA_SECRET\n})\n\nconst server = new GraphQLServer({\n  typeDefs: './src/schema.graphql',\n  resolvers: {\n    Query,\n    Serie,\n    Saison,\n    Episode,\n    FilmUser,\n    SerieUser,\n    User,\n    Mutation: {\n      ...auth,\n      ...user,\n      ...film,\n      ...serie,\n    }\n  },\n  context: req => ({...req, prisma})\n})\n\nserver.start(() => console.log('Server is running on http://localhost:4000'))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813713875
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar prisma_lib_1 = require(\"prisma-client-lib\");\n\nvar typeDefs = require(\"./prisma-schema\").typeDefs;\n\nvar models = [{\n  name: \"User\",\n  embedded: false\n}, {\n  name: \"Serie\",\n  embedded: false\n}, {\n  name: \"Saison\",\n  embedded: false\n}, {\n  name: \"Episode\",\n  embedded: false\n}, {\n  name: \"Film\",\n  embedded: false\n}, {\n  name: \"FilmUser\",\n  embedded: false\n}, {\n  name: \"SerieUser\",\n  embedded: false\n}];\nexports.Prisma = prisma_lib_1.makePrismaClientClass({\n  typeDefs: typeDefs,\n  models: models,\n  endpoint: \"\".concat(process.env[\"PRISMA_ENDPOINT\"]),\n  secret: \"\".concat(process.env[\"PRISMA_SECRET\"])\n});\nexports.prisma = new exports.Prisma();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicHJpc21hX2xpYl8xIiwicmVxdWlyZSIsInR5cGVEZWZzIiwibW9kZWxzIiwibmFtZSIsImVtYmVkZGVkIiwiUHJpc21hIiwibWFrZVByaXNtYUNsaWVudENsYXNzIiwiZW5kcG9pbnQiLCJwcm9jZXNzIiwiZW52Iiwic2VjcmV0IiwicHJpc21hIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxtQkFBRCxDQUExQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxRQUExQzs7QUFFQSxJQUFJQyxNQUFNLEdBQUcsQ0FDWDtBQUNFQyxFQUFBQSxJQUFJLEVBQUUsTUFEUjtBQUVFQyxFQUFBQSxRQUFRLEVBQUU7QUFGWixDQURXLEVBS1g7QUFDRUQsRUFBQUEsSUFBSSxFQUFFLE9BRFI7QUFFRUMsRUFBQUEsUUFBUSxFQUFFO0FBRlosQ0FMVyxFQVNYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxRQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBVFcsRUFhWDtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxFQUFBQSxRQUFRLEVBQUU7QUFGWixDQWJXLEVBaUJYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxNQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBakJXLEVBcUJYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxVQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBckJXLEVBeUJYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxXQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBekJXLENBQWI7QUE4QkFQLE9BQU8sQ0FBQ1EsTUFBUixHQUFpQk4sWUFBWSxDQUFDTyxxQkFBYixDQUFtQztBQUNsREwsRUFBQUEsUUFBUSxFQUFSQSxRQURrRDtBQUVsREMsRUFBQUEsTUFBTSxFQUFOQSxNQUZrRDtBQUdsREssRUFBQUEsUUFBUSxZQUFLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixDQUFMLENBSDBDO0FBSWxEQyxFQUFBQSxNQUFNLFlBQUtGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVosQ0FBTDtBQUo0QyxDQUFuQyxDQUFqQjtBQU1BWixPQUFPLENBQUNjLE1BQVIsR0FBaUIsSUFBSWQsT0FBTyxDQUFDUSxNQUFaLEVBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL1Rlc3RQcmlzbWEvYXBpL3NyYy9nZW5lcmF0ZWQvcHJpc21hLWNsaWVudCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHByaXNtYV9saWJfMSA9IHJlcXVpcmUoXCJwcmlzbWEtY2xpZW50LWxpYlwiKTtcbnZhciB0eXBlRGVmcyA9IHJlcXVpcmUoXCIuL3ByaXNtYS1zY2hlbWFcIikudHlwZURlZnM7XG5cbnZhciBtb2RlbHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIlVzZXJcIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiU2VyaWVcIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiU2Fpc29uXCIsXG4gICAgZW1iZWRkZWQ6IGZhbHNlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkVwaXNvZGVcIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiRmlsbVwiLFxuICAgIGVtYmVkZGVkOiBmYWxzZVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJGaWxtVXNlclwiLFxuICAgIGVtYmVkZGVkOiBmYWxzZVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJTZXJpZVVzZXJcIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfVxuXTtcbmV4cG9ydHMuUHJpc21hID0gcHJpc21hX2xpYl8xLm1ha2VQcmlzbWFDbGllbnRDbGFzcyh7XG4gIHR5cGVEZWZzLFxuICBtb2RlbHMsXG4gIGVuZHBvaW50OiBgJHtwcm9jZXNzLmVudltcIlBSSVNNQV9FTkRQT0lOVFwiXX1gLFxuICBzZWNyZXQ6IGAke3Byb2Nlc3MuZW52W1wiUFJJU01BX1NFQ1JFVFwiXX1gXG59KTtcbmV4cG9ydHMucHJpc21hID0gbmV3IGV4cG9ydHMuUHJpc21hKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Object",
        "defineProperty",
        "exports",
        "value",
        "prisma_lib_1",
        "require",
        "typeDefs",
        "models",
        "name",
        "embedded",
        "Prisma",
        "makePrismaClientClass",
        "endpoint",
        "process",
        "env",
        "secret",
        "prisma"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,QAA1C;;AAEA,IAAIC,MAAM,GAAG,CACX;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADW,EAKX;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CALW,EASX;AACED,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CATW,EAaX;AACED,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAbW,EAiBX;AACED,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAjBW,EAqBX;AACED,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CArBW,EAyBX;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAzBW,CAAb;AA8BAP,OAAO,CAACQ,MAAR,GAAiBN,YAAY,CAACO,qBAAb,CAAmC;AAClDL,EAAAA,QAAQ,EAARA,QADkD;AAElDC,EAAAA,MAAM,EAANA,MAFkD;AAGlDK,EAAAA,QAAQ,YAAKC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAL,CAH0C;AAIlDC,EAAAA,MAAM,YAAKF,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAL;AAJ4C,CAAnC,CAAjB;AAMAZ,OAAO,CAACc,MAAR,GAAiB,IAAId,OAAO,CAACQ,MAAZ,EAAjB",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client",
      "sourcesContent": [
        "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar prisma_lib_1 = require(\"prisma-client-lib\");\nvar typeDefs = require(\"./prisma-schema\").typeDefs;\n\nvar models = [\n  {\n    name: \"User\",\n    embedded: false\n  },\n  {\n    name: \"Serie\",\n    embedded: false\n  },\n  {\n    name: \"Saison\",\n    embedded: false\n  },\n  {\n    name: \"Episode\",\n    embedded: false\n  },\n  {\n    name: \"Film\",\n    embedded: false\n  },\n  {\n    name: \"FilmUser\",\n    embedded: false\n  },\n  {\n    name: \"SerieUser\",\n    embedded: false\n  }\n];\nexports.Prisma = prisma_lib_1.makePrismaClientClass({\n  typeDefs,\n  models,\n  endpoint: `${process.env[\"PRISMA_ENDPOINT\"]}`,\n  secret: `${process.env[\"PRISMA_SECRET\"]}`\n});\nexports.prisma = new exports.Prisma();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551814010190
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/prisma-schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/prisma-schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/prisma-schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client/prisma-schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client",
        "sourceFileName": "prisma-schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  typeDefs: // Code generated by Prisma (prisma@1.27.4). DO NOT EDIT.\n  // Please don't change this file manually but run `prisma generate` to update it.\n  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/\n\n  /* GraphQL */\n  \"type AggregateEpisode {\\n  count: Int!\\n}\\n\\ntype AggregateFilm {\\n  count: Int!\\n}\\n\\ntype AggregateFilmUser {\\n  count: Int!\\n}\\n\\ntype AggregateSaison {\\n  count: Int!\\n}\\n\\ntype AggregateSerie {\\n  count: Int!\\n}\\n\\ntype AggregateSerieUser {\\n  count: Int!\\n}\\n\\ntype AggregateUser {\\n  count: Int!\\n}\\n\\ntype BatchPayload {\\n  count: Long!\\n}\\n\\ntype Episode {\\n  id: ID!\\n  name: String!\\n  description: String!\\n  saison: Saison!\\n  serie: Serie!\\n}\\n\\ntype EpisodeConnection {\\n  pageInfo: PageInfo!\\n  edges: [EpisodeEdge]!\\n  aggregate: AggregateEpisode!\\n}\\n\\ninput EpisodeCreateInput {\\n  name: String!\\n  description: String!\\n  saison: SaisonCreateOneWithoutEpisodesInput!\\n  serie: SerieCreateOneWithoutEpisodesInput!\\n}\\n\\ninput EpisodeCreateManyWithoutSaisonInput {\\n  create: [EpisodeCreateWithoutSaisonInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n}\\n\\ninput EpisodeCreateManyWithoutSerieInput {\\n  create: [EpisodeCreateWithoutSerieInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n}\\n\\ninput EpisodeCreateWithoutSaisonInput {\\n  name: String!\\n  description: String!\\n  serie: SerieCreateOneWithoutEpisodesInput!\\n}\\n\\ninput EpisodeCreateWithoutSerieInput {\\n  name: String!\\n  description: String!\\n  saison: SaisonCreateOneWithoutEpisodesInput!\\n}\\n\\ntype EpisodeEdge {\\n  node: Episode!\\n  cursor: String!\\n}\\n\\nenum EpisodeOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n  description_ASC\\n  description_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype EpisodePreviousValues {\\n  id: ID!\\n  name: String!\\n  description: String!\\n}\\n\\ninput EpisodeScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  AND: [EpisodeScalarWhereInput!]\\n  OR: [EpisodeScalarWhereInput!]\\n  NOT: [EpisodeScalarWhereInput!]\\n}\\n\\ntype EpisodeSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Episode\\n  updatedFields: [String!]\\n  previousValues: EpisodePreviousValues\\n}\\n\\ninput EpisodeSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: EpisodeWhereInput\\n  AND: [EpisodeSubscriptionWhereInput!]\\n  OR: [EpisodeSubscriptionWhereInput!]\\n  NOT: [EpisodeSubscriptionWhereInput!]\\n}\\n\\ninput EpisodeUpdateInput {\\n  name: String\\n  description: String\\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\\n}\\n\\ninput EpisodeUpdateManyDataInput {\\n  name: String\\n  description: String\\n}\\n\\ninput EpisodeUpdateManyMutationInput {\\n  name: String\\n  description: String\\n}\\n\\ninput EpisodeUpdateManyWithoutSaisonInput {\\n  create: [EpisodeCreateWithoutSaisonInput!]\\n  delete: [EpisodeWhereUniqueInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n  set: [EpisodeWhereUniqueInput!]\\n  disconnect: [EpisodeWhereUniqueInput!]\\n  update: [EpisodeUpdateWithWhereUniqueWithoutSaisonInput!]\\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSaisonInput!]\\n  deleteMany: [EpisodeScalarWhereInput!]\\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput EpisodeUpdateManyWithoutSerieInput {\\n  create: [EpisodeCreateWithoutSerieInput!]\\n  delete: [EpisodeWhereUniqueInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n  set: [EpisodeWhereUniqueInput!]\\n  disconnect: [EpisodeWhereUniqueInput!]\\n  update: [EpisodeUpdateWithWhereUniqueWithoutSerieInput!]\\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSerieInput!]\\n  deleteMany: [EpisodeScalarWhereInput!]\\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput EpisodeUpdateManyWithWhereNestedInput {\\n  where: EpisodeScalarWhereInput!\\n  data: EpisodeUpdateManyDataInput!\\n}\\n\\ninput EpisodeUpdateWithoutSaisonDataInput {\\n  name: String\\n  description: String\\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\\n}\\n\\ninput EpisodeUpdateWithoutSerieDataInput {\\n  name: String\\n  description: String\\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\\n}\\n\\ninput EpisodeUpdateWithWhereUniqueWithoutSaisonInput {\\n  where: EpisodeWhereUniqueInput!\\n  data: EpisodeUpdateWithoutSaisonDataInput!\\n}\\n\\ninput EpisodeUpdateWithWhereUniqueWithoutSerieInput {\\n  where: EpisodeWhereUniqueInput!\\n  data: EpisodeUpdateWithoutSerieDataInput!\\n}\\n\\ninput EpisodeUpsertWithWhereUniqueWithoutSaisonInput {\\n  where: EpisodeWhereUniqueInput!\\n  update: EpisodeUpdateWithoutSaisonDataInput!\\n  create: EpisodeCreateWithoutSaisonInput!\\n}\\n\\ninput EpisodeUpsertWithWhereUniqueWithoutSerieInput {\\n  where: EpisodeWhereUniqueInput!\\n  update: EpisodeUpdateWithoutSerieDataInput!\\n  create: EpisodeCreateWithoutSerieInput!\\n}\\n\\ninput EpisodeWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  saison: SaisonWhereInput\\n  serie: SerieWhereInput\\n  AND: [EpisodeWhereInput!]\\n  OR: [EpisodeWhereInput!]\\n  NOT: [EpisodeWhereInput!]\\n}\\n\\ninput EpisodeWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Film {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n}\\n\\ntype FilmConnection {\\n  pageInfo: PageInfo!\\n  edges: [FilmEdge]!\\n  aggregate: AggregateFilm!\\n}\\n\\ninput FilmCreateInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n}\\n\\ninput FilmCreateOneInput {\\n  create: FilmCreateInput\\n  connect: FilmWhereUniqueInput\\n}\\n\\ntype FilmEdge {\\n  node: Film!\\n  cursor: String!\\n}\\n\\nenum FilmOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n  genre_ASC\\n  genre_DESC\\n  description_ASC\\n  description_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype FilmPreviousValues {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n}\\n\\ntype FilmSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Film\\n  updatedFields: [String!]\\n  previousValues: FilmPreviousValues\\n}\\n\\ninput FilmSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: FilmWhereInput\\n  AND: [FilmSubscriptionWhereInput!]\\n  OR: [FilmSubscriptionWhereInput!]\\n  NOT: [FilmSubscriptionWhereInput!]\\n}\\n\\ninput FilmUpdateDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n}\\n\\ninput FilmUpdateInput {\\n  name: String\\n  genre: String\\n  description: String\\n}\\n\\ninput FilmUpdateManyMutationInput {\\n  name: String\\n  genre: String\\n  description: String\\n}\\n\\ninput FilmUpdateOneRequiredInput {\\n  create: FilmCreateInput\\n  update: FilmUpdateDataInput\\n  upsert: FilmUpsertNestedInput\\n  connect: FilmWhereUniqueInput\\n}\\n\\ninput FilmUpsertNestedInput {\\n  update: FilmUpdateDataInput!\\n  create: FilmCreateInput!\\n}\\n\\ntype FilmUser {\\n  id: ID!\\n  finish: Boolean\\n  film: Film!\\n  user: User!\\n}\\n\\ntype FilmUserConnection {\\n  pageInfo: PageInfo!\\n  edges: [FilmUserEdge]!\\n  aggregate: AggregateFilmUser!\\n}\\n\\ninput FilmUserCreateInput {\\n  finish: Boolean\\n  film: FilmCreateOneInput!\\n  user: UserCreateOneWithoutFilmInput!\\n}\\n\\ninput FilmUserCreateManyWithoutUserInput {\\n  create: [FilmUserCreateWithoutUserInput!]\\n  connect: [FilmUserWhereUniqueInput!]\\n}\\n\\ninput FilmUserCreateWithoutUserInput {\\n  finish: Boolean\\n  film: FilmCreateOneInput!\\n}\\n\\ntype FilmUserEdge {\\n  node: FilmUser!\\n  cursor: String!\\n}\\n\\nenum FilmUserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  finish_ASC\\n  finish_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype FilmUserPreviousValues {\\n  id: ID!\\n  finish: Boolean\\n}\\n\\ninput FilmUserScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  AND: [FilmUserScalarWhereInput!]\\n  OR: [FilmUserScalarWhereInput!]\\n  NOT: [FilmUserScalarWhereInput!]\\n}\\n\\ntype FilmUserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: FilmUser\\n  updatedFields: [String!]\\n  previousValues: FilmUserPreviousValues\\n}\\n\\ninput FilmUserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: FilmUserWhereInput\\n  AND: [FilmUserSubscriptionWhereInput!]\\n  OR: [FilmUserSubscriptionWhereInput!]\\n  NOT: [FilmUserSubscriptionWhereInput!]\\n}\\n\\ninput FilmUserUpdateInput {\\n  finish: Boolean\\n  film: FilmUpdateOneRequiredInput\\n  user: UserUpdateOneRequiredWithoutFilmInput\\n}\\n\\ninput FilmUserUpdateManyDataInput {\\n  finish: Boolean\\n}\\n\\ninput FilmUserUpdateManyMutationInput {\\n  finish: Boolean\\n}\\n\\ninput FilmUserUpdateManyWithoutUserInput {\\n  create: [FilmUserCreateWithoutUserInput!]\\n  delete: [FilmUserWhereUniqueInput!]\\n  connect: [FilmUserWhereUniqueInput!]\\n  set: [FilmUserWhereUniqueInput!]\\n  disconnect: [FilmUserWhereUniqueInput!]\\n  update: [FilmUserUpdateWithWhereUniqueWithoutUserInput!]\\n  upsert: [FilmUserUpsertWithWhereUniqueWithoutUserInput!]\\n  deleteMany: [FilmUserScalarWhereInput!]\\n  updateMany: [FilmUserUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput FilmUserUpdateManyWithWhereNestedInput {\\n  where: FilmUserScalarWhereInput!\\n  data: FilmUserUpdateManyDataInput!\\n}\\n\\ninput FilmUserUpdateWithoutUserDataInput {\\n  finish: Boolean\\n  film: FilmUpdateOneRequiredInput\\n}\\n\\ninput FilmUserUpdateWithWhereUniqueWithoutUserInput {\\n  where: FilmUserWhereUniqueInput!\\n  data: FilmUserUpdateWithoutUserDataInput!\\n}\\n\\ninput FilmUserUpsertWithWhereUniqueWithoutUserInput {\\n  where: FilmUserWhereUniqueInput!\\n  update: FilmUserUpdateWithoutUserDataInput!\\n  create: FilmUserCreateWithoutUserInput!\\n}\\n\\ninput FilmUserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  film: FilmWhereInput\\n  user: UserWhereInput\\n  AND: [FilmUserWhereInput!]\\n  OR: [FilmUserWhereInput!]\\n  NOT: [FilmUserWhereInput!]\\n}\\n\\ninput FilmUserWhereUniqueInput {\\n  id: ID\\n}\\n\\ninput FilmWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  genre: String\\n  genre_not: String\\n  genre_in: [String!]\\n  genre_not_in: [String!]\\n  genre_lt: String\\n  genre_lte: String\\n  genre_gt: String\\n  genre_gte: String\\n  genre_contains: String\\n  genre_not_contains: String\\n  genre_starts_with: String\\n  genre_not_starts_with: String\\n  genre_ends_with: String\\n  genre_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  AND: [FilmWhereInput!]\\n  OR: [FilmWhereInput!]\\n  NOT: [FilmWhereInput!]\\n}\\n\\ninput FilmWhereUniqueInput {\\n  id: ID\\n}\\n\\nscalar Long\\n\\ntype Mutation {\\n  createEpisode(data: EpisodeCreateInput!): Episode!\\n  updateEpisode(data: EpisodeUpdateInput!, where: EpisodeWhereUniqueInput!): Episode\\n  updateManyEpisodes(data: EpisodeUpdateManyMutationInput!, where: EpisodeWhereInput): BatchPayload!\\n  upsertEpisode(where: EpisodeWhereUniqueInput!, create: EpisodeCreateInput!, update: EpisodeUpdateInput!): Episode!\\n  deleteEpisode(where: EpisodeWhereUniqueInput!): Episode\\n  deleteManyEpisodes(where: EpisodeWhereInput): BatchPayload!\\n  createFilm(data: FilmCreateInput!): Film!\\n  updateFilm(data: FilmUpdateInput!, where: FilmWhereUniqueInput!): Film\\n  updateManyFilms(data: FilmUpdateManyMutationInput!, where: FilmWhereInput): BatchPayload!\\n  upsertFilm(where: FilmWhereUniqueInput!, create: FilmCreateInput!, update: FilmUpdateInput!): Film!\\n  deleteFilm(where: FilmWhereUniqueInput!): Film\\n  deleteManyFilms(where: FilmWhereInput): BatchPayload!\\n  createFilmUser(data: FilmUserCreateInput!): FilmUser!\\n  updateFilmUser(data: FilmUserUpdateInput!, where: FilmUserWhereUniqueInput!): FilmUser\\n  updateManyFilmUsers(data: FilmUserUpdateManyMutationInput!, where: FilmUserWhereInput): BatchPayload!\\n  upsertFilmUser(where: FilmUserWhereUniqueInput!, create: FilmUserCreateInput!, update: FilmUserUpdateInput!): FilmUser!\\n  deleteFilmUser(where: FilmUserWhereUniqueInput!): FilmUser\\n  deleteManyFilmUsers(where: FilmUserWhereInput): BatchPayload!\\n  createSaison(data: SaisonCreateInput!): Saison!\\n  updateSaison(data: SaisonUpdateInput!, where: SaisonWhereUniqueInput!): Saison\\n  updateManySaisons(data: SaisonUpdateManyMutationInput!, where: SaisonWhereInput): BatchPayload!\\n  upsertSaison(where: SaisonWhereUniqueInput!, create: SaisonCreateInput!, update: SaisonUpdateInput!): Saison!\\n  deleteSaison(where: SaisonWhereUniqueInput!): Saison\\n  deleteManySaisons(where: SaisonWhereInput): BatchPayload!\\n  createSerie(data: SerieCreateInput!): Serie!\\n  updateSerie(data: SerieUpdateInput!, where: SerieWhereUniqueInput!): Serie\\n  updateManySeries(data: SerieUpdateManyMutationInput!, where: SerieWhereInput): BatchPayload!\\n  upsertSerie(where: SerieWhereUniqueInput!, create: SerieCreateInput!, update: SerieUpdateInput!): Serie!\\n  deleteSerie(where: SerieWhereUniqueInput!): Serie\\n  deleteManySeries(where: SerieWhereInput): BatchPayload!\\n  createSerieUser(data: SerieUserCreateInput!): SerieUser!\\n  updateSerieUser(data: SerieUserUpdateInput!, where: SerieUserWhereUniqueInput!): SerieUser\\n  updateManySerieUsers(data: SerieUserUpdateManyMutationInput!, where: SerieUserWhereInput): BatchPayload!\\n  upsertSerieUser(where: SerieUserWhereUniqueInput!, create: SerieUserCreateInput!, update: SerieUserUpdateInput!): SerieUser!\\n  deleteSerieUser(where: SerieUserWhereUniqueInput!): SerieUser\\n  deleteManySerieUsers(where: SerieUserWhereInput): BatchPayload!\\n  createUser(data: UserCreateInput!): User!\\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\\n  deleteUser(where: UserWhereUniqueInput!): User\\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\\n}\\n\\nenum MutationType {\\n  CREATED\\n  UPDATED\\n  DELETED\\n}\\n\\ninterface Node {\\n  id: ID!\\n}\\n\\ntype PageInfo {\\n  hasNextPage: Boolean!\\n  hasPreviousPage: Boolean!\\n  startCursor: String\\n  endCursor: String\\n}\\n\\ntype Query {\\n  episode(where: EpisodeWhereUniqueInput!): Episode\\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode]!\\n  episodesConnection(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EpisodeConnection!\\n  film(where: FilmWhereUniqueInput!): Film\\n  films(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Film]!\\n  filmsConnection(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmConnection!\\n  filmUser(where: FilmUserWhereUniqueInput!): FilmUser\\n  filmUsers(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser]!\\n  filmUsersConnection(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmUserConnection!\\n  saison(where: SaisonWhereUniqueInput!): Saison\\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison]!\\n  saisonsConnection(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SaisonConnection!\\n  serie(where: SerieWhereUniqueInput!): Serie\\n  series(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Serie]!\\n  seriesConnection(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieConnection!\\n  serieUser(where: SerieUserWhereUniqueInput!): SerieUser\\n  serieUsers(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser]!\\n  serieUsersConnection(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieUserConnection!\\n  user(where: UserWhereUniqueInput!): User\\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\\n  node(id: ID!): Node\\n}\\n\\ntype Saison {\\n  id: ID!\\n  number: String!\\n  serie: Serie!\\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\\n}\\n\\ntype SaisonConnection {\\n  pageInfo: PageInfo!\\n  edges: [SaisonEdge]!\\n  aggregate: AggregateSaison!\\n}\\n\\ninput SaisonCreateInput {\\n  number: String!\\n  serie: SerieCreateOneWithoutSaisonsInput!\\n  episodes: EpisodeCreateManyWithoutSaisonInput\\n}\\n\\ninput SaisonCreateManyWithoutSerieInput {\\n  create: [SaisonCreateWithoutSerieInput!]\\n  connect: [SaisonWhereUniqueInput!]\\n}\\n\\ninput SaisonCreateOneWithoutEpisodesInput {\\n  create: SaisonCreateWithoutEpisodesInput\\n  connect: SaisonWhereUniqueInput\\n}\\n\\ninput SaisonCreateWithoutEpisodesInput {\\n  number: String!\\n  serie: SerieCreateOneWithoutSaisonsInput!\\n}\\n\\ninput SaisonCreateWithoutSerieInput {\\n  number: String!\\n  episodes: EpisodeCreateManyWithoutSaisonInput\\n}\\n\\ntype SaisonEdge {\\n  node: Saison!\\n  cursor: String!\\n}\\n\\nenum SaisonOrderByInput {\\n  id_ASC\\n  id_DESC\\n  number_ASC\\n  number_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype SaisonPreviousValues {\\n  id: ID!\\n  number: String!\\n}\\n\\ninput SaisonScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  number: String\\n  number_not: String\\n  number_in: [String!]\\n  number_not_in: [String!]\\n  number_lt: String\\n  number_lte: String\\n  number_gt: String\\n  number_gte: String\\n  number_contains: String\\n  number_not_contains: String\\n  number_starts_with: String\\n  number_not_starts_with: String\\n  number_ends_with: String\\n  number_not_ends_with: String\\n  AND: [SaisonScalarWhereInput!]\\n  OR: [SaisonScalarWhereInput!]\\n  NOT: [SaisonScalarWhereInput!]\\n}\\n\\ntype SaisonSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Saison\\n  updatedFields: [String!]\\n  previousValues: SaisonPreviousValues\\n}\\n\\ninput SaisonSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SaisonWhereInput\\n  AND: [SaisonSubscriptionWhereInput!]\\n  OR: [SaisonSubscriptionWhereInput!]\\n  NOT: [SaisonSubscriptionWhereInput!]\\n}\\n\\ninput SaisonUpdateInput {\\n  number: String\\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\\n  episodes: EpisodeUpdateManyWithoutSaisonInput\\n}\\n\\ninput SaisonUpdateManyDataInput {\\n  number: String\\n}\\n\\ninput SaisonUpdateManyMutationInput {\\n  number: String\\n}\\n\\ninput SaisonUpdateManyWithoutSerieInput {\\n  create: [SaisonCreateWithoutSerieInput!]\\n  delete: [SaisonWhereUniqueInput!]\\n  connect: [SaisonWhereUniqueInput!]\\n  set: [SaisonWhereUniqueInput!]\\n  disconnect: [SaisonWhereUniqueInput!]\\n  update: [SaisonUpdateWithWhereUniqueWithoutSerieInput!]\\n  upsert: [SaisonUpsertWithWhereUniqueWithoutSerieInput!]\\n  deleteMany: [SaisonScalarWhereInput!]\\n  updateMany: [SaisonUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput SaisonUpdateManyWithWhereNestedInput {\\n  where: SaisonScalarWhereInput!\\n  data: SaisonUpdateManyDataInput!\\n}\\n\\ninput SaisonUpdateOneRequiredWithoutEpisodesInput {\\n  create: SaisonCreateWithoutEpisodesInput\\n  update: SaisonUpdateWithoutEpisodesDataInput\\n  upsert: SaisonUpsertWithoutEpisodesInput\\n  connect: SaisonWhereUniqueInput\\n}\\n\\ninput SaisonUpdateWithoutEpisodesDataInput {\\n  number: String\\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\\n}\\n\\ninput SaisonUpdateWithoutSerieDataInput {\\n  number: String\\n  episodes: EpisodeUpdateManyWithoutSaisonInput\\n}\\n\\ninput SaisonUpdateWithWhereUniqueWithoutSerieInput {\\n  where: SaisonWhereUniqueInput!\\n  data: SaisonUpdateWithoutSerieDataInput!\\n}\\n\\ninput SaisonUpsertWithoutEpisodesInput {\\n  update: SaisonUpdateWithoutEpisodesDataInput!\\n  create: SaisonCreateWithoutEpisodesInput!\\n}\\n\\ninput SaisonUpsertWithWhereUniqueWithoutSerieInput {\\n  where: SaisonWhereUniqueInput!\\n  update: SaisonUpdateWithoutSerieDataInput!\\n  create: SaisonCreateWithoutSerieInput!\\n}\\n\\ninput SaisonWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  number: String\\n  number_not: String\\n  number_in: [String!]\\n  number_not_in: [String!]\\n  number_lt: String\\n  number_lte: String\\n  number_gt: String\\n  number_gte: String\\n  number_contains: String\\n  number_not_contains: String\\n  number_starts_with: String\\n  number_not_starts_with: String\\n  number_ends_with: String\\n  number_not_ends_with: String\\n  serie: SerieWhereInput\\n  episodes_every: EpisodeWhereInput\\n  episodes_some: EpisodeWhereInput\\n  episodes_none: EpisodeWhereInput\\n  AND: [SaisonWhereInput!]\\n  OR: [SaisonWhereInput!]\\n  NOT: [SaisonWhereInput!]\\n}\\n\\ninput SaisonWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Serie {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison!]\\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\\n}\\n\\ntype SerieConnection {\\n  pageInfo: PageInfo!\\n  edges: [SerieEdge]!\\n  aggregate: AggregateSerie!\\n}\\n\\ninput SerieCreateInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  saisons: SaisonCreateManyWithoutSerieInput\\n  episodes: EpisodeCreateManyWithoutSerieInput\\n}\\n\\ninput SerieCreateOneInput {\\n  create: SerieCreateInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieCreateOneWithoutEpisodesInput {\\n  create: SerieCreateWithoutEpisodesInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieCreateOneWithoutSaisonsInput {\\n  create: SerieCreateWithoutSaisonsInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieCreateWithoutEpisodesInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  saisons: SaisonCreateManyWithoutSerieInput\\n}\\n\\ninput SerieCreateWithoutSaisonsInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  episodes: EpisodeCreateManyWithoutSerieInput\\n}\\n\\ntype SerieEdge {\\n  node: Serie!\\n  cursor: String!\\n}\\n\\nenum SerieOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n  genre_ASC\\n  genre_DESC\\n  description_ASC\\n  description_DESC\\n  nbEp_ASC\\n  nbEp_DESC\\n  nbSais_ASC\\n  nbSais_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype SeriePreviousValues {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n}\\n\\ntype SerieSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Serie\\n  updatedFields: [String!]\\n  previousValues: SeriePreviousValues\\n}\\n\\ninput SerieSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SerieWhereInput\\n  AND: [SerieSubscriptionWhereInput!]\\n  OR: [SerieSubscriptionWhereInput!]\\n  NOT: [SerieSubscriptionWhereInput!]\\n}\\n\\ninput SerieUpdateDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  saisons: SaisonUpdateManyWithoutSerieInput\\n  episodes: EpisodeUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpdateInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  saisons: SaisonUpdateManyWithoutSerieInput\\n  episodes: EpisodeUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpdateManyMutationInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n}\\n\\ninput SerieUpdateOneRequiredInput {\\n  create: SerieCreateInput\\n  update: SerieUpdateDataInput\\n  upsert: SerieUpsertNestedInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieUpdateOneRequiredWithoutEpisodesInput {\\n  create: SerieCreateWithoutEpisodesInput\\n  update: SerieUpdateWithoutEpisodesDataInput\\n  upsert: SerieUpsertWithoutEpisodesInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieUpdateOneRequiredWithoutSaisonsInput {\\n  create: SerieCreateWithoutSaisonsInput\\n  update: SerieUpdateWithoutSaisonsDataInput\\n  upsert: SerieUpsertWithoutSaisonsInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieUpdateWithoutEpisodesDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  saisons: SaisonUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpdateWithoutSaisonsDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  episodes: EpisodeUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpsertNestedInput {\\n  update: SerieUpdateDataInput!\\n  create: SerieCreateInput!\\n}\\n\\ninput SerieUpsertWithoutEpisodesInput {\\n  update: SerieUpdateWithoutEpisodesDataInput!\\n  create: SerieCreateWithoutEpisodesInput!\\n}\\n\\ninput SerieUpsertWithoutSaisonsInput {\\n  update: SerieUpdateWithoutSaisonsDataInput!\\n  create: SerieCreateWithoutSaisonsInput!\\n}\\n\\ntype SerieUser {\\n  id: ID!\\n  finish: Boolean\\n  serie: Serie!\\n  user: User!\\n}\\n\\ntype SerieUserConnection {\\n  pageInfo: PageInfo!\\n  edges: [SerieUserEdge]!\\n  aggregate: AggregateSerieUser!\\n}\\n\\ninput SerieUserCreateInput {\\n  finish: Boolean\\n  serie: SerieCreateOneInput!\\n  user: UserCreateOneWithoutSerieInput!\\n}\\n\\ninput SerieUserCreateManyWithoutUserInput {\\n  create: [SerieUserCreateWithoutUserInput!]\\n  connect: [SerieUserWhereUniqueInput!]\\n}\\n\\ninput SerieUserCreateWithoutUserInput {\\n  finish: Boolean\\n  serie: SerieCreateOneInput!\\n}\\n\\ntype SerieUserEdge {\\n  node: SerieUser!\\n  cursor: String!\\n}\\n\\nenum SerieUserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  finish_ASC\\n  finish_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype SerieUserPreviousValues {\\n  id: ID!\\n  finish: Boolean\\n}\\n\\ninput SerieUserScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  AND: [SerieUserScalarWhereInput!]\\n  OR: [SerieUserScalarWhereInput!]\\n  NOT: [SerieUserScalarWhereInput!]\\n}\\n\\ntype SerieUserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: SerieUser\\n  updatedFields: [String!]\\n  previousValues: SerieUserPreviousValues\\n}\\n\\ninput SerieUserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SerieUserWhereInput\\n  AND: [SerieUserSubscriptionWhereInput!]\\n  OR: [SerieUserSubscriptionWhereInput!]\\n  NOT: [SerieUserSubscriptionWhereInput!]\\n}\\n\\ninput SerieUserUpdateInput {\\n  finish: Boolean\\n  serie: SerieUpdateOneRequiredInput\\n  user: UserUpdateOneRequiredWithoutSerieInput\\n}\\n\\ninput SerieUserUpdateManyDataInput {\\n  finish: Boolean\\n}\\n\\ninput SerieUserUpdateManyMutationInput {\\n  finish: Boolean\\n}\\n\\ninput SerieUserUpdateManyWithoutUserInput {\\n  create: [SerieUserCreateWithoutUserInput!]\\n  delete: [SerieUserWhereUniqueInput!]\\n  connect: [SerieUserWhereUniqueInput!]\\n  set: [SerieUserWhereUniqueInput!]\\n  disconnect: [SerieUserWhereUniqueInput!]\\n  update: [SerieUserUpdateWithWhereUniqueWithoutUserInput!]\\n  upsert: [SerieUserUpsertWithWhereUniqueWithoutUserInput!]\\n  deleteMany: [SerieUserScalarWhereInput!]\\n  updateMany: [SerieUserUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput SerieUserUpdateManyWithWhereNestedInput {\\n  where: SerieUserScalarWhereInput!\\n  data: SerieUserUpdateManyDataInput!\\n}\\n\\ninput SerieUserUpdateWithoutUserDataInput {\\n  finish: Boolean\\n  serie: SerieUpdateOneRequiredInput\\n}\\n\\ninput SerieUserUpdateWithWhereUniqueWithoutUserInput {\\n  where: SerieUserWhereUniqueInput!\\n  data: SerieUserUpdateWithoutUserDataInput!\\n}\\n\\ninput SerieUserUpsertWithWhereUniqueWithoutUserInput {\\n  where: SerieUserWhereUniqueInput!\\n  update: SerieUserUpdateWithoutUserDataInput!\\n  create: SerieUserCreateWithoutUserInput!\\n}\\n\\ninput SerieUserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  serie: SerieWhereInput\\n  user: UserWhereInput\\n  AND: [SerieUserWhereInput!]\\n  OR: [SerieUserWhereInput!]\\n  NOT: [SerieUserWhereInput!]\\n}\\n\\ninput SerieUserWhereUniqueInput {\\n  id: ID\\n}\\n\\ninput SerieWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  genre: String\\n  genre_not: String\\n  genre_in: [String!]\\n  genre_not_in: [String!]\\n  genre_lt: String\\n  genre_lte: String\\n  genre_gt: String\\n  genre_gte: String\\n  genre_contains: String\\n  genre_not_contains: String\\n  genre_starts_with: String\\n  genre_not_starts_with: String\\n  genre_ends_with: String\\n  genre_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  nbEp: String\\n  nbEp_not: String\\n  nbEp_in: [String!]\\n  nbEp_not_in: [String!]\\n  nbEp_lt: String\\n  nbEp_lte: String\\n  nbEp_gt: String\\n  nbEp_gte: String\\n  nbEp_contains: String\\n  nbEp_not_contains: String\\n  nbEp_starts_with: String\\n  nbEp_not_starts_with: String\\n  nbEp_ends_with: String\\n  nbEp_not_ends_with: String\\n  nbSais: String\\n  nbSais_not: String\\n  nbSais_in: [String!]\\n  nbSais_not_in: [String!]\\n  nbSais_lt: String\\n  nbSais_lte: String\\n  nbSais_gt: String\\n  nbSais_gte: String\\n  nbSais_contains: String\\n  nbSais_not_contains: String\\n  nbSais_starts_with: String\\n  nbSais_not_starts_with: String\\n  nbSais_ends_with: String\\n  nbSais_not_ends_with: String\\n  saisons_every: SaisonWhereInput\\n  saisons_some: SaisonWhereInput\\n  saisons_none: SaisonWhereInput\\n  episodes_every: EpisodeWhereInput\\n  episodes_some: EpisodeWhereInput\\n  episodes_none: EpisodeWhereInput\\n  AND: [SerieWhereInput!]\\n  OR: [SerieWhereInput!]\\n  NOT: [SerieWhereInput!]\\n}\\n\\ninput SerieWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Subscription {\\n  episode(where: EpisodeSubscriptionWhereInput): EpisodeSubscriptionPayload\\n  film(where: FilmSubscriptionWhereInput): FilmSubscriptionPayload\\n  filmUser(where: FilmUserSubscriptionWhereInput): FilmUserSubscriptionPayload\\n  saison(where: SaisonSubscriptionWhereInput): SaisonSubscriptionPayload\\n  serie(where: SerieSubscriptionWhereInput): SerieSubscriptionPayload\\n  serieUser(where: SerieUserSubscriptionWhereInput): SerieUserSubscriptionPayload\\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\\n}\\n\\ntype User {\\n  id: ID!\\n  email: String!\\n  password: String!\\n  username: String!\\n  serie(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser!]\\n  film(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser!]\\n}\\n\\ntype UserConnection {\\n  pageInfo: PageInfo!\\n  edges: [UserEdge]!\\n  aggregate: AggregateUser!\\n}\\n\\ninput UserCreateInput {\\n  email: String!\\n  password: String!\\n  username: String!\\n  serie: SerieUserCreateManyWithoutUserInput\\n  film: FilmUserCreateManyWithoutUserInput\\n}\\n\\ninput UserCreateOneWithoutFilmInput {\\n  create: UserCreateWithoutFilmInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserCreateOneWithoutSerieInput {\\n  create: UserCreateWithoutSerieInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserCreateWithoutFilmInput {\\n  email: String!\\n  password: String!\\n  username: String!\\n  serie: SerieUserCreateManyWithoutUserInput\\n}\\n\\ninput UserCreateWithoutSerieInput {\\n  email: String!\\n  password: String!\\n  username: String!\\n  film: FilmUserCreateManyWithoutUserInput\\n}\\n\\ntype UserEdge {\\n  node: User!\\n  cursor: String!\\n}\\n\\nenum UserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  email_ASC\\n  email_DESC\\n  password_ASC\\n  password_DESC\\n  username_ASC\\n  username_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype UserPreviousValues {\\n  id: ID!\\n  email: String!\\n  password: String!\\n  username: String!\\n}\\n\\ntype UserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: User\\n  updatedFields: [String!]\\n  previousValues: UserPreviousValues\\n}\\n\\ninput UserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: UserWhereInput\\n  AND: [UserSubscriptionWhereInput!]\\n  OR: [UserSubscriptionWhereInput!]\\n  NOT: [UserSubscriptionWhereInput!]\\n}\\n\\ninput UserUpdateInput {\\n  email: String\\n  password: String\\n  username: String\\n  serie: SerieUserUpdateManyWithoutUserInput\\n  film: FilmUserUpdateManyWithoutUserInput\\n}\\n\\ninput UserUpdateManyMutationInput {\\n  email: String\\n  password: String\\n  username: String\\n}\\n\\ninput UserUpdateOneRequiredWithoutFilmInput {\\n  create: UserCreateWithoutFilmInput\\n  update: UserUpdateWithoutFilmDataInput\\n  upsert: UserUpsertWithoutFilmInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserUpdateOneRequiredWithoutSerieInput {\\n  create: UserCreateWithoutSerieInput\\n  update: UserUpdateWithoutSerieDataInput\\n  upsert: UserUpsertWithoutSerieInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserUpdateWithoutFilmDataInput {\\n  email: String\\n  password: String\\n  username: String\\n  serie: SerieUserUpdateManyWithoutUserInput\\n}\\n\\ninput UserUpdateWithoutSerieDataInput {\\n  email: String\\n  password: String\\n  username: String\\n  film: FilmUserUpdateManyWithoutUserInput\\n}\\n\\ninput UserUpsertWithoutFilmInput {\\n  update: UserUpdateWithoutFilmDataInput!\\n  create: UserCreateWithoutFilmInput!\\n}\\n\\ninput UserUpsertWithoutSerieInput {\\n  update: UserUpdateWithoutSerieDataInput!\\n  create: UserCreateWithoutSerieInput!\\n}\\n\\ninput UserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  email: String\\n  email_not: String\\n  email_in: [String!]\\n  email_not_in: [String!]\\n  email_lt: String\\n  email_lte: String\\n  email_gt: String\\n  email_gte: String\\n  email_contains: String\\n  email_not_contains: String\\n  email_starts_with: String\\n  email_not_starts_with: String\\n  email_ends_with: String\\n  email_not_ends_with: String\\n  password: String\\n  password_not: String\\n  password_in: [String!]\\n  password_not_in: [String!]\\n  password_lt: String\\n  password_lte: String\\n  password_gt: String\\n  password_gte: String\\n  password_contains: String\\n  password_not_contains: String\\n  password_starts_with: String\\n  password_not_starts_with: String\\n  password_ends_with: String\\n  password_not_ends_with: String\\n  username: String\\n  username_not: String\\n  username_in: [String!]\\n  username_not_in: [String!]\\n  username_lt: String\\n  username_lte: String\\n  username_gt: String\\n  username_gte: String\\n  username_contains: String\\n  username_not_contains: String\\n  username_starts_with: String\\n  username_not_starts_with: String\\n  username_ends_with: String\\n  username_not_ends_with: String\\n  serie_every: SerieUserWhereInput\\n  serie_some: SerieUserWhereInput\\n  serie_none: SerieUserWhereInput\\n  film_every: FilmUserWhereInput\\n  film_some: FilmUserWhereInput\\n  film_none: FilmUserWhereInput\\n  AND: [UserWhereInput!]\\n  OR: [UserWhereInput!]\\n  NOT: [UserWhereInput!]\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: ID\\n  email: String\\n  username: String\\n}\\n\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "prisma-schema.js"
      ],
      "names": [
        "module",
        "exports",
        "typeDefs"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACTC,EAAAA,QAAQ,EAAE;AAChB;AACA;;AAEF;AAJgB;AADC,CAAjB",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/generated/prisma-client",
      "sourcesContent": [
        "module.exports = {\n        typeDefs: // Code generated by Prisma (prisma@1.27.4). DO NOT EDIT.\n  // Please don't change this file manually but run `prisma generate` to update it.\n  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/\n\n/* GraphQL */ `type AggregateEpisode {\n  count: Int!\n}\n\ntype AggregateFilm {\n  count: Int!\n}\n\ntype AggregateFilmUser {\n  count: Int!\n}\n\ntype AggregateSaison {\n  count: Int!\n}\n\ntype AggregateSerie {\n  count: Int!\n}\n\ntype AggregateSerieUser {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Episode {\n  id: ID!\n  name: String!\n  description: String!\n  saison: Saison!\n  serie: Serie!\n}\n\ntype EpisodeConnection {\n  pageInfo: PageInfo!\n  edges: [EpisodeEdge]!\n  aggregate: AggregateEpisode!\n}\n\ninput EpisodeCreateInput {\n  name: String!\n  description: String!\n  saison: SaisonCreateOneWithoutEpisodesInput!\n  serie: SerieCreateOneWithoutEpisodesInput!\n}\n\ninput EpisodeCreateManyWithoutSaisonInput {\n  create: [EpisodeCreateWithoutSaisonInput!]\n  connect: [EpisodeWhereUniqueInput!]\n}\n\ninput EpisodeCreateManyWithoutSerieInput {\n  create: [EpisodeCreateWithoutSerieInput!]\n  connect: [EpisodeWhereUniqueInput!]\n}\n\ninput EpisodeCreateWithoutSaisonInput {\n  name: String!\n  description: String!\n  serie: SerieCreateOneWithoutEpisodesInput!\n}\n\ninput EpisodeCreateWithoutSerieInput {\n  name: String!\n  description: String!\n  saison: SaisonCreateOneWithoutEpisodesInput!\n}\n\ntype EpisodeEdge {\n  node: Episode!\n  cursor: String!\n}\n\nenum EpisodeOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype EpisodePreviousValues {\n  id: ID!\n  name: String!\n  description: String!\n}\n\ninput EpisodeScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  AND: [EpisodeScalarWhereInput!]\n  OR: [EpisodeScalarWhereInput!]\n  NOT: [EpisodeScalarWhereInput!]\n}\n\ntype EpisodeSubscriptionPayload {\n  mutation: MutationType!\n  node: Episode\n  updatedFields: [String!]\n  previousValues: EpisodePreviousValues\n}\n\ninput EpisodeSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: EpisodeWhereInput\n  AND: [EpisodeSubscriptionWhereInput!]\n  OR: [EpisodeSubscriptionWhereInput!]\n  NOT: [EpisodeSubscriptionWhereInput!]\n}\n\ninput EpisodeUpdateInput {\n  name: String\n  description: String\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\n}\n\ninput EpisodeUpdateManyDataInput {\n  name: String\n  description: String\n}\n\ninput EpisodeUpdateManyMutationInput {\n  name: String\n  description: String\n}\n\ninput EpisodeUpdateManyWithoutSaisonInput {\n  create: [EpisodeCreateWithoutSaisonInput!]\n  delete: [EpisodeWhereUniqueInput!]\n  connect: [EpisodeWhereUniqueInput!]\n  set: [EpisodeWhereUniqueInput!]\n  disconnect: [EpisodeWhereUniqueInput!]\n  update: [EpisodeUpdateWithWhereUniqueWithoutSaisonInput!]\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSaisonInput!]\n  deleteMany: [EpisodeScalarWhereInput!]\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\n}\n\ninput EpisodeUpdateManyWithoutSerieInput {\n  create: [EpisodeCreateWithoutSerieInput!]\n  delete: [EpisodeWhereUniqueInput!]\n  connect: [EpisodeWhereUniqueInput!]\n  set: [EpisodeWhereUniqueInput!]\n  disconnect: [EpisodeWhereUniqueInput!]\n  update: [EpisodeUpdateWithWhereUniqueWithoutSerieInput!]\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSerieInput!]\n  deleteMany: [EpisodeScalarWhereInput!]\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\n}\n\ninput EpisodeUpdateManyWithWhereNestedInput {\n  where: EpisodeScalarWhereInput!\n  data: EpisodeUpdateManyDataInput!\n}\n\ninput EpisodeUpdateWithoutSaisonDataInput {\n  name: String\n  description: String\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\n}\n\ninput EpisodeUpdateWithoutSerieDataInput {\n  name: String\n  description: String\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\n}\n\ninput EpisodeUpdateWithWhereUniqueWithoutSaisonInput {\n  where: EpisodeWhereUniqueInput!\n  data: EpisodeUpdateWithoutSaisonDataInput!\n}\n\ninput EpisodeUpdateWithWhereUniqueWithoutSerieInput {\n  where: EpisodeWhereUniqueInput!\n  data: EpisodeUpdateWithoutSerieDataInput!\n}\n\ninput EpisodeUpsertWithWhereUniqueWithoutSaisonInput {\n  where: EpisodeWhereUniqueInput!\n  update: EpisodeUpdateWithoutSaisonDataInput!\n  create: EpisodeCreateWithoutSaisonInput!\n}\n\ninput EpisodeUpsertWithWhereUniqueWithoutSerieInput {\n  where: EpisodeWhereUniqueInput!\n  update: EpisodeUpdateWithoutSerieDataInput!\n  create: EpisodeCreateWithoutSerieInput!\n}\n\ninput EpisodeWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  saison: SaisonWhereInput\n  serie: SerieWhereInput\n  AND: [EpisodeWhereInput!]\n  OR: [EpisodeWhereInput!]\n  NOT: [EpisodeWhereInput!]\n}\n\ninput EpisodeWhereUniqueInput {\n  id: ID\n}\n\ntype Film {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n}\n\ntype FilmConnection {\n  pageInfo: PageInfo!\n  edges: [FilmEdge]!\n  aggregate: AggregateFilm!\n}\n\ninput FilmCreateInput {\n  name: String!\n  genre: String!\n  description: String!\n}\n\ninput FilmCreateOneInput {\n  create: FilmCreateInput\n  connect: FilmWhereUniqueInput\n}\n\ntype FilmEdge {\n  node: Film!\n  cursor: String!\n}\n\nenum FilmOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  genre_ASC\n  genre_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FilmPreviousValues {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n}\n\ntype FilmSubscriptionPayload {\n  mutation: MutationType!\n  node: Film\n  updatedFields: [String!]\n  previousValues: FilmPreviousValues\n}\n\ninput FilmSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FilmWhereInput\n  AND: [FilmSubscriptionWhereInput!]\n  OR: [FilmSubscriptionWhereInput!]\n  NOT: [FilmSubscriptionWhereInput!]\n}\n\ninput FilmUpdateDataInput {\n  name: String\n  genre: String\n  description: String\n}\n\ninput FilmUpdateInput {\n  name: String\n  genre: String\n  description: String\n}\n\ninput FilmUpdateManyMutationInput {\n  name: String\n  genre: String\n  description: String\n}\n\ninput FilmUpdateOneRequiredInput {\n  create: FilmCreateInput\n  update: FilmUpdateDataInput\n  upsert: FilmUpsertNestedInput\n  connect: FilmWhereUniqueInput\n}\n\ninput FilmUpsertNestedInput {\n  update: FilmUpdateDataInput!\n  create: FilmCreateInput!\n}\n\ntype FilmUser {\n  id: ID!\n  finish: Boolean\n  film: Film!\n  user: User!\n}\n\ntype FilmUserConnection {\n  pageInfo: PageInfo!\n  edges: [FilmUserEdge]!\n  aggregate: AggregateFilmUser!\n}\n\ninput FilmUserCreateInput {\n  finish: Boolean\n  film: FilmCreateOneInput!\n  user: UserCreateOneWithoutFilmInput!\n}\n\ninput FilmUserCreateManyWithoutUserInput {\n  create: [FilmUserCreateWithoutUserInput!]\n  connect: [FilmUserWhereUniqueInput!]\n}\n\ninput FilmUserCreateWithoutUserInput {\n  finish: Boolean\n  film: FilmCreateOneInput!\n}\n\ntype FilmUserEdge {\n  node: FilmUser!\n  cursor: String!\n}\n\nenum FilmUserOrderByInput {\n  id_ASC\n  id_DESC\n  finish_ASC\n  finish_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FilmUserPreviousValues {\n  id: ID!\n  finish: Boolean\n}\n\ninput FilmUserScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  AND: [FilmUserScalarWhereInput!]\n  OR: [FilmUserScalarWhereInput!]\n  NOT: [FilmUserScalarWhereInput!]\n}\n\ntype FilmUserSubscriptionPayload {\n  mutation: MutationType!\n  node: FilmUser\n  updatedFields: [String!]\n  previousValues: FilmUserPreviousValues\n}\n\ninput FilmUserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FilmUserWhereInput\n  AND: [FilmUserSubscriptionWhereInput!]\n  OR: [FilmUserSubscriptionWhereInput!]\n  NOT: [FilmUserSubscriptionWhereInput!]\n}\n\ninput FilmUserUpdateInput {\n  finish: Boolean\n  film: FilmUpdateOneRequiredInput\n  user: UserUpdateOneRequiredWithoutFilmInput\n}\n\ninput FilmUserUpdateManyDataInput {\n  finish: Boolean\n}\n\ninput FilmUserUpdateManyMutationInput {\n  finish: Boolean\n}\n\ninput FilmUserUpdateManyWithoutUserInput {\n  create: [FilmUserCreateWithoutUserInput!]\n  delete: [FilmUserWhereUniqueInput!]\n  connect: [FilmUserWhereUniqueInput!]\n  set: [FilmUserWhereUniqueInput!]\n  disconnect: [FilmUserWhereUniqueInput!]\n  update: [FilmUserUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [FilmUserUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [FilmUserScalarWhereInput!]\n  updateMany: [FilmUserUpdateManyWithWhereNestedInput!]\n}\n\ninput FilmUserUpdateManyWithWhereNestedInput {\n  where: FilmUserScalarWhereInput!\n  data: FilmUserUpdateManyDataInput!\n}\n\ninput FilmUserUpdateWithoutUserDataInput {\n  finish: Boolean\n  film: FilmUpdateOneRequiredInput\n}\n\ninput FilmUserUpdateWithWhereUniqueWithoutUserInput {\n  where: FilmUserWhereUniqueInput!\n  data: FilmUserUpdateWithoutUserDataInput!\n}\n\ninput FilmUserUpsertWithWhereUniqueWithoutUserInput {\n  where: FilmUserWhereUniqueInput!\n  update: FilmUserUpdateWithoutUserDataInput!\n  create: FilmUserCreateWithoutUserInput!\n}\n\ninput FilmUserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  film: FilmWhereInput\n  user: UserWhereInput\n  AND: [FilmUserWhereInput!]\n  OR: [FilmUserWhereInput!]\n  NOT: [FilmUserWhereInput!]\n}\n\ninput FilmUserWhereUniqueInput {\n  id: ID\n}\n\ninput FilmWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  genre: String\n  genre_not: String\n  genre_in: [String!]\n  genre_not_in: [String!]\n  genre_lt: String\n  genre_lte: String\n  genre_gt: String\n  genre_gte: String\n  genre_contains: String\n  genre_not_contains: String\n  genre_starts_with: String\n  genre_not_starts_with: String\n  genre_ends_with: String\n  genre_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  AND: [FilmWhereInput!]\n  OR: [FilmWhereInput!]\n  NOT: [FilmWhereInput!]\n}\n\ninput FilmWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createEpisode(data: EpisodeCreateInput!): Episode!\n  updateEpisode(data: EpisodeUpdateInput!, where: EpisodeWhereUniqueInput!): Episode\n  updateManyEpisodes(data: EpisodeUpdateManyMutationInput!, where: EpisodeWhereInput): BatchPayload!\n  upsertEpisode(where: EpisodeWhereUniqueInput!, create: EpisodeCreateInput!, update: EpisodeUpdateInput!): Episode!\n  deleteEpisode(where: EpisodeWhereUniqueInput!): Episode\n  deleteManyEpisodes(where: EpisodeWhereInput): BatchPayload!\n  createFilm(data: FilmCreateInput!): Film!\n  updateFilm(data: FilmUpdateInput!, where: FilmWhereUniqueInput!): Film\n  updateManyFilms(data: FilmUpdateManyMutationInput!, where: FilmWhereInput): BatchPayload!\n  upsertFilm(where: FilmWhereUniqueInput!, create: FilmCreateInput!, update: FilmUpdateInput!): Film!\n  deleteFilm(where: FilmWhereUniqueInput!): Film\n  deleteManyFilms(where: FilmWhereInput): BatchPayload!\n  createFilmUser(data: FilmUserCreateInput!): FilmUser!\n  updateFilmUser(data: FilmUserUpdateInput!, where: FilmUserWhereUniqueInput!): FilmUser\n  updateManyFilmUsers(data: FilmUserUpdateManyMutationInput!, where: FilmUserWhereInput): BatchPayload!\n  upsertFilmUser(where: FilmUserWhereUniqueInput!, create: FilmUserCreateInput!, update: FilmUserUpdateInput!): FilmUser!\n  deleteFilmUser(where: FilmUserWhereUniqueInput!): FilmUser\n  deleteManyFilmUsers(where: FilmUserWhereInput): BatchPayload!\n  createSaison(data: SaisonCreateInput!): Saison!\n  updateSaison(data: SaisonUpdateInput!, where: SaisonWhereUniqueInput!): Saison\n  updateManySaisons(data: SaisonUpdateManyMutationInput!, where: SaisonWhereInput): BatchPayload!\n  upsertSaison(where: SaisonWhereUniqueInput!, create: SaisonCreateInput!, update: SaisonUpdateInput!): Saison!\n  deleteSaison(where: SaisonWhereUniqueInput!): Saison\n  deleteManySaisons(where: SaisonWhereInput): BatchPayload!\n  createSerie(data: SerieCreateInput!): Serie!\n  updateSerie(data: SerieUpdateInput!, where: SerieWhereUniqueInput!): Serie\n  updateManySeries(data: SerieUpdateManyMutationInput!, where: SerieWhereInput): BatchPayload!\n  upsertSerie(where: SerieWhereUniqueInput!, create: SerieCreateInput!, update: SerieUpdateInput!): Serie!\n  deleteSerie(where: SerieWhereUniqueInput!): Serie\n  deleteManySeries(where: SerieWhereInput): BatchPayload!\n  createSerieUser(data: SerieUserCreateInput!): SerieUser!\n  updateSerieUser(data: SerieUserUpdateInput!, where: SerieUserWhereUniqueInput!): SerieUser\n  updateManySerieUsers(data: SerieUserUpdateManyMutationInput!, where: SerieUserWhereInput): BatchPayload!\n  upsertSerieUser(where: SerieUserWhereUniqueInput!, create: SerieUserCreateInput!, update: SerieUserUpdateInput!): SerieUser!\n  deleteSerieUser(where: SerieUserWhereUniqueInput!): SerieUser\n  deleteManySerieUsers(where: SerieUserWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  episode(where: EpisodeWhereUniqueInput!): Episode\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode]!\n  episodesConnection(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EpisodeConnection!\n  film(where: FilmWhereUniqueInput!): Film\n  films(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Film]!\n  filmsConnection(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmConnection!\n  filmUser(where: FilmUserWhereUniqueInput!): FilmUser\n  filmUsers(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser]!\n  filmUsersConnection(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmUserConnection!\n  saison(where: SaisonWhereUniqueInput!): Saison\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison]!\n  saisonsConnection(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SaisonConnection!\n  serie(where: SerieWhereUniqueInput!): Serie\n  series(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Serie]!\n  seriesConnection(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieConnection!\n  serieUser(where: SerieUserWhereUniqueInput!): SerieUser\n  serieUsers(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser]!\n  serieUsersConnection(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieUserConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Saison {\n  id: ID!\n  number: String!\n  serie: Serie!\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\n}\n\ntype SaisonConnection {\n  pageInfo: PageInfo!\n  edges: [SaisonEdge]!\n  aggregate: AggregateSaison!\n}\n\ninput SaisonCreateInput {\n  number: String!\n  serie: SerieCreateOneWithoutSaisonsInput!\n  episodes: EpisodeCreateManyWithoutSaisonInput\n}\n\ninput SaisonCreateManyWithoutSerieInput {\n  create: [SaisonCreateWithoutSerieInput!]\n  connect: [SaisonWhereUniqueInput!]\n}\n\ninput SaisonCreateOneWithoutEpisodesInput {\n  create: SaisonCreateWithoutEpisodesInput\n  connect: SaisonWhereUniqueInput\n}\n\ninput SaisonCreateWithoutEpisodesInput {\n  number: String!\n  serie: SerieCreateOneWithoutSaisonsInput!\n}\n\ninput SaisonCreateWithoutSerieInput {\n  number: String!\n  episodes: EpisodeCreateManyWithoutSaisonInput\n}\n\ntype SaisonEdge {\n  node: Saison!\n  cursor: String!\n}\n\nenum SaisonOrderByInput {\n  id_ASC\n  id_DESC\n  number_ASC\n  number_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SaisonPreviousValues {\n  id: ID!\n  number: String!\n}\n\ninput SaisonScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  AND: [SaisonScalarWhereInput!]\n  OR: [SaisonScalarWhereInput!]\n  NOT: [SaisonScalarWhereInput!]\n}\n\ntype SaisonSubscriptionPayload {\n  mutation: MutationType!\n  node: Saison\n  updatedFields: [String!]\n  previousValues: SaisonPreviousValues\n}\n\ninput SaisonSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SaisonWhereInput\n  AND: [SaisonSubscriptionWhereInput!]\n  OR: [SaisonSubscriptionWhereInput!]\n  NOT: [SaisonSubscriptionWhereInput!]\n}\n\ninput SaisonUpdateInput {\n  number: String\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\n  episodes: EpisodeUpdateManyWithoutSaisonInput\n}\n\ninput SaisonUpdateManyDataInput {\n  number: String\n}\n\ninput SaisonUpdateManyMutationInput {\n  number: String\n}\n\ninput SaisonUpdateManyWithoutSerieInput {\n  create: [SaisonCreateWithoutSerieInput!]\n  delete: [SaisonWhereUniqueInput!]\n  connect: [SaisonWhereUniqueInput!]\n  set: [SaisonWhereUniqueInput!]\n  disconnect: [SaisonWhereUniqueInput!]\n  update: [SaisonUpdateWithWhereUniqueWithoutSerieInput!]\n  upsert: [SaisonUpsertWithWhereUniqueWithoutSerieInput!]\n  deleteMany: [SaisonScalarWhereInput!]\n  updateMany: [SaisonUpdateManyWithWhereNestedInput!]\n}\n\ninput SaisonUpdateManyWithWhereNestedInput {\n  where: SaisonScalarWhereInput!\n  data: SaisonUpdateManyDataInput!\n}\n\ninput SaisonUpdateOneRequiredWithoutEpisodesInput {\n  create: SaisonCreateWithoutEpisodesInput\n  update: SaisonUpdateWithoutEpisodesDataInput\n  upsert: SaisonUpsertWithoutEpisodesInput\n  connect: SaisonWhereUniqueInput\n}\n\ninput SaisonUpdateWithoutEpisodesDataInput {\n  number: String\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\n}\n\ninput SaisonUpdateWithoutSerieDataInput {\n  number: String\n  episodes: EpisodeUpdateManyWithoutSaisonInput\n}\n\ninput SaisonUpdateWithWhereUniqueWithoutSerieInput {\n  where: SaisonWhereUniqueInput!\n  data: SaisonUpdateWithoutSerieDataInput!\n}\n\ninput SaisonUpsertWithoutEpisodesInput {\n  update: SaisonUpdateWithoutEpisodesDataInput!\n  create: SaisonCreateWithoutEpisodesInput!\n}\n\ninput SaisonUpsertWithWhereUniqueWithoutSerieInput {\n  where: SaisonWhereUniqueInput!\n  update: SaisonUpdateWithoutSerieDataInput!\n  create: SaisonCreateWithoutSerieInput!\n}\n\ninput SaisonWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  serie: SerieWhereInput\n  episodes_every: EpisodeWhereInput\n  episodes_some: EpisodeWhereInput\n  episodes_none: EpisodeWhereInput\n  AND: [SaisonWhereInput!]\n  OR: [SaisonWhereInput!]\n  NOT: [SaisonWhereInput!]\n}\n\ninput SaisonWhereUniqueInput {\n  id: ID\n}\n\ntype Serie {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison!]\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\n}\n\ntype SerieConnection {\n  pageInfo: PageInfo!\n  edges: [SerieEdge]!\n  aggregate: AggregateSerie!\n}\n\ninput SerieCreateInput {\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  saisons: SaisonCreateManyWithoutSerieInput\n  episodes: EpisodeCreateManyWithoutSerieInput\n}\n\ninput SerieCreateOneInput {\n  create: SerieCreateInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieCreateOneWithoutEpisodesInput {\n  create: SerieCreateWithoutEpisodesInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieCreateOneWithoutSaisonsInput {\n  create: SerieCreateWithoutSaisonsInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieCreateWithoutEpisodesInput {\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  saisons: SaisonCreateManyWithoutSerieInput\n}\n\ninput SerieCreateWithoutSaisonsInput {\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  episodes: EpisodeCreateManyWithoutSerieInput\n}\n\ntype SerieEdge {\n  node: Serie!\n  cursor: String!\n}\n\nenum SerieOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  genre_ASC\n  genre_DESC\n  description_ASC\n  description_DESC\n  nbEp_ASC\n  nbEp_DESC\n  nbSais_ASC\n  nbSais_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SeriePreviousValues {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n}\n\ntype SerieSubscriptionPayload {\n  mutation: MutationType!\n  node: Serie\n  updatedFields: [String!]\n  previousValues: SeriePreviousValues\n}\n\ninput SerieSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SerieWhereInput\n  AND: [SerieSubscriptionWhereInput!]\n  OR: [SerieSubscriptionWhereInput!]\n  NOT: [SerieSubscriptionWhereInput!]\n}\n\ninput SerieUpdateDataInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  saisons: SaisonUpdateManyWithoutSerieInput\n  episodes: EpisodeUpdateManyWithoutSerieInput\n}\n\ninput SerieUpdateInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  saisons: SaisonUpdateManyWithoutSerieInput\n  episodes: EpisodeUpdateManyWithoutSerieInput\n}\n\ninput SerieUpdateManyMutationInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n}\n\ninput SerieUpdateOneRequiredInput {\n  create: SerieCreateInput\n  update: SerieUpdateDataInput\n  upsert: SerieUpsertNestedInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieUpdateOneRequiredWithoutEpisodesInput {\n  create: SerieCreateWithoutEpisodesInput\n  update: SerieUpdateWithoutEpisodesDataInput\n  upsert: SerieUpsertWithoutEpisodesInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieUpdateOneRequiredWithoutSaisonsInput {\n  create: SerieCreateWithoutSaisonsInput\n  update: SerieUpdateWithoutSaisonsDataInput\n  upsert: SerieUpsertWithoutSaisonsInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieUpdateWithoutEpisodesDataInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  saisons: SaisonUpdateManyWithoutSerieInput\n}\n\ninput SerieUpdateWithoutSaisonsDataInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  episodes: EpisodeUpdateManyWithoutSerieInput\n}\n\ninput SerieUpsertNestedInput {\n  update: SerieUpdateDataInput!\n  create: SerieCreateInput!\n}\n\ninput SerieUpsertWithoutEpisodesInput {\n  update: SerieUpdateWithoutEpisodesDataInput!\n  create: SerieCreateWithoutEpisodesInput!\n}\n\ninput SerieUpsertWithoutSaisonsInput {\n  update: SerieUpdateWithoutSaisonsDataInput!\n  create: SerieCreateWithoutSaisonsInput!\n}\n\ntype SerieUser {\n  id: ID!\n  finish: Boolean\n  serie: Serie!\n  user: User!\n}\n\ntype SerieUserConnection {\n  pageInfo: PageInfo!\n  edges: [SerieUserEdge]!\n  aggregate: AggregateSerieUser!\n}\n\ninput SerieUserCreateInput {\n  finish: Boolean\n  serie: SerieCreateOneInput!\n  user: UserCreateOneWithoutSerieInput!\n}\n\ninput SerieUserCreateManyWithoutUserInput {\n  create: [SerieUserCreateWithoutUserInput!]\n  connect: [SerieUserWhereUniqueInput!]\n}\n\ninput SerieUserCreateWithoutUserInput {\n  finish: Boolean\n  serie: SerieCreateOneInput!\n}\n\ntype SerieUserEdge {\n  node: SerieUser!\n  cursor: String!\n}\n\nenum SerieUserOrderByInput {\n  id_ASC\n  id_DESC\n  finish_ASC\n  finish_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SerieUserPreviousValues {\n  id: ID!\n  finish: Boolean\n}\n\ninput SerieUserScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  AND: [SerieUserScalarWhereInput!]\n  OR: [SerieUserScalarWhereInput!]\n  NOT: [SerieUserScalarWhereInput!]\n}\n\ntype SerieUserSubscriptionPayload {\n  mutation: MutationType!\n  node: SerieUser\n  updatedFields: [String!]\n  previousValues: SerieUserPreviousValues\n}\n\ninput SerieUserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SerieUserWhereInput\n  AND: [SerieUserSubscriptionWhereInput!]\n  OR: [SerieUserSubscriptionWhereInput!]\n  NOT: [SerieUserSubscriptionWhereInput!]\n}\n\ninput SerieUserUpdateInput {\n  finish: Boolean\n  serie: SerieUpdateOneRequiredInput\n  user: UserUpdateOneRequiredWithoutSerieInput\n}\n\ninput SerieUserUpdateManyDataInput {\n  finish: Boolean\n}\n\ninput SerieUserUpdateManyMutationInput {\n  finish: Boolean\n}\n\ninput SerieUserUpdateManyWithoutUserInput {\n  create: [SerieUserCreateWithoutUserInput!]\n  delete: [SerieUserWhereUniqueInput!]\n  connect: [SerieUserWhereUniqueInput!]\n  set: [SerieUserWhereUniqueInput!]\n  disconnect: [SerieUserWhereUniqueInput!]\n  update: [SerieUserUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [SerieUserUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [SerieUserScalarWhereInput!]\n  updateMany: [SerieUserUpdateManyWithWhereNestedInput!]\n}\n\ninput SerieUserUpdateManyWithWhereNestedInput {\n  where: SerieUserScalarWhereInput!\n  data: SerieUserUpdateManyDataInput!\n}\n\ninput SerieUserUpdateWithoutUserDataInput {\n  finish: Boolean\n  serie: SerieUpdateOneRequiredInput\n}\n\ninput SerieUserUpdateWithWhereUniqueWithoutUserInput {\n  where: SerieUserWhereUniqueInput!\n  data: SerieUserUpdateWithoutUserDataInput!\n}\n\ninput SerieUserUpsertWithWhereUniqueWithoutUserInput {\n  where: SerieUserWhereUniqueInput!\n  update: SerieUserUpdateWithoutUserDataInput!\n  create: SerieUserCreateWithoutUserInput!\n}\n\ninput SerieUserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  serie: SerieWhereInput\n  user: UserWhereInput\n  AND: [SerieUserWhereInput!]\n  OR: [SerieUserWhereInput!]\n  NOT: [SerieUserWhereInput!]\n}\n\ninput SerieUserWhereUniqueInput {\n  id: ID\n}\n\ninput SerieWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  genre: String\n  genre_not: String\n  genre_in: [String!]\n  genre_not_in: [String!]\n  genre_lt: String\n  genre_lte: String\n  genre_gt: String\n  genre_gte: String\n  genre_contains: String\n  genre_not_contains: String\n  genre_starts_with: String\n  genre_not_starts_with: String\n  genre_ends_with: String\n  genre_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  nbEp: String\n  nbEp_not: String\n  nbEp_in: [String!]\n  nbEp_not_in: [String!]\n  nbEp_lt: String\n  nbEp_lte: String\n  nbEp_gt: String\n  nbEp_gte: String\n  nbEp_contains: String\n  nbEp_not_contains: String\n  nbEp_starts_with: String\n  nbEp_not_starts_with: String\n  nbEp_ends_with: String\n  nbEp_not_ends_with: String\n  nbSais: String\n  nbSais_not: String\n  nbSais_in: [String!]\n  nbSais_not_in: [String!]\n  nbSais_lt: String\n  nbSais_lte: String\n  nbSais_gt: String\n  nbSais_gte: String\n  nbSais_contains: String\n  nbSais_not_contains: String\n  nbSais_starts_with: String\n  nbSais_not_starts_with: String\n  nbSais_ends_with: String\n  nbSais_not_ends_with: String\n  saisons_every: SaisonWhereInput\n  saisons_some: SaisonWhereInput\n  saisons_none: SaisonWhereInput\n  episodes_every: EpisodeWhereInput\n  episodes_some: EpisodeWhereInput\n  episodes_none: EpisodeWhereInput\n  AND: [SerieWhereInput!]\n  OR: [SerieWhereInput!]\n  NOT: [SerieWhereInput!]\n}\n\ninput SerieWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  episode(where: EpisodeSubscriptionWhereInput): EpisodeSubscriptionPayload\n  film(where: FilmSubscriptionWhereInput): FilmSubscriptionPayload\n  filmUser(where: FilmUserSubscriptionWhereInput): FilmUserSubscriptionPayload\n  saison(where: SaisonSubscriptionWhereInput): SaisonSubscriptionPayload\n  serie(where: SerieSubscriptionWhereInput): SerieSubscriptionPayload\n  serieUser(where: SerieUserSubscriptionWhereInput): SerieUserSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  email: String!\n  password: String!\n  username: String!\n  serie(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser!]\n  film(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  username: String!\n  serie: SerieUserCreateManyWithoutUserInput\n  film: FilmUserCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutFilmInput {\n  create: UserCreateWithoutFilmInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutSerieInput {\n  create: UserCreateWithoutSerieInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutFilmInput {\n  email: String!\n  password: String!\n  username: String!\n  serie: SerieUserCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutSerieInput {\n  email: String!\n  password: String!\n  username: String!\n  film: FilmUserCreateManyWithoutUserInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  username_ASC\n  username_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  username: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  username: String\n  serie: SerieUserUpdateManyWithoutUserInput\n  film: FilmUserUpdateManyWithoutUserInput\n}\n\ninput UserUpdateManyMutationInput {\n  email: String\n  password: String\n  username: String\n}\n\ninput UserUpdateOneRequiredWithoutFilmInput {\n  create: UserCreateWithoutFilmInput\n  update: UserUpdateWithoutFilmDataInput\n  upsert: UserUpsertWithoutFilmInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutSerieInput {\n  create: UserCreateWithoutSerieInput\n  update: UserUpdateWithoutSerieDataInput\n  upsert: UserUpsertWithoutSerieInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutFilmDataInput {\n  email: String\n  password: String\n  username: String\n  serie: SerieUserUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutSerieDataInput {\n  email: String\n  password: String\n  username: String\n  film: FilmUserUpdateManyWithoutUserInput\n}\n\ninput UserUpsertWithoutFilmInput {\n  update: UserUpdateWithoutFilmDataInput!\n  create: UserCreateWithoutFilmInput!\n}\n\ninput UserUpsertWithoutSerieInput {\n  update: UserUpdateWithoutSerieDataInput!\n  create: UserCreateWithoutSerieInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  username: String\n  username_not: String\n  username_in: [String!]\n  username_not_in: [String!]\n  username_lt: String\n  username_lte: String\n  username_gt: String\n  username_gte: String\n  username_contains: String\n  username_not_contains: String\n  username_starts_with: String\n  username_not_starts_with: String\n  username_ends_with: String\n  username_not_ends_with: String\n  serie_every: SerieUserWhereInput\n  serie_some: SerieUserWhereInput\n  serie_none: SerieUserWhereInput\n  film_every: FilmUserWhereInput\n  film_some: FilmUserWhereInput\n  film_none: FilmUserWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n  username: String\n}\n`\n      }\n    "
      ]
    },
    "sourceType": "script",
    "mtime": 1551814010826
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Query.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Query.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Query.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "Query.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  users: function users(parent, args, ctx) {\n    return ctx.prisma.users({\n      orderBy: args.orderBy\n    });\n  },\n  user: function user(parent, _ref, ctx) {\n    var id = _ref.id;\n    return ctx.prisma.user({\n      id: id\n    });\n  },\n  amIAuth: function amIAuth(parent, args, ctx) {\n    var Authorization = ctx.request.get('Authorization');\n\n    if (Authorization) {\n      try {\n        var token = Authorization.replace('Bearer ', '');\n\n        var _jwt$verify = _jsonwebtoken.default.verify(token, process.env.API_SECRET),\n            userId = _jwt$verify.userId;\n\n        var me = ctx.prisma.user({\n          id: userId\n        });\n        return {\n          isAuth: true,\n          me: me\n        };\n      } catch (e) {\n        return {\n          isAuth: false\n        };\n      }\n    }\n\n    return {\n      isAuth: false\n    };\n  },\n  films: function films(parent, args, ctx) {\n    return ctx.prisma.films({});\n  },\n  film: function film(parent, args, ctx) {\n    return ctx.prisma.film({\n      id: args.idFilm\n    });\n  },\n  series: function series(parent, args, ctx) {\n    return ctx.prisma.series({});\n  },\n  serie: function serie(parent, args, ctx) {\n    return ctx.prisma.serie({\n      id: args.idSerie\n    });\n  },\n  filmsUser: function filmsUser(parent, args, ctx) {\n    var userId = (0, _utils.getUserId)(ctx);\n    return ctx.prisma.filmUsers({\n      where: {\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  filmsUsers: function filmsUsers(parent, args, ctx) {\n    return ctx.prisma.filmUsers({});\n  },\n  seriesUser: function seriesUser(parent, args, ctx) {\n    var userId = (0, _utils.getUserId)(ctx);\n    return ctx.prisma.serieUsers({\n      where: {\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  seriesUsers: function seriesUsers(parent, args, ctx) {\n    return ctx.prisma.serieUsers({});\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXJ5LmpzIl0sIm5hbWVzIjpbInVzZXJzIiwicGFyZW50IiwiYXJncyIsImN0eCIsInByaXNtYSIsIm9yZGVyQnkiLCJ1c2VyIiwiaWQiLCJhbUlBdXRoIiwiQXV0aG9yaXphdGlvbiIsInJlcXVlc3QiLCJnZXQiLCJ0b2tlbiIsInJlcGxhY2UiLCJqd3QiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiQVBJX1NFQ1JFVCIsInVzZXJJZCIsIm1lIiwiaXNBdXRoIiwiZSIsImZpbG1zIiwiZmlsbSIsImlkRmlsbSIsInNlcmllcyIsInNlcmllIiwiaWRTZXJpZSIsImZpbG1zVXNlciIsImZpbG1Vc2VycyIsIndoZXJlIiwiZmlsbXNVc2VycyIsInNlcmllc1VzZXIiLCJzZXJpZVVzZXJzIiwic2VyaWVzVXNlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztlQUVlO0FBQ2JBLEVBQUFBLEtBRGEsaUJBQ05DLE1BRE0sRUFDRUMsSUFERixFQUNRQyxHQURSLEVBQ2E7QUFDeEIsV0FBT0EsR0FBRyxDQUFDQyxNQUFKLENBQVdKLEtBQVgsQ0FBaUI7QUFDdEJLLE1BQUFBLE9BQU8sRUFBRUgsSUFBSSxDQUFDRztBQURRLEtBQWpCLENBQVA7QUFHRCxHQUxZO0FBT2JDLEVBQUFBLElBUGEsZ0JBT1BMLE1BUE8sUUFPU0UsR0FQVCxFQU9jO0FBQUEsUUFBWEksRUFBVyxRQUFYQSxFQUFXO0FBQ3pCLFdBQU9KLEdBQUcsQ0FBQ0MsTUFBSixDQUFXRSxJQUFYLENBQWdCO0FBQUVDLE1BQUFBLEVBQUUsRUFBRkE7QUFBRixLQUFoQixDQUFQO0FBQ0QsR0FUWTtBQVdiQyxFQUFBQSxPQVhhLG1CQVdKUCxNQVhJLEVBV0lDLElBWEosRUFXVUMsR0FYVixFQVdnQjtBQUMzQixRQUFNTSxhQUFhLEdBQUdOLEdBQUcsQ0FBQ08sT0FBSixDQUFZQyxHQUFaLENBQWdCLGVBQWhCLENBQXRCOztBQUNBLFFBQUlGLGFBQUosRUFBbUI7QUFDakIsVUFBSTtBQUNGLFlBQU1HLEtBQUssR0FBR0gsYUFBYSxDQUFDSSxPQUFkLENBQXNCLFNBQXRCLEVBQWlDLEVBQWpDLENBQWQ7O0FBREUsMEJBRWlCQyxzQkFBSUMsTUFBSixDQUFXSCxLQUFYLEVBQWtCSSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBOUIsQ0FGakI7QUFBQSxZQUVNQyxNQUZOLGVBRU1BLE1BRk47O0FBR0YsWUFBTUMsRUFBRSxHQUFHakIsR0FBRyxDQUFDQyxNQUFKLENBQVdFLElBQVgsQ0FBZ0I7QUFBRUMsVUFBQUEsRUFBRSxFQUFFWTtBQUFOLFNBQWhCLENBQVg7QUFDQSxlQUFPO0FBQUVFLFVBQUFBLE1BQU0sRUFBRSxJQUFWO0FBQWdCRCxVQUFBQSxFQUFFLEVBQUZBO0FBQWhCLFNBQVA7QUFDRCxPQUxELENBS0UsT0FBT0UsQ0FBUCxFQUFVO0FBQ1YsZUFBTztBQUFFRCxVQUFBQSxNQUFNLEVBQUU7QUFBVixTQUFQO0FBQ0Q7QUFDRjs7QUFDRCxXQUFPO0FBQUVBLE1BQUFBLE1BQU0sRUFBRTtBQUFWLEtBQVA7QUFDRCxHQXhCWTtBQTBCYkUsRUFBQUEsS0ExQmEsaUJBMEJOdEIsTUExQk0sRUEwQkVDLElBMUJGLEVBMEJRQyxHQTFCUixFQTBCYTtBQUN4QixXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBV21CLEtBQVgsQ0FBaUIsRUFBakIsQ0FBUDtBQUNELEdBNUJZO0FBNkJiQyxFQUFBQSxJQTdCYSxnQkE2QlB2QixNQTdCTyxFQTZCQ0MsSUE3QkQsRUE2Qk9DLEdBN0JQLEVBNkJZO0FBQ3ZCLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXb0IsSUFBWCxDQUFnQjtBQUNyQmpCLE1BQUFBLEVBQUUsRUFBRUwsSUFBSSxDQUFDdUI7QUFEWSxLQUFoQixDQUFQO0FBR0QsR0FqQ1k7QUFtQ2JDLEVBQUFBLE1BbkNhLGtCQW1DTHpCLE1BbkNLLEVBbUNHQyxJQW5DSCxFQW1DU0MsR0FuQ1QsRUFtQ2M7QUFDekIsV0FBT0EsR0FBRyxDQUFDQyxNQUFKLENBQVdzQixNQUFYLENBQWtCLEVBQWxCLENBQVA7QUFDRCxHQXJDWTtBQXNDYkMsRUFBQUEsS0F0Q2EsaUJBc0NOMUIsTUF0Q00sRUFzQ0VDLElBdENGLEVBc0NRQyxHQXRDUixFQXNDYTtBQUN4QixXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBV3VCLEtBQVgsQ0FBaUI7QUFDdEJwQixNQUFBQSxFQUFFLEVBQUVMLElBQUksQ0FBQzBCO0FBRGEsS0FBakIsQ0FBUDtBQUdELEdBMUNZO0FBNENiQyxFQUFBQSxTQTVDYSxxQkE0Q0Y1QixNQTVDRSxFQTRDTUMsSUE1Q04sRUE0Q1lDLEdBNUNaLEVBNENnQjtBQUMzQixRQUFNZ0IsTUFBTSxHQUFHLHNCQUFVaEIsR0FBVixDQUFmO0FBQ0EsV0FBT0EsR0FBRyxDQUFDQyxNQUFKLENBQVcwQixTQUFYLENBQXFCO0FBQzFCQyxNQUFBQSxLQUFLLEVBQUM7QUFBQ3pCLFFBQUFBLElBQUksRUFBQztBQUFDQyxVQUFBQSxFQUFFLEVBQUVZO0FBQUw7QUFBTjtBQURvQixLQUFyQixDQUFQO0FBR0QsR0FqRFk7QUFrRGJhLEVBQUFBLFVBbERhLHNCQWtERC9CLE1BbERDLEVBa0RPQyxJQWxEUCxFQWtEYUMsR0FsRGIsRUFrRGlCO0FBQzVCLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXMEIsU0FBWCxDQUFxQixFQUFyQixDQUFQO0FBRUQsR0FyRFk7QUF1RGJHLEVBQUFBLFVBdkRhLHNCQXVERGhDLE1BdkRDLEVBdURPQyxJQXZEUCxFQXVEYUMsR0F2RGIsRUF1RGlCO0FBQzVCLFFBQU1nQixNQUFNLEdBQUcsc0JBQVVoQixHQUFWLENBQWY7QUFDQSxXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBVzhCLFVBQVgsQ0FBc0I7QUFDM0JILE1BQUFBLEtBQUssRUFBQztBQUFDekIsUUFBQUEsSUFBSSxFQUFDO0FBQUNDLFVBQUFBLEVBQUUsRUFBRVk7QUFBTDtBQUFOO0FBRHFCLEtBQXRCLENBQVA7QUFHRCxHQTVEWTtBQTZEYmdCLEVBQUFBLFdBN0RhLHVCQTZEQWxDLE1BN0RBLEVBNkRRQyxJQTdEUixFQTZEY0MsR0E3RGQsRUE2RGtCO0FBQzdCLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXOEIsVUFBWCxDQUFzQixFQUF0QixDQUFQO0FBRUQ7QUFoRVksQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9UZXN0UHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXG5pbXBvcnQgeyBnZXRVc2VySWQgfSBmcm9tICcuLi91dGlscydcblxuZXhwb3J0IGRlZmF1bHQge1xuICB1c2VycyAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS51c2Vycyh7XG4gICAgICBvcmRlckJ5OiBhcmdzLm9yZGVyQnlcbiAgICB9KVxuICB9LFxuXG4gIHVzZXIgKHBhcmVudCwgeyBpZCB9LCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS51c2VyKHsgaWQgfSlcbiAgfSxcblxuICBhbUlBdXRoIChwYXJlbnQsIGFyZ3MsIGN0eCwpIHtcbiAgICBjb25zdCBBdXRob3JpemF0aW9uID0gY3R4LnJlcXVlc3QuZ2V0KCdBdXRob3JpemF0aW9uJylcbiAgICBpZiAoQXV0aG9yaXphdGlvbikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSBBdXRob3JpemF0aW9uLnJlcGxhY2UoJ0JlYXJlciAnLCAnJylcbiAgICAgICAgY29uc3QgeyB1c2VySWQgfSA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkFQSV9TRUNSRVQpXG4gICAgICAgIGNvbnN0IG1lID0gY3R4LnByaXNtYS51c2VyKHsgaWQ6IHVzZXJJZCB9KVxuICAgICAgICByZXR1cm4geyBpc0F1dGg6IHRydWUsIG1lIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHsgaXNBdXRoOiBmYWxzZSB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGlzQXV0aDogZmFsc2UgfVxuICB9LFxuXG4gIGZpbG1zIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIHJldHVybiBjdHgucHJpc21hLmZpbG1zKHt9KTtcbiAgfSxcbiAgZmlsbSAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5maWxtKHtcbiAgICAgIGlkOiBhcmdzLmlkRmlsbVxuICAgIH0pXG4gIH0sXG5cbiAgc2VyaWVzIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIHJldHVybiBjdHgucHJpc21hLnNlcmllcyh7fSk7XG4gIH0sXG4gIHNlcmllIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIHJldHVybiBjdHgucHJpc21hLnNlcmllKHtcbiAgICAgIGlkOiBhcmdzLmlkU2VyaWVcbiAgICB9KVxuICB9LFxuXG4gIGZpbG1zVXNlciAocGFyZW50LCBhcmdzLCBjdHgpe1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpO1xuICAgIHJldHVybiBjdHgucHJpc21hLmZpbG1Vc2Vycyh7XG4gICAgICB3aGVyZTp7dXNlcjp7aWQ6IHVzZXJJZH19XG4gICAgfSk7XG4gIH0sXG4gIGZpbG1zVXNlcnMgKHBhcmVudCwgYXJncywgY3R4KXtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5maWxtVXNlcnMoe1xuICAgIH0pO1xuICB9LFxuXG4gIHNlcmllc1VzZXIgKHBhcmVudCwgYXJncywgY3R4KXtcbiAgICBjb25zdCB1c2VySWQgPSBnZXRVc2VySWQoY3R4KTtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5zZXJpZVVzZXJzKHtcbiAgICAgIHdoZXJlOnt1c2VyOntpZDogdXNlcklkfX1cbiAgICB9KTtcbiAgfSxcbiAgc2VyaWVzVXNlcnMgKHBhcmVudCwgYXJncywgY3R4KXtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5zZXJpZVVzZXJzKHtcbiAgICB9KTtcbiAgfSxcblxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Query.js"
      ],
      "names": [
        "users",
        "parent",
        "args",
        "ctx",
        "prisma",
        "orderBy",
        "user",
        "id",
        "amIAuth",
        "Authorization",
        "request",
        "get",
        "token",
        "replace",
        "jwt",
        "verify",
        "process",
        "env",
        "API_SECRET",
        "userId",
        "me",
        "isAuth",
        "e",
        "films",
        "film",
        "idFilm",
        "series",
        "serie",
        "idSerie",
        "filmsUser",
        "filmUsers",
        "where",
        "filmsUsers",
        "seriesUser",
        "serieUsers",
        "seriesUsers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,GADR,EACa;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAWJ,KAAX,CAAiB;AACtBK,MAAAA,OAAO,EAAEH,IAAI,CAACG;AADQ,KAAjB,CAAP;AAGD,GALY;AAObC,EAAAA,IAPa,gBAOPL,MAPO,QAOSE,GAPT,EAOc;AAAA,QAAXI,EAAW,QAAXA,EAAW;AACzB,WAAOJ,GAAG,CAACC,MAAJ,CAAWE,IAAX,CAAgB;AAAEC,MAAAA,EAAE,EAAFA;AAAF,KAAhB,CAAP;AACD,GATY;AAWbC,EAAAA,OAXa,mBAWJP,MAXI,EAWIC,IAXJ,EAWUC,GAXV,EAWgB;AAC3B,QAAMM,aAAa,GAAGN,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,CAAtB;;AACA,QAAIF,aAAJ,EAAmB;AACjB,UAAI;AACF,YAAMG,KAAK,GAAGH,aAAa,CAACI,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAd;;AADE,0BAEiBC,sBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFjB;AAAA,YAEMC,MAFN,eAEMA,MAFN;;AAGF,YAAMC,EAAE,GAAGjB,GAAG,CAACC,MAAJ,CAAWE,IAAX,CAAgB;AAAEC,UAAAA,EAAE,EAAEY;AAAN,SAAhB,CAAX;AACA,eAAO;AAAEE,UAAAA,MAAM,EAAE,IAAV;AAAgBD,UAAAA,EAAE,EAAFA;AAAhB,SAAP;AACD,OALD,CAKE,OAAOE,CAAP,EAAU;AACV,eAAO;AAAED,UAAAA,MAAM,EAAE;AAAV,SAAP;AACD;AACF;;AACD,WAAO;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GAxBY;AA0BbE,EAAAA,KA1Ba,iBA0BNtB,MA1BM,EA0BEC,IA1BF,EA0BQC,GA1BR,EA0Ba;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAWmB,KAAX,CAAiB,EAAjB,CAAP;AACD,GA5BY;AA6BbC,EAAAA,IA7Ba,gBA6BPvB,MA7BO,EA6BCC,IA7BD,EA6BOC,GA7BP,EA6BY;AACvB,WAAOA,GAAG,CAACC,MAAJ,CAAWoB,IAAX,CAAgB;AACrBjB,MAAAA,EAAE,EAAEL,IAAI,CAACuB;AADY,KAAhB,CAAP;AAGD,GAjCY;AAmCbC,EAAAA,MAnCa,kBAmCLzB,MAnCK,EAmCGC,IAnCH,EAmCSC,GAnCT,EAmCc;AACzB,WAAOA,GAAG,CAACC,MAAJ,CAAWsB,MAAX,CAAkB,EAAlB,CAAP;AACD,GArCY;AAsCbC,EAAAA,KAtCa,iBAsCN1B,MAtCM,EAsCEC,IAtCF,EAsCQC,GAtCR,EAsCa;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAWuB,KAAX,CAAiB;AACtBpB,MAAAA,EAAE,EAAEL,IAAI,CAAC0B;AADa,KAAjB,CAAP;AAGD,GA1CY;AA4CbC,EAAAA,SA5Ca,qBA4CF5B,MA5CE,EA4CMC,IA5CN,EA4CYC,GA5CZ,EA4CgB;AAC3B,QAAMgB,MAAM,GAAG,sBAAUhB,GAAV,CAAf;AACA,WAAOA,GAAG,CAACC,MAAJ,CAAW0B,SAAX,CAAqB;AAC1BC,MAAAA,KAAK,EAAC;AAACzB,QAAAA,IAAI,EAAC;AAACC,UAAAA,EAAE,EAAEY;AAAL;AAAN;AADoB,KAArB,CAAP;AAGD,GAjDY;AAkDba,EAAAA,UAlDa,sBAkDD/B,MAlDC,EAkDOC,IAlDP,EAkDaC,GAlDb,EAkDiB;AAC5B,WAAOA,GAAG,CAACC,MAAJ,CAAW0B,SAAX,CAAqB,EAArB,CAAP;AAED,GArDY;AAuDbG,EAAAA,UAvDa,sBAuDDhC,MAvDC,EAuDOC,IAvDP,EAuDaC,GAvDb,EAuDiB;AAC5B,QAAMgB,MAAM,GAAG,sBAAUhB,GAAV,CAAf;AACA,WAAOA,GAAG,CAACC,MAAJ,CAAW8B,UAAX,CAAsB;AAC3BH,MAAAA,KAAK,EAAC;AAACzB,QAAAA,IAAI,EAAC;AAACC,UAAAA,EAAE,EAAEY;AAAL;AAAN;AADqB,KAAtB,CAAP;AAGD,GA5DY;AA6DbgB,EAAAA,WA7Da,uBA6DAlC,MA7DA,EA6DQC,IA7DR,EA6DcC,GA7Dd,EA6DkB;AAC7B,WAAOA,GAAG,CAACC,MAAJ,CAAW8B,UAAX,CAAsB,EAAtB,CAAP;AAED;AAhEY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\nimport { getUserId } from '../utils'\n\nexport default {\n  users (parent, args, ctx) {\n    return ctx.prisma.users({\n      orderBy: args.orderBy\n    })\n  },\n\n  user (parent, { id }, ctx) {\n    return ctx.prisma.user({ id })\n  },\n\n  amIAuth (parent, args, ctx,) {\n    const Authorization = ctx.request.get('Authorization')\n    if (Authorization) {\n      try {\n        const token = Authorization.replace('Bearer ', '')\n        const { userId } = jwt.verify(token, process.env.API_SECRET)\n        const me = ctx.prisma.user({ id: userId })\n        return { isAuth: true, me }\n      } catch (e) {\n        return { isAuth: false }\n      }\n    }\n    return { isAuth: false }\n  },\n\n  films (parent, args, ctx) {\n    return ctx.prisma.films({});\n  },\n  film (parent, args, ctx) {\n    return ctx.prisma.film({\n      id: args.idFilm\n    })\n  },\n\n  series (parent, args, ctx) {\n    return ctx.prisma.series({});\n  },\n  serie (parent, args, ctx) {\n    return ctx.prisma.serie({\n      id: args.idSerie\n    })\n  },\n\n  filmsUser (parent, args, ctx){\n    const userId = getUserId(ctx);\n    return ctx.prisma.filmUsers({\n      where:{user:{id: userId}}\n    });\n  },\n  filmsUsers (parent, args, ctx){\n    return ctx.prisma.filmUsers({\n    });\n  },\n\n  seriesUser (parent, args, ctx){\n    const userId = getUserId(ctx);\n    return ctx.prisma.serieUsers({\n      where:{user:{id: userId}}\n    });\n  },\n  seriesUsers (parent, args, ctx){\n    return ctx.prisma.serieUsers({\n    });\n  },\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551814000750
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/utils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserId = getUserId;\nexports.sleep = sleep;\nexports.AuthError = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction getUserId(ctx) {\n  var Authorization = ctx.request.get('Authorization');\n\n  if (Authorization) {\n    var token = Authorization.replace('Bearer ', '');\n\n    var _jwt$verify = _jsonwebtoken.default.verify(token, process.env.API_SECRET),\n        userId = _jwt$verify.userId;\n\n    return userId;\n  }\n\n  throw new AuthError();\n}\n\nvar AuthError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AuthError, _Error);\n\n  function AuthError() {\n    _classCallCheck(this, AuthError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AuthError).call(this, 'Not authorized'));\n  }\n\n  return AuthError;\n}(_wrapNativeSuper(Error));\n\nexports.AuthError = AuthError;\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImdldFVzZXJJZCIsImN0eCIsIkF1dGhvcml6YXRpb24iLCJyZXF1ZXN0IiwiZ2V0IiwidG9rZW4iLCJyZXBsYWNlIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkFQSV9TRUNSRVQiLCJ1c2VySWQiLCJBdXRoRXJyb3IiLCJFcnJvciIsInNsZWVwIiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVPLFNBQVNBLFNBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCO0FBQzlCLE1BQU1DLGFBQWEsR0FBR0QsR0FBRyxDQUFDRSxPQUFKLENBQVlDLEdBQVosQ0FBZ0IsZUFBaEIsQ0FBdEI7O0FBQ0EsTUFBSUYsYUFBSixFQUFtQjtBQUNqQixRQUFNRyxLQUFLLEdBQUdILGFBQWEsQ0FBQ0ksT0FBZCxDQUFzQixTQUF0QixFQUFpQyxFQUFqQyxDQUFkOztBQURpQixzQkFFRUMsc0JBQUlDLE1BQUosQ0FBV0gsS0FBWCxFQUFrQkksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBRkY7QUFBQSxRQUVUQyxNQUZTLGVBRVRBLE1BRlM7O0FBR2pCLFdBQU9BLE1BQVA7QUFDRDs7QUFDRCxRQUFNLElBQUlDLFNBQUosRUFBTjtBQUNEOztJQUVZQSxTOzs7OztBQUNYLHVCQUFlO0FBQUE7O0FBQUEsa0ZBQ1AsZ0JBRE87QUFFZDs7O21CQUg0QkMsSzs7OztBQU14QixTQUFTQyxLQUFULENBQWdCQyxFQUFoQixFQUFvQjtBQUN6QixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFBQyxPQUFPO0FBQUEsV0FBSUMsVUFBVSxDQUFDRCxPQUFELEVBQVVGLEVBQVYsQ0FBZDtBQUFBLEdBQW5CLENBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9UZXN0UHJpc21hL2FwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJJZCAoY3R4KSB7XG4gIGNvbnN0IEF1dGhvcml6YXRpb24gPSBjdHgucmVxdWVzdC5nZXQoJ0F1dGhvcml6YXRpb24nKVxuICBpZiAoQXV0aG9yaXphdGlvbikge1xuICAgIGNvbnN0IHRva2VuID0gQXV0aG9yaXphdGlvbi5yZXBsYWNlKCdCZWFyZXIgJywgJycpXG4gICAgY29uc3QgeyB1c2VySWQgfSA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkFQSV9TRUNSRVQpXG4gICAgcmV0dXJuIHVzZXJJZFxuICB9XG4gIHRocm93IG5ldyBBdXRoRXJyb3IoKVxufVxuXG5leHBvcnQgY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoJ05vdCBhdXRob3JpemVkJylcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2xlZXAgKG1zKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "getUserId",
        "ctx",
        "Authorization",
        "request",
        "get",
        "token",
        "replace",
        "jwt",
        "verify",
        "process",
        "env",
        "API_SECRET",
        "userId",
        "AuthError",
        "Error",
        "sleep",
        "ms",
        "Promise",
        "resolve",
        "setTimeout"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,SAAT,CAAoBC,GAApB,EAAyB;AAC9B,MAAMC,aAAa,GAAGD,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,CAAtB;;AACA,MAAIF,aAAJ,EAAmB;AACjB,QAAMG,KAAK,GAAGH,aAAa,CAACI,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAd;;AADiB,sBAEEC,sBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFF;AAAA,QAETC,MAFS,eAETA,MAFS;;AAGjB,WAAOA,MAAP;AACD;;AACD,QAAM,IAAIC,SAAJ,EAAN;AACD;;IAEYA,S;;;;;AACX,uBAAe;AAAA;;AAAA,kFACP,gBADO;AAEd;;;mBAH4BC,K;;;;AAMxB,SAASC,KAAT,CAAgBC,EAAhB,EAAoB;AACzB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAP;AACD",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\n\nexport function getUserId (ctx) {\n  const Authorization = ctx.request.get('Authorization')\n  if (Authorization) {\n    const token = Authorization.replace('Bearer ', '')\n    const { userId } = jwt.verify(token, process.env.API_SECRET)\n    return userId\n  }\n  throw new AuthError()\n}\n\nexport class AuthError extends Error {\n  constructor () {\n    super('Not authorized')\n  }\n}\n\nexport function sleep (ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551354299405
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, args, ctx) {\n      var password, user;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _bcryptjs.default.hash(args.password, 10);\n\n            case 2:\n              password = _context.sent;\n              _context.next = 5;\n              return ctx.prisma.createUser(_objectSpread({}, args, {\n                password: password\n              }));\n\n            case 5:\n              user = _context.sent;\n              return _context.abrupt(\"return\", {\n                token: _jsonwebtoken.default.sign({\n                  userId: user.id\n                }, process.env.API_SECRET),\n                user: user\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function signup(_x, _x2, _x3) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(parent, _ref, ctx) {\n      var email, password, user, valid;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              email = _ref.email, password = _ref.password;\n              _context2.next = 3;\n              return ctx.prisma.user({\n                email: email\n              });\n\n            case 3:\n              user = _context2.sent;\n\n              if (user) {\n                _context2.next = 6;\n                break;\n              }\n\n              throw new Error('Invalid email');\n\n            case 6:\n              _context2.next = 8;\n              return _bcryptjs.default.compare(password, user.password);\n\n            case 8:\n              valid = _context2.sent;\n\n              if (valid) {\n                _context2.next = 11;\n                break;\n              }\n\n              throw new Error('Invalid password');\n\n            case 11:\n              return _context2.abrupt(\"return\", {\n                token: _jsonwebtoken.default.sign({\n                  userId: user.id\n                }, process.env.API_SECRET),\n                user: user\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function login(_x4, _x5, _x6) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsic2lnbnVwIiwicGFyZW50IiwiYXJncyIsImN0eCIsImJjcnlwdCIsImhhc2giLCJwYXNzd29yZCIsInByaXNtYSIsImNyZWF0ZVVzZXIiLCJ1c2VyIiwidG9rZW4iLCJqd3QiLCJzaWduIiwidXNlcklkIiwiaWQiLCJwcm9jZXNzIiwiZW52IiwiQVBJX1NFQ1JFVCIsImxvZ2luIiwiZW1haWwiLCJFcnJvciIsImNvbXBhcmUiLCJ2YWxpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7ZUFFZTtBQUNQQSxFQUFBQSxNQURPO0FBQUE7QUFBQTtBQUFBLDZDQUNDQyxNQURELEVBQ1NDLElBRFQsRUFDZUMsR0FEZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHFCQUVZQyxrQkFBT0MsSUFBUCxDQUFZSCxJQUFJLENBQUNJLFFBQWpCLEVBQTJCLEVBQTNCLENBRlo7O0FBQUE7QUFFTEEsY0FBQUEsUUFGSztBQUFBO0FBQUEscUJBR1FILEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxVQUFYLG1CQUEyQk4sSUFBM0I7QUFBaUNJLGdCQUFBQSxRQUFRLEVBQVJBO0FBQWpDLGlCQUhSOztBQUFBO0FBR0xHLGNBQUFBLElBSEs7QUFBQSwrQ0FLSjtBQUNMQyxnQkFBQUEsS0FBSyxFQUFFQyxzQkFBSUMsSUFBSixDQUFTO0FBQUVDLGtCQUFBQSxNQUFNLEVBQUVKLElBQUksQ0FBQ0s7QUFBZixpQkFBVCxFQUE4QkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTFDLENBREY7QUFFTFIsZ0JBQUFBLElBQUksRUFBSkE7QUFGSyxlQUxJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBV1BTLEVBQUFBLEtBWE87QUFBQTtBQUFBO0FBQUEsOENBV0FqQixNQVhBLFFBVzZCRSxHQVg3QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFXVWdCLGNBQUFBLEtBWFYsUUFXVUEsS0FYVixFQVdpQmIsUUFYakIsUUFXaUJBLFFBWGpCO0FBQUE7QUFBQSxxQkFZUUgsR0FBRyxDQUFDSSxNQUFKLENBQVdFLElBQVgsQ0FBZ0I7QUFBRVUsZ0JBQUFBLEtBQUssRUFBTEE7QUFBRixlQUFoQixDQVpSOztBQUFBO0FBWUxWLGNBQUFBLElBWks7O0FBQUEsa0JBYU5BLElBYk07QUFBQTtBQUFBO0FBQUE7O0FBQUEsb0JBY0gsSUFBSVcsS0FBSixDQUFVLGVBQVYsQ0FkRzs7QUFBQTtBQUFBO0FBQUEscUJBaUJTaEIsa0JBQU9pQixPQUFQLENBQWVmLFFBQWYsRUFBeUJHLElBQUksQ0FBQ0gsUUFBOUIsQ0FqQlQ7O0FBQUE7QUFpQkxnQixjQUFBQSxLQWpCSzs7QUFBQSxrQkFrQk5BLEtBbEJNO0FBQUE7QUFBQTtBQUFBOztBQUFBLG9CQW1CSCxJQUFJRixLQUFKLENBQVUsa0JBQVYsQ0FuQkc7O0FBQUE7QUFBQSxnREFzQko7QUFDTFYsZ0JBQUFBLEtBQUssRUFBRUMsc0JBQUlDLElBQUosQ0FBUztBQUFFQyxrQkFBQUEsTUFBTSxFQUFFSixJQUFJLENBQUNLO0FBQWYsaUJBQVQsRUFBOEJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUExQyxDQURGO0FBRUxSLGdCQUFBQSxJQUFJLEVBQUpBO0FBRkssZUF0Qkk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL1Rlc3RQcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMvTXV0YXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJ1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYXN5bmMgc2lnbnVwIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIGNvbnN0IHBhc3N3b3JkID0gYXdhaXQgYmNyeXB0Lmhhc2goYXJncy5wYXNzd29yZCwgMTApXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IGN0eC5wcmlzbWEuY3JlYXRlVXNlcih7IC4uLmFyZ3MsIHBhc3N3b3JkIH0pXG5cbiAgICByZXR1cm4ge1xuICAgICAgdG9rZW46IGp3dC5zaWduKHsgdXNlcklkOiB1c2VyLmlkIH0sIHByb2Nlc3MuZW52LkFQSV9TRUNSRVQpLFxuICAgICAgdXNlclxuICAgIH1cbiAgfSxcblxuICBhc3luYyBsb2dpbiAocGFyZW50LCB7IGVtYWlsLCBwYXNzd29yZCB9LCBjdHgpIHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgY3R4LnByaXNtYS51c2VyKHsgZW1haWwgfSlcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBlbWFpbCcpXG4gICAgfVxuXG4gICAgY29uc3QgdmFsaWQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShwYXNzd29yZCwgdXNlci5wYXNzd29yZClcbiAgICBpZiAoIXZhbGlkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcGFzc3dvcmQnKVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICB0b2tlbjogand0LnNpZ24oeyB1c2VySWQ6IHVzZXIuaWQgfSwgcHJvY2Vzcy5lbnYuQVBJX1NFQ1JFVCksXG4gICAgICB1c2VyXG4gICAgfVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "signup",
        "parent",
        "args",
        "ctx",
        "bcrypt",
        "hash",
        "password",
        "prisma",
        "createUser",
        "user",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "API_SECRET",
        "login",
        "email",
        "Error",
        "compare",
        "valid"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;eAEe;AACPA,EAAAA,MADO;AAAA;AAAA;AAAA,6CACCC,MADD,EACSC,IADT,EACeC,GADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEYC,kBAAOC,IAAP,CAAYH,IAAI,CAACI,QAAjB,EAA2B,EAA3B,CAFZ;;AAAA;AAELA,cAAAA,QAFK;AAAA;AAAA,qBAGQH,GAAG,CAACI,MAAJ,CAAWC,UAAX,mBAA2BN,IAA3B;AAAiCI,gBAAAA,QAAQ,EAARA;AAAjC,iBAHR;;AAAA;AAGLG,cAAAA,IAHK;AAAA,+CAKJ;AACLC,gBAAAA,KAAK,EAAEC,sBAAIC,IAAJ,CAAS;AAAEC,kBAAAA,MAAM,EAAEJ,IAAI,CAACK;AAAf,iBAAT,EAA8BC,OAAO,CAACC,GAAR,CAAYC,UAA1C,CADF;AAELR,gBAAAA,IAAI,EAAJA;AAFK,eALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWPS,EAAAA,KAXO;AAAA;AAAA;AAAA,8CAWAjB,MAXA,QAW6BE,GAX7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAWUgB,cAAAA,KAXV,QAWUA,KAXV,EAWiBb,QAXjB,QAWiBA,QAXjB;AAAA;AAAA,qBAYQH,GAAG,CAACI,MAAJ,CAAWE,IAAX,CAAgB;AAAEU,gBAAAA,KAAK,EAALA;AAAF,eAAhB,CAZR;;AAAA;AAYLV,cAAAA,IAZK;;AAAA,kBAaNA,IAbM;AAAA;AAAA;AAAA;;AAAA,oBAcH,IAAIW,KAAJ,CAAU,eAAV,CAdG;;AAAA;AAAA;AAAA,qBAiBShB,kBAAOiB,OAAP,CAAef,QAAf,EAAyBG,IAAI,CAACH,QAA9B,CAjBT;;AAAA;AAiBLgB,cAAAA,KAjBK;;AAAA,kBAkBNA,KAlBM;AAAA;AAAA;AAAA;;AAAA,oBAmBH,IAAIF,KAAJ,CAAU,kBAAV,CAnBG;;AAAA;AAAA,gDAsBJ;AACLV,gBAAAA,KAAK,EAAEC,sBAAIC,IAAJ,CAAS;AAAEC,kBAAAA,MAAM,EAAEJ,IAAI,CAACK;AAAf,iBAAT,EAA8BC,OAAO,CAACC,GAAR,CAAYC,UAA1C,CADF;AAELR,gBAAAA,IAAI,EAAJA;AAFK,eAtBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\n\nexport default {\n  async signup (parent, args, ctx) {\n    const password = await bcrypt.hash(args.password, 10)\n    const user = await ctx.prisma.createUser({ ...args, password })\n\n    return {\n      token: jwt.sign({ userId: user.id }, process.env.API_SECRET),\n      user\n    }\n  },\n\n  async login (parent, { email, password }, ctx) {\n    const user = await ctx.prisma.user({ email })\n    if (!user) {\n      throw new Error('Invalid email')\n    }\n\n    const valid = await bcrypt.compare(password, user.password)\n    if (!valid) {\n      throw new Error('Invalid password')\n    }\n\n    return {\n      token: jwt.sign({ userId: user.id }, process.env.API_SECRET),\n      user\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551351872673
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  updateUser: function () {\n    var _updateUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, _ref, ctx) {\n      var username, userId;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = _ref.username;\n              userId = (0, _utils.getUserId)(ctx);\n              return _context.abrupt(\"return\", ctx.prisma.updateUser({\n                where: {\n                  id: userId\n                },\n                data: {\n                  username: username\n                }\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function updateUser(_x, _x2, _x3) {\n      return _updateUser.apply(this, arguments);\n    }\n\n    return updateUser;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXBkYXRlVXNlciIsInBhcmVudCIsImN0eCIsInVzZXJuYW1lIiwidXNlcklkIiwicHJpc21hIiwid2hlcmUiLCJpZCIsImRhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBRWU7QUFDUEEsRUFBQUEsVUFETztBQUFBO0FBQUE7QUFBQSw2Q0FDS0MsTUFETCxRQUMyQkMsR0FEM0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2VDLGNBQUFBLFFBRGYsUUFDZUEsUUFEZjtBQUVMQyxjQUFBQSxNQUZLLEdBRUksc0JBQVVGLEdBQVYsQ0FGSjtBQUFBLCtDQUdKQSxHQUFHLENBQUNHLE1BQUosQ0FBV0wsVUFBWCxDQUFzQjtBQUMzQk0sZ0JBQUFBLEtBQUssRUFBRTtBQUFFQyxrQkFBQUEsRUFBRSxFQUFFSDtBQUFOLGlCQURvQjtBQUUzQkksZ0JBQUFBLElBQUksRUFBRTtBQUNKTCxrQkFBQUEsUUFBUSxFQUFSQTtBQURJO0FBRnFCLGVBQXRCLENBSEk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL1Rlc3RQcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMvTXV0YXRpb24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRVc2VySWQgfSBmcm9tICcuLi8uLi91dGlscydcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhc3luYyB1cGRhdGVVc2VyIChwYXJlbnQsIHsgdXNlcm5hbWUgfSwgY3R4KSB7XG4gICAgY29uc3QgdXNlcklkID0gZ2V0VXNlcklkKGN0eClcbiAgICByZXR1cm4gY3R4LnByaXNtYS51cGRhdGVVc2VyKHtcbiAgICAgIHdoZXJlOiB7IGlkOiB1c2VySWQgfSxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgdXNlcm5hbWVcbiAgICAgIH1cbiAgICB9KVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "updateUser",
        "parent",
        "ctx",
        "username",
        "userId",
        "prisma",
        "where",
        "id",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAEe;AACPA,EAAAA,UADO;AAAA;AAAA;AAAA,6CACKC,MADL,QAC2BC,GAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACeC,cAAAA,QADf,QACeA,QADf;AAELC,cAAAA,MAFK,GAEI,sBAAUF,GAAV,CAFJ;AAAA,+CAGJA,GAAG,CAACG,MAAJ,CAAWL,UAAX,CAAsB;AAC3BM,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,EAAE,EAAEH;AAAN,iBADoB;AAE3BI,gBAAAA,IAAI,EAAE;AACJL,kBAAAA,QAAQ,EAARA;AADI;AAFqB,eAAtB,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import { getUserId } from '../../utils'\n\nexport default {\n  async updateUser (parent, { username }, ctx) {\n    const userId = getUserId(ctx)\n    return ctx.prisma.updateUser({\n      where: { id: userId },\n      data: {\n        username\n      }\n    })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551351872673
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/film.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/film.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/film.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/film.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
        "sourceFileName": "film.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  createFilm: function () {\n    var _createFilm = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", ctx.prisma.createFilm({\n                name: args.name,\n                genre: args.genre,\n                description: args.description\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function createFilm(_x, _x2, _x3) {\n      return _createFilm.apply(this, arguments);\n    }\n\n    return createFilm;\n  }(),\n  updateFilm: function () {\n    var _updateFilm = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", ctx.prisma.updateFilm({\n                where: {\n                  id: args.id\n                },\n                data: {\n                  name: args.name,\n                  genre: args.genre,\n                  description: args.description\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function updateFilm(_x4, _x5, _x6) {\n      return _updateFilm.apply(this, arguments);\n    }\n\n    return updateFilm;\n  }(),\n  deleteFilm: function () {\n    var _deleteFilm = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", ctx.prisma.deleteFilm({\n                id: args.idFilm\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteFilm(_x7, _x8, _x9) {\n      return _deleteFilm.apply(this, arguments);\n    }\n\n    return deleteFilm;\n  }(),\n  createFilmUser: function () {\n    var _createFilmUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //const userId = user.id;\n              userId = (0, _utils.getUserId)(ctx);\n              return _context4.abrupt(\"return\", ctx.prisma.createFilmUser({\n                finish: false,\n                film: {\n                  connect: {\n                    id: args.idFilm\n                  }\n                },\n                user: {\n                  connect: {\n                    id: userId\n                  }\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function createFilmUser(_x10, _x11, _x12) {\n      return _createFilmUser.apply(this, arguments);\n    }\n\n    return createFilmUser;\n  }(),\n  updateFilmUser: function () {\n    var _updateFilmUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context5.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context5.abrupt(\"return\", ctx.prisma.updateFilmUser({\n                where: {\n                  id: args.idFilm\n                },\n                data: {\n                  finish: args.finish\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateFilmUser(_x13, _x14, _x15) {\n      return _updateFilmUser.apply(this, arguments);\n    }\n\n    return updateFilmUser;\n  }(),\n  deleteFilmUser: function () {\n    var _deleteFilmUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context6.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context6.abrupt(\"return\", ctx.prisma.deleteFilmUser({\n                id: args.idFilm\n              }));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function deleteFilmUser(_x16, _x17, _x18) {\n      return _deleteFilmUser.apply(this, arguments);\n    }\n\n    return deleteFilmUser;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbG0uanMiXSwibmFtZXMiOlsiY3JlYXRlRmlsbSIsInBhcmVudCIsImFyZ3MiLCJjdHgiLCJwcmlzbWEiLCJuYW1lIiwiZ2VucmUiLCJkZXNjcmlwdGlvbiIsInVwZGF0ZUZpbG0iLCJ3aGVyZSIsImlkIiwiZGF0YSIsImRlbGV0ZUZpbG0iLCJpZEZpbG0iLCJjcmVhdGVGaWxtVXNlciIsInVzZXJJZCIsImZpbmlzaCIsImZpbG0iLCJjb25uZWN0IiwidXNlciIsInVwZGF0ZUZpbG1Vc2VyIiwiRXJyb3IiLCJkZWxldGVGaWxtVXNlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7ZUFFZTtBQUNQQSxFQUFBQSxVQURPO0FBQUE7QUFBQTtBQUFBLDZDQUNLQyxNQURMLEVBQ2FDLElBRGIsRUFDbUJDLEdBRG5CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQ0FFSkEsR0FBRyxDQUFDQyxNQUFKLENBQVdKLFVBQVgsQ0FBc0I7QUFDM0JLLGdCQUFBQSxJQUFJLEVBQUVILElBQUksQ0FBQ0csSUFEZ0I7QUFFM0JDLGdCQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FGZTtBQUczQkMsZ0JBQUFBLFdBQVcsRUFBRUwsSUFBSSxDQUFDSztBQUhTLGVBQXRCLENBRkk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFRUEMsRUFBQUEsVUFSTztBQUFBO0FBQUE7QUFBQSw4Q0FRS1AsTUFSTCxFQVFhQyxJQVJiLEVBUW1CQyxHQVJuQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0RBU0pBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXSSxVQUFYLENBQXVCO0FBQzVCQyxnQkFBQUEsS0FBSyxFQUFFO0FBQUNDLGtCQUFBQSxFQUFFLEVBQUVSLElBQUksQ0FBQ1E7QUFBVixpQkFEcUI7QUFFNUJDLGdCQUFBQSxJQUFJLEVBQUM7QUFDSE4sa0JBQUFBLElBQUksRUFBRUgsSUFBSSxDQUFDRyxJQURSO0FBRUhDLGtCQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FGVDtBQUdIQyxrQkFBQUEsV0FBVyxFQUFFTCxJQUFJLENBQUNLO0FBSGY7QUFGdUIsZUFBdkIsQ0FUSTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQWtCUEssRUFBQUEsVUFsQk87QUFBQTtBQUFBO0FBQUEsOENBa0JLWCxNQWxCTCxFQWtCYUMsSUFsQmIsRUFrQm1CQyxHQWxCbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGdEQW1CSkEsR0FBRyxDQUFDQyxNQUFKLENBQVdRLFVBQVgsQ0FBdUI7QUFDNUJGLGdCQUFBQSxFQUFFLEVBQUVSLElBQUksQ0FBQ1c7QUFEbUIsZUFBdkIsQ0FuQkk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUF5QlBDLEVBQUFBLGNBekJPO0FBQUE7QUFBQTtBQUFBLDhDQXlCU2IsTUF6QlQsRUF5QmlCQyxJQXpCakIsRUF5QnVCQyxHQXpCdkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBMEJYO0FBQ01ZLGNBQUFBLE1BM0JLLEdBMkJJLHNCQUFVWixHQUFWLENBM0JKO0FBQUEsZ0RBNEJKQSxHQUFHLENBQUNDLE1BQUosQ0FBV1UsY0FBWCxDQUEwQjtBQUMvQkUsZ0JBQUFBLE1BQU0sRUFBRSxLQUR1QjtBQUUvQkMsZ0JBQUFBLElBQUksRUFBQztBQUNIQyxrQkFBQUEsT0FBTyxFQUFDO0FBQ05SLG9CQUFBQSxFQUFFLEVBQUVSLElBQUksQ0FBQ1c7QUFESDtBQURMLGlCQUYwQjtBQU0vQk0sZ0JBQUFBLElBQUksRUFBRTtBQUNKRCxrQkFBQUEsT0FBTyxFQUFFO0FBQUNSLG9CQUFBQSxFQUFFLEVBQUVLO0FBQUw7QUFETDtBQU55QixlQUExQixDQTVCSTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQXdDVEssRUFBQUEsY0F4Q1M7QUFBQTtBQUFBO0FBQUEsOENBd0NPbkIsTUF4Q1AsRUF3Q2VDLElBeENmLEVBd0NxQkMsR0F4Q3JCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQXlDTFksY0FBQUEsTUF6Q0ssR0F5Q0ksc0JBQVVaLEdBQVYsQ0F6Q0o7O0FBQUEsa0JBMENOWSxNQTFDTTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxvQkEyQ0gsSUFBSU0sS0FBSixDQUFVLG1CQUFWLENBM0NHOztBQUFBO0FBQUEsZ0RBNkNKbEIsR0FBRyxDQUFDQyxNQUFKLENBQVdnQixjQUFYLENBQTBCO0FBQy9CWCxnQkFBQUEsS0FBSyxFQUFFO0FBQUNDLGtCQUFBQSxFQUFFLEVBQUVSLElBQUksQ0FBQ1c7QUFBVixpQkFEd0I7QUFFL0JGLGdCQUFBQSxJQUFJLEVBQUU7QUFDSkssa0JBQUFBLE1BQU0sRUFBRWQsSUFBSSxDQUFDYztBQURUO0FBRnlCLGVBQTFCLENBN0NJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBcURQTSxFQUFBQSxjQXJETztBQUFBO0FBQUE7QUFBQSw4Q0FxRFNyQixNQXJEVCxFQXFEaUJDLElBckRqQixFQXFEdUJDLEdBckR2QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFzRExZLGNBQUFBLE1BdERLLEdBc0RJLHNCQUFVWixHQUFWLENBdERKOztBQUFBLGtCQXVETlksTUF2RE07QUFBQTtBQUFBO0FBQUE7O0FBQUEsb0JBd0RILElBQUlNLEtBQUosQ0FBVSxtQkFBVixDQXhERzs7QUFBQTtBQUFBLGdEQTBESmxCLEdBQUcsQ0FBQ0MsTUFBSixDQUFXa0IsY0FBWCxDQUEwQjtBQUMvQlosZ0JBQUFBLEVBQUUsRUFBRVIsSUFBSSxDQUFDVztBQURzQixlQUExQixDQTFESTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvVGVzdFByaXNtYS9hcGkvc3JjL3Jlc29sdmVycy9NdXRhdGlvbiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFVzZXJJZCB9IGZyb20gJy4uLy4uL3V0aWxzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFzeW5jIGNyZWF0ZUZpbG0gKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuY3JlYXRlRmlsbSh7XG4gICAgICBuYW1lOiBhcmdzLm5hbWUsXG4gICAgICBnZW5yZTogYXJncy5nZW5yZSxcbiAgICAgIGRlc2NyaXB0aW9uOiBhcmdzLmRlc2NyaXB0aW9uXG4gICAgfSlcbiAgfSxcbiAgYXN5bmMgdXBkYXRlRmlsbSAocGFyZW50LCBhcmdzLCBjdHgpe1xuICAgIHJldHVybiBjdHgucHJpc21hLnVwZGF0ZUZpbG0gKHtcbiAgICAgIHdoZXJlOiB7aWQ6IGFyZ3MuaWR9LFxuICAgICAgZGF0YTp7XG4gICAgICAgIG5hbWU6IGFyZ3MubmFtZSxcbiAgICAgICAgZ2VucmU6IGFyZ3MuZ2VucmUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBhcmdzLmRlc2NyaXB0aW9uXG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIGFzeW5jIGRlbGV0ZUZpbG0gKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuZGVsZXRlRmlsbSAoe1xuICAgICAgaWQ6IGFyZ3MuaWRGaWxtXG4gICAgfSk7XG4gIH0sXG5cblxuICBhc3luYyBjcmVhdGVGaWxtVXNlciAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICAvL2NvbnN0IHVzZXJJZCA9IHVzZXIuaWQ7XG4gICAgY29uc3QgdXNlcklkID0gZ2V0VXNlcklkKGN0eCk7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuY3JlYXRlRmlsbVVzZXIoe1xuICAgICAgZmluaXNoOiBmYWxzZSxcbiAgICAgIGZpbG06e1xuICAgICAgICBjb25uZWN0OntcbiAgICAgICAgICBpZDogYXJncy5pZEZpbG1cbiAgICAgICAgfX0sXG4gICAgICB1c2VyOiB7XG4gICAgICAgIGNvbm5lY3Q6IHtpZDogdXNlcklkfVxuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG5hc3luYyB1cGRhdGVGaWxtVXNlciAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICBjb25zdCB1c2VySWQgPSBnZXRVc2VySWQoY3R4KTtcbiAgICBpZiAoIXVzZXJJZCl7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgQXV0aGVudGljYXRlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEudXBkYXRlRmlsbVVzZXIoe1xuICAgICAgd2hlcmU6IHtpZDogYXJncy5pZEZpbG19LFxuICAgICAgZGF0YToge1xuICAgICAgICBmaW5pc2g6IGFyZ3MuZmluaXNoLFxuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIGFzeW5jIGRlbGV0ZUZpbG1Vc2VyIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpO1xuICAgIGlmICghdXNlcklkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgQXV0aGVudGljYXRlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuZGVsZXRlRmlsbVVzZXIoe1xuICAgICAgaWQ6IGFyZ3MuaWRGaWxtXG4gICAgfSk7XG4gIH0sXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "film.js"
      ],
      "names": [
        "createFilm",
        "parent",
        "args",
        "ctx",
        "prisma",
        "name",
        "genre",
        "description",
        "updateFilm",
        "where",
        "id",
        "data",
        "deleteFilm",
        "idFilm",
        "createFilmUser",
        "userId",
        "finish",
        "film",
        "connect",
        "user",
        "updateFilmUser",
        "Error",
        "deleteFilmUser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAEe;AACPA,EAAAA,UADO;AAAA;AAAA;AAAA,6CACKC,MADL,EACaC,IADb,EACmBC,GADnB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEJA,GAAG,CAACC,MAAJ,CAAWJ,UAAX,CAAsB;AAC3BK,gBAAAA,IAAI,EAAEH,IAAI,CAACG,IADgB;AAE3BC,gBAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFe;AAG3BC,gBAAAA,WAAW,EAAEL,IAAI,CAACK;AAHS,eAAtB,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQPC,EAAAA,UARO;AAAA;AAAA;AAAA,8CAQKP,MARL,EAQaC,IARb,EAQmBC,GARnB;AAAA;AAAA;AAAA;AAAA;AAAA,gDASJA,GAAG,CAACC,MAAJ,CAAWI,UAAX,CAAuB;AAC5BC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAER,IAAI,CAACQ;AAAV,iBADqB;AAE5BC,gBAAAA,IAAI,EAAC;AACHN,kBAAAA,IAAI,EAAEH,IAAI,CAACG,IADR;AAEHC,kBAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFT;AAGHC,kBAAAA,WAAW,EAAEL,IAAI,CAACK;AAHf;AAFuB,eAAvB,CATI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBPK,EAAAA,UAlBO;AAAA;AAAA;AAAA,8CAkBKX,MAlBL,EAkBaC,IAlBb,EAkBmBC,GAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAmBJA,GAAG,CAACC,MAAJ,CAAWQ,UAAX,CAAuB;AAC5BF,gBAAAA,EAAE,EAAER,IAAI,CAACW;AADmB,eAAvB,CAnBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBPC,EAAAA,cAzBO;AAAA;AAAA;AAAA,8CAyBSb,MAzBT,EAyBiBC,IAzBjB,EAyBuBC,GAzBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BX;AACMY,cAAAA,MA3BK,GA2BI,sBAAUZ,GAAV,CA3BJ;AAAA,gDA4BJA,GAAG,CAACC,MAAJ,CAAWU,cAAX,CAA0B;AAC/BE,gBAAAA,MAAM,EAAE,KADuB;AAE/BC,gBAAAA,IAAI,EAAC;AACHC,kBAAAA,OAAO,EAAC;AACNR,oBAAAA,EAAE,EAAER,IAAI,CAACW;AADH;AADL,iBAF0B;AAM/BM,gBAAAA,IAAI,EAAE;AACJD,kBAAAA,OAAO,EAAE;AAACR,oBAAAA,EAAE,EAAEK;AAAL;AADL;AANyB,eAA1B,CA5BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwCTK,EAAAA,cAxCS;AAAA;AAAA;AAAA,8CAwCOnB,MAxCP,EAwCeC,IAxCf,EAwCqBC,GAxCrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCLY,cAAAA,MAzCK,GAyCI,sBAAUZ,GAAV,CAzCJ;;AAAA,kBA0CNY,MA1CM;AAAA;AAAA;AAAA;;AAAA,oBA2CH,IAAIM,KAAJ,CAAU,mBAAV,CA3CG;;AAAA;AAAA,gDA6CJlB,GAAG,CAACC,MAAJ,CAAWgB,cAAX,CAA0B;AAC/BX,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAER,IAAI,CAACW;AAAV,iBADwB;AAE/BF,gBAAAA,IAAI,EAAE;AACJK,kBAAAA,MAAM,EAAEd,IAAI,CAACc;AADT;AAFyB,eAA1B,CA7CI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqDPM,EAAAA,cArDO;AAAA;AAAA;AAAA,8CAqDSrB,MArDT,EAqDiBC,IArDjB,EAqDuBC,GArDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDLY,cAAAA,MAtDK,GAsDI,sBAAUZ,GAAV,CAtDJ;;AAAA,kBAuDNY,MAvDM;AAAA;AAAA;AAAA;;AAAA,oBAwDH,IAAIM,KAAJ,CAAU,mBAAV,CAxDG;;AAAA;AAAA,gDA0DJlB,GAAG,CAACC,MAAJ,CAAWkB,cAAX,CAA0B;AAC/BZ,gBAAAA,EAAE,EAAER,IAAI,CAACW;AADsB,eAA1B,CA1DI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import { getUserId } from '../../utils'\n\nexport default {\n  async createFilm (parent, args, ctx) {\n    return ctx.prisma.createFilm({\n      name: args.name,\n      genre: args.genre,\n      description: args.description\n    })\n  },\n  async updateFilm (parent, args, ctx){\n    return ctx.prisma.updateFilm ({\n      where: {id: args.id},\n      data:{\n        name: args.name,\n        genre: args.genre,\n        description: args.description\n      }\n    });\n  },\n  async deleteFilm (parent, args, ctx) {\n    return ctx.prisma.deleteFilm ({\n      id: args.idFilm\n    });\n  },\n\n\n  async createFilmUser (parent, args, ctx) {\n    //const userId = user.id;\n    const userId = getUserId(ctx);\n    return ctx.prisma.createFilmUser({\n      finish: false,\n      film:{\n        connect:{\n          id: args.idFilm\n        }},\n      user: {\n        connect: {id: userId}\n      }\n    });\n  },\n\nasync updateFilmUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.updateFilmUser({\n      where: {id: args.idFilm},\n      data: {\n        finish: args.finish,\n      }\n    });\n  },\n\n  async deleteFilmUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId) {\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.deleteFilmUser({\n      id: args.idFilm\n    });\n  },\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551553178943
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Filmz.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Filmz.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Filmz.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Filmz.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "Filmz.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  sousFilms: function sousFilms(parent, args, context) {\n    return context.prisma.film({\n      id: parent.id\n    }).sousFilms();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpbG16LmpzIl0sIm5hbWVzIjpbInNvdXNGaWxtcyIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwiZmlsbSIsImlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxTQURhLHFCQUNGQyxNQURFLEVBQ01DLElBRE4sRUFDWUMsT0FEWixFQUNxQjtBQUNoQyxXQUFPQSxPQUFPLENBQUNDLE1BQVIsQ0FBZUMsSUFBZixDQUFvQjtBQUN6QkMsTUFBQUEsRUFBRSxFQUFFTCxNQUFNLENBQUNLO0FBRGMsS0FBcEIsRUFFSk4sU0FGSSxFQUFQO0FBR0Q7QUFMWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL1Rlc3RQcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIHNvdXNGaWxtcyAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLmZpbG0oe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLnNvdXNGaWxtcygpXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Filmz.js"
      ],
      "names": [
        "sousFilms",
        "parent",
        "args",
        "context",
        "prisma",
        "film",
        "id"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,SADa,qBACFC,MADE,EACMC,IADN,EACYC,OADZ,EACqB;AAChC,WAAOA,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoB;AACzBC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADc,KAApB,EAEJN,SAFI,EAAP;AAGD;AALY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  sousFilms (parent, args, context) {\n    return context.prisma.film({\n      id: parent.id\n    }).sousFilms()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551377941620
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Film.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Film.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Film.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Film.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "Film.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9UZXN0UHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOltdfQ==",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1551400732246
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/FilmUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/FilmUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/FilmUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/FilmUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "FilmUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  film: function film(parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).film();\n  },\n  user: function user(parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).user();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpbG1Vc2VyLmpzIl0sIm5hbWVzIjpbImZpbG0iLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsImZpbG1Vc2VyIiwiaWQiLCJ1c2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxJQURhLGdCQUNQQyxNQURPLEVBQ0NDLElBREQsRUFDT0MsT0FEUCxFQUNnQjtBQUMzQixXQUFPQSxPQUFPLENBQUNDLE1BQVIsQ0FBZUMsUUFBZixDQUF3QjtBQUM3QkMsTUFBQUEsRUFBRSxFQUFFTCxNQUFNLENBQUNLO0FBRGtCLEtBQXhCLEVBRUpOLElBRkksRUFBUDtBQUdELEdBTFk7QUFNYk8sRUFBQUEsSUFOYSxnQkFNUE4sTUFOTyxFQU1DQyxJQU5ELEVBTU9DLE9BTlAsRUFNZ0I7QUFDM0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLFFBQWYsQ0FBd0I7QUFDN0JDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURrQixLQUF4QixFQUVKQyxJQUZJLEVBQVA7QUFHRDtBQVZZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvVGVzdFByaXNtYS9hcGkvc3JjL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZmlsbSAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLmZpbG1Vc2VyKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5maWxtKClcbiAgfSxcbiAgdXNlciAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLmZpbG1Vc2VyKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS51c2VyKClcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "FilmUser.js"
      ],
      "names": [
        "film",
        "parent",
        "args",
        "context",
        "prisma",
        "filmUser",
        "id",
        "user"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,IADa,gBACPC,MADO,EACCC,IADD,EACOC,OADP,EACgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB;AAC7BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADkB,KAAxB,EAEJN,IAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,IANa,gBAMPN,MANO,EAMCC,IAND,EAMOC,OANP,EAMgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB;AAC7BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADkB,KAAxB,EAEJC,IAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  film (parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).film()\n  },\n  user (parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).user()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551442195778
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  film: function film(parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).film();\n  },\n  serie: function serie(parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).serie();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiZmlsbSIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwidXNlciIsImlkIiwic2VyaWUiXSwibWFwcGluZ3MiOiI7Ozs7OztlQUFlO0FBQ2JBLEVBQUFBLElBRGEsZ0JBQ1BDLE1BRE8sRUFDQ0MsSUFERCxFQUNPQyxPQURQLEVBQ2dCO0FBQzNCLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxJQUFmLENBQW9CO0FBQ3pCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEYyxLQUFwQixFQUVKTixJQUZJLEVBQVA7QUFHRCxHQUxZO0FBT2JPLEVBQUFBLEtBUGEsaUJBT05OLE1BUE0sRUFPRUMsSUFQRixFQU9RQyxPQVBSLEVBT2lCO0FBQzVCLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxJQUFmLENBQW9CO0FBQ3pCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEYyxLQUFwQixFQUVKQyxLQUZJLEVBQVA7QUFHRDtBQVhZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvVGVzdFByaXNtYS9hcGkvc3JjL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgZmlsbSAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLnVzZXIoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLmZpbG0oKVxuICB9LFxuXG4gIHNlcmllIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEudXNlcih7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkuc2VyaWUoKVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "film",
        "parent",
        "args",
        "context",
        "prisma",
        "user",
        "id",
        "serie"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,IADa,gBACPC,MADO,EACCC,IADD,EACOC,OADP,EACgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoB;AACzBC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADc,KAApB,EAEJN,IAFI,EAAP;AAGD,GALY;AAObO,EAAAA,KAPa,iBAONN,MAPM,EAOEC,IAPF,EAOQC,OAPR,EAOiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoB;AACzBC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADc,KAApB,EAEJC,KAFI,EAAP;AAGD;AAXY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  film (parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).film()\n  },\n\n  serie (parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).serie()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551809730368
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/serie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/serie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/serie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation/serie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
        "sourceFileName": "serie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  createSerie: function () {\n    var _createSerie = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", ctx.prisma.createSerie({\n                name: args.name,\n                genre: args.genre,\n                description: args.description,\n                nbEp: args.nbEp,\n                nbSais: args.nbSais\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function createSerie(_x, _x2, _x3) {\n      return _createSerie.apply(this, arguments);\n    }\n\n    return createSerie;\n  }(),\n  updateSerie: function () {\n    var _updateSerie = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", ctx.prisma.updateSerie({\n                where: {\n                  id: args.idSerie\n                },\n                data: {\n                  name: args.name,\n                  genre: args.genre,\n                  description: args.description,\n                  nbEp: args.nbEp,\n                  nbSais: args.nbSais\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function updateSerie(_x4, _x5, _x6) {\n      return _updateSerie.apply(this, arguments);\n    }\n\n    return updateSerie;\n  }(),\n  deleteSerie: function () {\n    var _deleteSerie = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", ctx.prisma.deleteSerie({\n                id: args.idSerie\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteSerie(_x7, _x8, _x9) {\n      return _deleteSerie.apply(this, arguments);\n    }\n\n    return deleteSerie;\n  }(),\n  createSaison: function () {\n    var _createSaison = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", ctx.prisma.createSaison({\n                number: args.number,\n                serie: {\n                  connect: {\n                    id: args.idSerie\n                  }\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function createSaison(_x10, _x11, _x12) {\n      return _createSaison.apply(this, arguments);\n    }\n\n    return createSaison;\n  }(),\n  deleteSaison: function () {\n    var _deleteSaison = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", ctx.prisma.deleteSaison({\n                id: args.idSais\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function deleteSaison(_x13, _x14, _x15) {\n      return _deleteSaison.apply(this, arguments);\n    }\n\n    return deleteSaison;\n  }(),\n  createEpisode: function () {\n    var _createEpisode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", ctx.prisma.createEpisode({\n                name: args.name,\n                description: args.description,\n                saison: {\n                  connect: {\n                    id: args.idSais\n                  }\n                },\n                serie: {\n                  connect: {\n                    id: args.idSerie\n                  }\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function createEpisode(_x16, _x17, _x18) {\n      return _createEpisode.apply(this, arguments);\n    }\n\n    return createEpisode;\n  }(),\n  updateEpisode: function () {\n    var _updateEpisode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", ctx.prisma.updateEpisode({\n                where: {\n                  id: args.idEp\n                },\n                data: {\n                  name: args.name,\n                  description: args.description\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function updateEpisode(_x19, _x20, _x21) {\n      return _updateEpisode.apply(this, arguments);\n    }\n\n    return updateEpisode;\n  }(),\n  deleteEpisode: function () {\n    var _deleteEpisode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", ctx.prisma.deleteEpisode({\n                id: args.idEp\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function deleteEpisode(_x22, _x23, _x24) {\n      return _deleteEpisode.apply(this, arguments);\n    }\n\n    return deleteEpisode;\n  }(),\n  createSerieUser: function () {\n    var _createSerieUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              //const userId = user.id;\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context9.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context9.abrupt(\"return\", ctx.prisma.createSerieUser({\n                finish: false,\n                serie: {\n                  connect: {\n                    id: args.idSerie\n                  }\n                },\n                user: {\n                  connect: {\n                    id: userId\n                  }\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function createSerieUser(_x25, _x26, _x27) {\n      return _createSerieUser.apply(this, arguments);\n    }\n\n    return createSerieUser;\n  }(),\n  updateSerieUser: function () {\n    var _updateSerieUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context10.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context10.abrupt(\"return\", ctx.prisma.updateSerieUser({\n                where: {\n                  id: args.idSerie\n                },\n                data: {\n                  finish: args.finish\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function updateSerieUser(_x28, _x29, _x30) {\n      return _updateSerieUser.apply(this, arguments);\n    }\n\n    return updateSerieUser;\n  }(),\n  deleteSerieUser: function () {\n    var _deleteSerieUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context11.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context11.abrupt(\"return\", ctx.prisma.deleteSerieUser({\n                id: args.idSerie\n              }));\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function deleteSerieUser(_x31, _x32, _x33) {\n      return _deleteSerieUser.apply(this, arguments);\n    }\n\n    return deleteSerieUser;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "serie.js"
      ],
      "names": [
        "createSerie",
        "parent",
        "args",
        "ctx",
        "prisma",
        "name",
        "genre",
        "description",
        "nbEp",
        "nbSais",
        "updateSerie",
        "where",
        "id",
        "idSerie",
        "data",
        "deleteSerie",
        "createSaison",
        "number",
        "serie",
        "connect",
        "deleteSaison",
        "idSais",
        "createEpisode",
        "saison",
        "updateEpisode",
        "idEp",
        "deleteEpisode",
        "createSerieUser",
        "userId",
        "Error",
        "finish",
        "user",
        "updateSerieUser",
        "deleteSerieUser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAEe;AACPA,EAAAA,WADO;AAAA;AAAA;AAAA,6CACMC,MADN,EACcC,IADd,EACoBC,GADpB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEJA,GAAG,CAACC,MAAJ,CAAWJ,WAAX,CAAwB;AAC7BK,gBAAAA,IAAI,EAAEH,IAAI,CAACG,IADkB;AAE7BC,gBAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFiB;AAG7BC,gBAAAA,WAAW,EAAEL,IAAI,CAACK,WAHW;AAI7BC,gBAAAA,IAAI,EAAEN,IAAI,CAACM,IAJkB;AAK7BC,gBAAAA,MAAM,EAAEP,IAAI,CAACO;AALgB,eAAxB,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAUPC,EAAAA,WAVO;AAAA;AAAA;AAAA,8CAUMT,MAVN,EAUcC,IAVd,EAUoBC,GAVpB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAWJA,GAAG,CAACC,MAAJ,CAAWM,WAAX,CAAwB;AAC7BC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV,iBADsB;AAE7BC,gBAAAA,IAAI,EAAE;AACJT,kBAAAA,IAAI,EAAEH,IAAI,CAACG,IADP;AAEJC,kBAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFR;AAGJC,kBAAAA,WAAW,EAAEL,IAAI,CAACK,WAHd;AAIJC,kBAAAA,IAAI,EAAEN,IAAI,CAACM,IAJP;AAKJC,kBAAAA,MAAM,EAAEP,IAAI,CAACO;AALT;AAFuB,eAAxB,CAXI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBPM,EAAAA,WAtBO;AAAA;AAAA;AAAA,8CAsBMd,MAtBN,EAsBcC,IAtBd,EAsBoBC,GAtBpB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAuBJA,GAAG,CAACC,MAAJ,CAAWW,WAAX,CAAwB;AAC7BH,gBAAAA,EAAE,EAAEV,IAAI,CAACW;AADoB,eAAxB,CAvBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4BPG,EAAAA,YA5BO;AAAA;AAAA;AAAA,8CA4BOf,MA5BP,EA4BeC,IA5Bf,EA4BqBC,GA5BrB;AAAA;AAAA;AAAA;AAAA;AAAA,gDA6BJA,GAAG,CAACC,MAAJ,CAAWY,YAAX,CAAyB;AAC9BC,gBAAAA,MAAM,EAAEf,IAAI,CAACe,MADiB;AAE9BC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV;AADJ;AAFuB,eAAzB,CA7BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCPO,EAAAA,YApCO;AAAA;AAAA;AAAA,8CAoCOnB,MApCP,EAoCeC,IApCf,EAoCqBC,GApCrB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAqCJA,GAAG,CAACC,MAAJ,CAAWgB,YAAX,CAAwB;AAC7BR,gBAAAA,EAAE,EAAEV,IAAI,CAACmB;AADoB,eAAxB,CArCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0CPC,EAAAA,aA1CO;AAAA;AAAA;AAAA,8CA0CQrB,MA1CR,EA0CgBC,IA1ChB,EA0CsBC,GA1CtB;AAAA;AAAA;AAAA;AAAA;AAAA,gDA2CJA,GAAG,CAACC,MAAJ,CAAWkB,aAAX,CAA0B;AAC/BjB,gBAAAA,IAAI,EAAEH,IAAI,CAACG,IADoB;AAE/BE,gBAAAA,WAAW,EAAEL,IAAI,CAACK,WAFa;AAG/BgB,gBAAAA,MAAM,EAAE;AACNJ,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEV,IAAI,CAACmB;AAAV;AADH,iBAHuB;AAM/BH,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV;AADJ;AANwB,eAA1B,CA3CI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsDPW,EAAAA,aAtDO;AAAA;AAAA;AAAA,8CAsDQvB,MAtDR,EAsDgBC,IAtDhB,EAsDsBC,GAtDtB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAuDJA,GAAG,CAACC,MAAJ,CAAWoB,aAAX,CAA0B;AAC/Bb,gBAAAA,KAAK,EAAC;AAACC,kBAAAA,EAAE,EAAEV,IAAI,CAACuB;AAAV,iBADyB;AAE/BX,gBAAAA,IAAI,EAAC;AACHT,kBAAAA,IAAI,EAAEH,IAAI,CAACG,IADR;AAEHE,kBAAAA,WAAW,EAAEL,IAAI,CAACK;AAFf;AAF0B,eAA1B,CAvDI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+DPmB,EAAAA,aA/DO;AAAA;AAAA;AAAA,8CA+DQzB,MA/DR,EA+DgBC,IA/DhB,EA+DsBC,GA/DtB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAgEJA,GAAG,CAACC,MAAJ,CAAWsB,aAAX,CAA0B;AAC/Bd,gBAAAA,EAAE,EAAEV,IAAI,CAACuB;AADsB,eAA1B,CAhEI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqEPE,EAAAA,eArEO;AAAA;AAAA;AAAA,8CAqEU1B,MArEV,EAqEkBC,IArElB,EAqEwBC,GArExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAsEX;AACMyB,cAAAA,MAvEK,GAuEI,sBAAUzB,GAAV,CAvEJ;;AAAA,kBAwENyB,MAxEM;AAAA;AAAA;AAAA;;AAAA,oBAyEH,IAAIC,KAAJ,CAAU,mBAAV,CAzEG;;AAAA;AAAA,gDA2EJ1B,GAAG,CAACC,MAAJ,CAAWuB,eAAX,CAA2B;AAChCG,gBAAAA,MAAM,EAAE,KADwB;AAEhCZ,gBAAAA,KAAK,EAAC;AACJC,kBAAAA,OAAO,EAAC;AACNP,oBAAAA,EAAE,EAAEV,IAAI,CAACW;AADH;AADJ,iBAF0B;AAMhCkB,gBAAAA,IAAI,EAAE;AACJZ,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEgB;AAAL;AADL;AAN0B,eAA3B,CA3EI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsFPI,EAAAA,eAtFO;AAAA;AAAA;AAAA,+CAsFU/B,MAtFV,EAsFkBC,IAtFlB,EAsFwBC,GAtFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAuFLyB,cAAAA,MAvFK,GAuFI,sBAAUzB,GAAV,CAvFJ;;AAAA,kBAwFNyB,MAxFM;AAAA;AAAA;AAAA;;AAAA,oBAyFH,IAAIC,KAAJ,CAAU,mBAAV,CAzFG;;AAAA;AAAA,iDA2FJ1B,GAAG,CAACC,MAAJ,CAAW4B,eAAX,CAA2B;AAChCrB,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV,iBADyB;AAEhCC,gBAAAA,IAAI,EAAE;AACJgB,kBAAAA,MAAM,EAAE5B,IAAI,CAAC4B;AADT;AAF0B,eAA3B,CA3FI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkGPG,EAAAA,eAlGO;AAAA;AAAA;AAAA,+CAkGUhC,MAlGV,EAkGkBC,IAlGlB,EAkGwBC,GAlGxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAmGLyB,cAAAA,MAnGK,GAmGI,sBAAUzB,GAAV,CAnGJ;;AAAA,kBAoGNyB,MApGM;AAAA;AAAA;AAAA;;AAAA,oBAqGH,IAAIC,KAAJ,CAAU,mBAAV,CArGG;;AAAA;AAAA,iDAuGJ1B,GAAG,CAACC,MAAJ,CAAW6B,eAAX,CAA2B;AAChCrB,gBAAAA,EAAE,EAAEV,IAAI,CAACW;AADuB,eAA3B,CAvGI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import { getUserId } from '../../utils'\n\nexport default {\n  async createSerie (parent, args, ctx) {\n    return ctx.prisma.createSerie ({\n      name: args.name,\n      genre: args.genre,\n      description: args.description,\n      nbEp: args.nbEp,\n      nbSais: args.nbSais\n    });\n  },\n  async updateSerie (parent, args, ctx) {\n    return ctx.prisma.updateSerie ({\n      where: {id: args.idSerie},\n      data: {\n        name: args.name,\n        genre: args.genre,\n        description: args.description,\n        nbEp: args.nbEp,\n        nbSais: args.nbSais\n      }\n    });\n  },\n  async deleteSerie (parent, args, ctx) {\n    return ctx.prisma.deleteSerie ({\n      id: args.idSerie\n    });\n  },\n\n  async createSaison (parent, args, ctx){\n    return ctx.prisma.createSaison ({\n      number: args.number,\n      serie: {\n        connect: {id: args.idSerie},\n      }\n    });\n  },\n  async deleteSaison (parent, args, ctx){\n    return ctx.prisma.deleteSaison({\n      id: args.idSais\n    });\n  },\n\n  async createEpisode (parent, args, ctx) {\n    return ctx.prisma.createEpisode ({\n      name: args.name,\n      description: args.description,\n      saison: {\n        connect: {id: args.idSais}\n      },\n      serie: {\n        connect: {id: args.idSerie}\n      }\n    });\n  },\n  async updateEpisode (parent, args, ctx) {\n    return ctx.prisma.updateEpisode ({\n      where:{id: args.idEp},\n      data:{\n        name: args.name,\n        description: args.description\n      }\n    });\n  },\n  async deleteEpisode (parent, args, ctx) {\n    return ctx.prisma.deleteEpisode ({\n      id: args.idEp\n    });\n  },\n\n  async createSerieUser (parent, args, ctx) {\n    //const userId = user.id;\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.createSerieUser({\n      finish: false,\n      serie:{\n        connect:{\n          id: args.idSerie\n        }},\n      user: {\n        connect: {id: userId}\n      }\n    });\n  },\n  async updateSerieUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.updateSerieUser({\n      where: {id: args.idSerie},\n      data: {\n        finish: args.finish,\n      }\n    });\n  },\n  async deleteSerieUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId) {\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.deleteSerieUser({\n      id: args.idSerie\n    });\n  },\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551814354656
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Serie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Serie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Serie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Serie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "Serie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  saisons: function saisons(parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).saisons();\n  },\n  episodes: function episodes(parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).episodes();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcmllLmpzIl0sIm5hbWVzIjpbInNhaXNvbnMiLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsInNlcmllIiwiaWQiLCJlcGlzb2RlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsT0FEYSxtQkFDSkMsTUFESSxFQUNJQyxJQURKLEVBQ1VDLE9BRFYsRUFDbUI7QUFDOUIsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBcUI7QUFDMUJDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURlLEtBQXJCLEVBRUpOLE9BRkksRUFBUDtBQUdELEdBTFk7QUFPYk8sRUFBQUEsUUFQYSxvQkFPSE4sTUFQRyxFQU9LQyxJQVBMLEVBT1dDLE9BUFgsRUFPb0I7QUFDL0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBcUI7QUFDMUJDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURlLEtBQXJCLEVBRUpDLFFBRkksRUFBUDtBQUdEO0FBWFksQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9UZXN0UHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBzYWlzb25zIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuc2VyaWUoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLnNhaXNvbnMoKVxuICB9LFxuXG4gIGVwaXNvZGVzIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuc2VyaWUoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLmVwaXNvZGVzKClcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Serie.js"
      ],
      "names": [
        "saisons",
        "parent",
        "args",
        "context",
        "prisma",
        "serie",
        "id",
        "episodes"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,OADa,mBACJC,MADI,EACIC,IADJ,EACUC,OADV,EACmB;AAC9B,WAAOA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB;AAC1BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADe,KAArB,EAEJN,OAFI,EAAP;AAGD,GALY;AAObO,EAAAA,QAPa,oBAOHN,MAPG,EAOKC,IAPL,EAOWC,OAPX,EAOoB;AAC/B,WAAOA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB;AAC1BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADe,KAArB,EAEJC,QAFI,EAAP;AAGD;AAXY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  saisons (parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).saisons()\n  },\n\n  episodes (parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).episodes()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551809966910
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Saison.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Saison.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Saison.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Saison.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "Saison.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  serie: function serie(parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).serie();\n  },\n  episodes: function episodes(parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).episodes();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNhaXNvbi5qcyJdLCJuYW1lcyI6WyJzZXJpZSIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwic2Fpc29uIiwiaWQiLCJlcGlzb2RlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsS0FEYSxpQkFDTkMsTUFETSxFQUNFQyxJQURGLEVBQ1FDLE9BRFIsRUFDaUI7QUFDNUIsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLE1BQWYsQ0FBc0I7QUFDM0JDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURnQixLQUF0QixFQUVKTixLQUZJLEVBQVA7QUFHRCxHQUxZO0FBTWJPLEVBQUFBLFFBTmEsb0JBTUhOLE1BTkcsRUFNS0MsSUFOTCxFQU1XQyxPQU5YLEVBTW9CO0FBQy9CLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxNQUFmLENBQXNCO0FBQzNCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEZ0IsS0FBdEIsRUFFSkMsUUFGSSxFQUFQO0FBR0Q7QUFWWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL1Rlc3RQcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIHNlcmllIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuc2Fpc29uKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5zZXJpZSgpXG4gIH0sXG4gIGVwaXNvZGVzIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuc2Fpc29uKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5lcGlzb2RlcygpXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Saison.js"
      ],
      "names": [
        "serie",
        "parent",
        "args",
        "context",
        "prisma",
        "saison",
        "id",
        "episodes"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,OADR,EACiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,MAAf,CAAsB;AAC3BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADgB,KAAtB,EAEJN,KAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,QANa,oBAMHN,MANG,EAMKC,IANL,EAMWC,OANX,EAMoB;AAC/B,WAAOA,OAAO,CAACC,MAAR,CAAeC,MAAf,CAAsB;AAC3BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADgB,KAAtB,EAEJC,QAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  serie (parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).serie()\n  },\n  episodes (parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).episodes()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813543414
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Episode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Episode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Episode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/Episode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "Episode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  serie: function serie(parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).serie();\n  },\n  saison: function saison(parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).saison();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVwaXNvZGUuanMiXSwibmFtZXMiOlsic2VyaWUiLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsImVwaXNvZGUiLCJpZCIsInNhaXNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsS0FEYSxpQkFDTkMsTUFETSxFQUNFQyxJQURGLEVBQ1FDLE9BRFIsRUFDaUI7QUFDNUIsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLE9BQWYsQ0FBdUI7QUFDNUJDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURpQixLQUF2QixFQUVKTixLQUZJLEVBQVA7QUFHRCxHQUxZO0FBTWJPLEVBQUFBLE1BTmEsa0JBTUxOLE1BTkssRUFNR0MsSUFOSCxFQU1TQyxPQU5ULEVBTWtCO0FBQzdCLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxPQUFmLENBQXVCO0FBQzVCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEaUIsS0FBdkIsRUFFSkMsTUFGSSxFQUFQO0FBR0Q7QUFWWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL1Rlc3RQcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIHNlcmllIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuZXBpc29kZSh7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkuc2VyaWUoKVxuICB9LFxuICBzYWlzb24gKHBhcmVudCwgYXJncywgY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnByaXNtYS5lcGlzb2RlKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5zYWlzb24oKVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Episode.js"
      ],
      "names": [
        "serie",
        "parent",
        "args",
        "context",
        "prisma",
        "episode",
        "id",
        "saison"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,OADR,EACiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,CAAuB;AAC5BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADiB,KAAvB,EAEJN,KAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,MANa,kBAMLN,MANK,EAMGC,IANH,EAMSC,OANT,EAMkB;AAC7B,WAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,CAAuB;AAC5BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADiB,KAAvB,EAEJC,MAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  serie (parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).serie()\n  },\n  saison (parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).saison()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813654503
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/SerieUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/TestPrisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/SerieUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/TestPrisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/SerieUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers/SerieUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
        "sourceFileName": "SerieUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  serie: function serie(parent, args, context) {\n    return context.prisma.serieUser({\n      id: parent.id\n    }).serie();\n  },\n  user: function user(parent, args, context) {\n    return context.prisma.SerieUser({\n      id: parent.id\n    }).user();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcmllVXNlci5qcyJdLCJuYW1lcyI6WyJzZXJpZSIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwic2VyaWVVc2VyIiwiaWQiLCJ1c2VyIiwiU2VyaWVVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxLQURhLGlCQUNOQyxNQURNLEVBQ0VDLElBREYsRUFDUUMsT0FEUixFQUNpQjtBQUM1QixXQUFPQSxPQUFPLENBQUNDLE1BQVIsQ0FBZUMsU0FBZixDQUF5QjtBQUM5QkMsTUFBQUEsRUFBRSxFQUFFTCxNQUFNLENBQUNLO0FBRG1CLEtBQXpCLEVBRUpOLEtBRkksRUFBUDtBQUdELEdBTFk7QUFNYk8sRUFBQUEsSUFOYSxnQkFNUE4sTUFOTyxFQU1DQyxJQU5ELEVBTU9DLE9BTlAsRUFNZ0I7QUFDM0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVJLFNBQWYsQ0FBeUI7QUFDOUJGLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURtQixLQUF6QixFQUVKQyxJQUZJLEVBQVA7QUFHRDtBQVZZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvVGVzdFByaXNtYS9hcGkvc3JjL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgc2VyaWUgKHBhcmVudCwgYXJncywgY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnByaXNtYS5zZXJpZVVzZXIoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLnNlcmllKClcbiAgfSxcbiAgdXNlciAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLlNlcmllVXNlcih7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkudXNlcigpXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "SerieUser.js"
      ],
      "names": [
        "serie",
        "parent",
        "args",
        "context",
        "prisma",
        "serieUser",
        "id",
        "user",
        "SerieUser"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,OADR,EACiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,SAAf,CAAyB;AAC9BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADmB,KAAzB,EAEJN,KAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,IANa,gBAMPN,MANO,EAMCC,IAND,EAMOC,OANP,EAMgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeI,SAAf,CAAyB;AAC9BF,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADmB,KAAzB,EAEJC,IAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/TestPrisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  serie (parent, args, context) {\n    return context.prisma.serieUser({\n      id: parent.id\n    }).serie()\n  },\n  user (parent, args, context) {\n    return context.prisma.SerieUser({\n      id: parent.id\n    }).user()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813750573
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"@babel/polyfill\");\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _graphqlYoga = require(\"graphql-yoga\");\n\nvar _prismaClient = require(\"./generated/prisma-client\");\n\nvar _Query = _interopRequireDefault(require(\"./resolvers/Query\"));\n\nvar _Serie = _interopRequireDefault(require(\"./resolvers/Serie\"));\n\nvar _Saison = _interopRequireDefault(require(\"./resolvers/Saison\"));\n\nvar _Episode = _interopRequireDefault(require(\"./resolvers/Episode\"));\n\nvar _FilmUser = _interopRequireDefault(require(\"./resolvers/FilmUser\"));\n\nvar _SerieUser = _interopRequireDefault(require(\"./resolvers/SerieUser\"));\n\nvar _User = _interopRequireDefault(require(\"./resolvers/User\"));\n\nvar _auth = _interopRequireDefault(require(\"./resolvers/Mutation/auth\"));\n\nvar _user = _interopRequireDefault(require(\"./resolvers/Mutation/user\"));\n\nvar _film = _interopRequireDefault(require(\"./resolvers/Mutation/film\"));\n\nvar _serie = _interopRequireDefault(require(\"./resolvers/Mutation/serie\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n_dotenv.default.config();\n\nvar prisma = new _prismaClient.Prisma({\n  endpoint: process.env.PRISMA_ENDPOINT //secret: process.env.PRISMA_SECRET\n\n});\nvar server = new _graphqlYoga.GraphQLServer({\n  typeDefs: './src/schema.graphql',\n  resolvers: {\n    Query: _Query.default,\n    Serie: _Serie.default,\n    Saison: _Saison.default,\n    Episode: _Episode.default,\n    FilmUser: _FilmUser.default,\n    SerieUser: _SerieUser.default,\n    User: _User.default,\n    Mutation: _objectSpread({}, _auth.default, _user.default, _film.default, _serie.default)\n  },\n  context: function context(req) {\n    return _objectSpread({}, req, {\n      prisma: prisma\n    });\n  }\n});\nserver.start(function () {\n  return console.log('Server is running on http://localhost:4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsInByaXNtYSIsIlByaXNtYSIsImVuZHBvaW50IiwicHJvY2VzcyIsImVudiIsIlBSSVNNQV9FTkRQT0lOVCIsInNlcnZlciIsIkdyYXBoUUxTZXJ2ZXIiLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsIlF1ZXJ5IiwiU2VyaWUiLCJTYWlzb24iLCJFcGlzb2RlIiwiRmlsbVVzZXIiLCJTZXJpZVVzZXIiLCJVc2VyIiwiTXV0YXRpb24iLCJhdXRoIiwidXNlciIsImZpbG0iLCJzZXJpZSIsImNvbnRleHQiLCJyZXEiLCJzdGFydCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUFBLGdCQUFPQyxNQUFQOztBQUVBLElBQU1DLE1BQU0sR0FBRyxJQUFJQyxvQkFBSixDQUFXO0FBQ3hCQyxFQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxlQURFLENBRXhCOztBQUZ3QixDQUFYLENBQWY7QUFLQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsMEJBQUosQ0FBa0I7QUFDL0JDLEVBQUFBLFFBQVEsRUFBRSxzQkFEcUI7QUFFL0JDLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxLQUFLLEVBQUxBLGNBRFM7QUFFVEMsSUFBQUEsS0FBSyxFQUFMQSxjQUZTO0FBR1RDLElBQUFBLE1BQU0sRUFBTkEsZUFIUztBQUlUQyxJQUFBQSxPQUFPLEVBQVBBLGdCQUpTO0FBS1RDLElBQUFBLFFBQVEsRUFBUkEsaUJBTFM7QUFNVEMsSUFBQUEsU0FBUyxFQUFUQSxrQkFOUztBQU9UQyxJQUFBQSxJQUFJLEVBQUpBLGFBUFM7QUFRVEMsSUFBQUEsUUFBUSxvQkFDSEMsYUFERyxFQUVIQyxhQUZHLEVBR0hDLGFBSEcsRUFJSEMsY0FKRztBQVJDLEdBRm9CO0FBaUIvQkMsRUFBQUEsT0FBTyxFQUFFLGlCQUFBQyxHQUFHO0FBQUEsNkJBQVNBLEdBQVQ7QUFBY3ZCLE1BQUFBLE1BQU0sRUFBTkE7QUFBZDtBQUFBO0FBakJtQixDQUFsQixDQUFmO0FBb0JBTSxNQUFNLENBQUNrQixLQUFQLENBQWE7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSw0Q0FBWixDQUFOO0FBQUEsQ0FBYiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9Bbmd1bGFyX1ByaXNtYS9hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAYmFiZWwvcG9seWZpbGwnXG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudidcbmltcG9ydCB7IEdyYXBoUUxTZXJ2ZXIgfSBmcm9tICdncmFwaHFsLXlvZ2EnXG5pbXBvcnQgeyBQcmlzbWEgfSBmcm9tICcuL2dlbmVyYXRlZC9wcmlzbWEtY2xpZW50J1xuaW1wb3J0IFF1ZXJ5IGZyb20gJy4vcmVzb2x2ZXJzL1F1ZXJ5J1xuaW1wb3J0IFNlcmllIGZyb20gJy4vcmVzb2x2ZXJzL1NlcmllJ1xuaW1wb3J0IFNhaXNvbiBmcm9tICcuL3Jlc29sdmVycy9TYWlzb24nXG5pbXBvcnQgRXBpc29kZSBmcm9tICcuL3Jlc29sdmVycy9FcGlzb2RlJ1xuaW1wb3J0IEZpbG1Vc2VyIGZyb20gJy4vcmVzb2x2ZXJzL0ZpbG1Vc2VyJ1xuaW1wb3J0IFNlcmllVXNlciBmcm9tICcuL3Jlc29sdmVycy9TZXJpZVVzZXInXG5pbXBvcnQgVXNlciBmcm9tICcuL3Jlc29sdmVycy9Vc2VyJ1xuaW1wb3J0IGF1dGggZnJvbSAnLi9yZXNvbHZlcnMvTXV0YXRpb24vYXV0aCdcbmltcG9ydCB1c2VyIGZyb20gJy4vcmVzb2x2ZXJzL011dGF0aW9uL3VzZXInXG5pbXBvcnQgZmlsbSBmcm9tICcuL3Jlc29sdmVycy9NdXRhdGlvbi9maWxtJ1xuaW1wb3J0IHNlcmllIGZyb20gJy4vcmVzb2x2ZXJzL011dGF0aW9uL3NlcmllJ1xuXG5kb3RlbnYuY29uZmlnKClcblxuY29uc3QgcHJpc21hID0gbmV3IFByaXNtYSh7XG4gIGVuZHBvaW50OiBwcm9jZXNzLmVudi5QUklTTUFfRU5EUE9JTlQsXG4gIC8vc2VjcmV0OiBwcm9jZXNzLmVudi5QUklTTUFfU0VDUkVUXG59KVxuXG5jb25zdCBzZXJ2ZXIgPSBuZXcgR3JhcGhRTFNlcnZlcih7XG4gIHR5cGVEZWZzOiAnLi9zcmMvc2NoZW1hLmdyYXBocWwnLFxuICByZXNvbHZlcnM6IHtcbiAgICBRdWVyeSxcbiAgICBTZXJpZSxcbiAgICBTYWlzb24sXG4gICAgRXBpc29kZSxcbiAgICBGaWxtVXNlcixcbiAgICBTZXJpZVVzZXIsXG4gICAgVXNlcixcbiAgICBNdXRhdGlvbjoge1xuICAgICAgLi4uYXV0aCxcbiAgICAgIC4uLnVzZXIsXG4gICAgICAuLi5maWxtLFxuICAgICAgLi4uc2VyaWUsXG4gICAgfVxuICB9LFxuICBjb250ZXh0OiByZXEgPT4gKHsuLi5yZXEsIHByaXNtYX0pXG59KVxuXG5zZXJ2ZXIuc3RhcnQoKCkgPT4gY29uc29sZS5sb2coJ1NlcnZlciBpcyBydW5uaW5nIG9uIGh0dHA6Ly9sb2NhbGhvc3Q6NDAwMCcpKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "prisma",
        "Prisma",
        "endpoint",
        "process",
        "env",
        "PRISMA_ENDPOINT",
        "server",
        "GraphQLServer",
        "typeDefs",
        "resolvers",
        "Query",
        "Serie",
        "Saison",
        "Episode",
        "FilmUser",
        "SerieUser",
        "User",
        "Mutation",
        "auth",
        "user",
        "film",
        "serie",
        "context",
        "req",
        "start",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,gBAAOC,MAAP;;AAEA,IAAMC,MAAM,GAAG,IAAIC,oBAAJ,CAAW;AACxBC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,eADE,CAExB;;AAFwB,CAAX,CAAf;AAKA,IAAMC,MAAM,GAAG,IAAIC,0BAAJ,CAAkB;AAC/BC,EAAAA,QAAQ,EAAE,sBADqB;AAE/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAALA,cADS;AAETC,IAAAA,KAAK,EAALA,cAFS;AAGTC,IAAAA,MAAM,EAANA,eAHS;AAITC,IAAAA,OAAO,EAAPA,gBAJS;AAKTC,IAAAA,QAAQ,EAARA,iBALS;AAMTC,IAAAA,SAAS,EAATA,kBANS;AAOTC,IAAAA,IAAI,EAAJA,aAPS;AAQTC,IAAAA,QAAQ,oBACHC,aADG,EAEHC,aAFG,EAGHC,aAHG,EAIHC,cAJG;AARC,GAFoB;AAiB/BC,EAAAA,OAAO,EAAE,iBAAAC,GAAG;AAAA,6BAASA,GAAT;AAAcvB,MAAAA,MAAM,EAANA;AAAd;AAAA;AAjBmB,CAAlB,CAAf;AAoBAM,MAAM,CAACkB,KAAP,CAAa;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,4CAAZ,CAAN;AAAA,CAAb",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src",
      "sourcesContent": [
        "import '@babel/polyfill'\nimport dotenv from 'dotenv'\nimport { GraphQLServer } from 'graphql-yoga'\nimport { Prisma } from './generated/prisma-client'\nimport Query from './resolvers/Query'\nimport Serie from './resolvers/Serie'\nimport Saison from './resolvers/Saison'\nimport Episode from './resolvers/Episode'\nimport FilmUser from './resolvers/FilmUser'\nimport SerieUser from './resolvers/SerieUser'\nimport User from './resolvers/User'\nimport auth from './resolvers/Mutation/auth'\nimport user from './resolvers/Mutation/user'\nimport film from './resolvers/Mutation/film'\nimport serie from './resolvers/Mutation/serie'\n\ndotenv.config()\n\nconst prisma = new Prisma({\n  endpoint: process.env.PRISMA_ENDPOINT,\n  //secret: process.env.PRISMA_SECRET\n})\n\nconst server = new GraphQLServer({\n  typeDefs: './src/schema.graphql',\n  resolvers: {\n    Query,\n    Serie,\n    Saison,\n    Episode,\n    FilmUser,\n    SerieUser,\n    User,\n    Mutation: {\n      ...auth,\n      ...user,\n      ...film,\n      ...serie,\n    }\n  },\n  context: req => ({...req, prisma})\n})\n\nserver.start(() => console.log('Server is running on http://localhost:4000'))\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553464545639
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar prisma_lib_1 = require(\"prisma-client-lib\");\n\nvar typeDefs = require(\"./prisma-schema\").typeDefs;\n\nvar models = [{\n  name: \"User\",\n  embedded: false\n}, {\n  name: \"Serie\",\n  embedded: false\n}, {\n  name: \"Saison\",\n  embedded: false\n}, {\n  name: \"Episode\",\n  embedded: false\n}, {\n  name: \"Film\",\n  embedded: false\n}, {\n  name: \"FilmUser\",\n  embedded: false\n}, {\n  name: \"SerieUser\",\n  embedded: false\n}];\nexports.Prisma = prisma_lib_1.makePrismaClientClass({\n  typeDefs: typeDefs,\n  models: models,\n  endpoint: \"\".concat(process.env[\"PRISMA_ENDPOINT\"]),\n  secret: \"\".concat(process.env[\"PRISMA_SECRET\"])\n});\nexports.prisma = new exports.Prisma();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicHJpc21hX2xpYl8xIiwicmVxdWlyZSIsInR5cGVEZWZzIiwibW9kZWxzIiwibmFtZSIsImVtYmVkZGVkIiwiUHJpc21hIiwibWFrZVByaXNtYUNsaWVudENsYXNzIiwiZW5kcG9pbnQiLCJwcm9jZXNzIiwiZW52Iiwic2VjcmV0IiwicHJpc21hIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3Qzs7QUFDQSxJQUFJQyxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxtQkFBRCxDQUExQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxRQUExQzs7QUFFQSxJQUFJQyxNQUFNLEdBQUcsQ0FDWDtBQUNFQyxFQUFBQSxJQUFJLEVBQUUsTUFEUjtBQUVFQyxFQUFBQSxRQUFRLEVBQUU7QUFGWixDQURXLEVBS1g7QUFDRUQsRUFBQUEsSUFBSSxFQUFFLE9BRFI7QUFFRUMsRUFBQUEsUUFBUSxFQUFFO0FBRlosQ0FMVyxFQVNYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxRQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBVFcsRUFhWDtBQUNFRCxFQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxFQUFBQSxRQUFRLEVBQUU7QUFGWixDQWJXLEVBaUJYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxNQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBakJXLEVBcUJYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxVQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBckJXLEVBeUJYO0FBQ0VELEVBQUFBLElBQUksRUFBRSxXQURSO0FBRUVDLEVBQUFBLFFBQVEsRUFBRTtBQUZaLENBekJXLENBQWI7QUE4QkFQLE9BQU8sQ0FBQ1EsTUFBUixHQUFpQk4sWUFBWSxDQUFDTyxxQkFBYixDQUFtQztBQUNsREwsRUFBQUEsUUFBUSxFQUFSQSxRQURrRDtBQUVsREMsRUFBQUEsTUFBTSxFQUFOQSxNQUZrRDtBQUdsREssRUFBQUEsUUFBUSxZQUFLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixDQUFMLENBSDBDO0FBSWxEQyxFQUFBQSxNQUFNLFlBQUtGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVosQ0FBTDtBQUo0QyxDQUFuQyxDQUFqQjtBQU1BWixPQUFPLENBQUNjLE1BQVIsR0FBaUIsSUFBSWQsT0FBTyxDQUFDUSxNQUFaLEVBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL0FuZ3VsYXJfUHJpc21hL2FwaS9zcmMvZ2VuZXJhdGVkL3ByaXNtYS1jbGllbnQiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBwcmlzbWFfbGliXzEgPSByZXF1aXJlKFwicHJpc21hLWNsaWVudC1saWJcIik7XG52YXIgdHlwZURlZnMgPSByZXF1aXJlKFwiLi9wcmlzbWEtc2NoZW1hXCIpLnR5cGVEZWZzO1xuXG52YXIgbW9kZWxzID0gW1xuICB7XG4gICAgbmFtZTogXCJVc2VyXCIsXG4gICAgZW1iZWRkZWQ6IGZhbHNlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlNlcmllXCIsXG4gICAgZW1iZWRkZWQ6IGZhbHNlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlNhaXNvblwiLFxuICAgIGVtYmVkZGVkOiBmYWxzZVxuICB9LFxuICB7XG4gICAgbmFtZTogXCJFcGlzb2RlXCIsXG4gICAgZW1iZWRkZWQ6IGZhbHNlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkZpbG1cIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiRmlsbVVzZXJcIixcbiAgICBlbWJlZGRlZDogZmFsc2VcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiU2VyaWVVc2VyXCIsXG4gICAgZW1iZWRkZWQ6IGZhbHNlXG4gIH1cbl07XG5leHBvcnRzLlByaXNtYSA9IHByaXNtYV9saWJfMS5tYWtlUHJpc21hQ2xpZW50Q2xhc3Moe1xuICB0eXBlRGVmcyxcbiAgbW9kZWxzLFxuICBlbmRwb2ludDogYCR7cHJvY2Vzcy5lbnZbXCJQUklTTUFfRU5EUE9JTlRcIl19YCxcbiAgc2VjcmV0OiBgJHtwcm9jZXNzLmVudltcIlBSSVNNQV9TRUNSRVRcIl19YFxufSk7XG5leHBvcnRzLnByaXNtYSA9IG5ldyBleHBvcnRzLlByaXNtYSgpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Object",
        "defineProperty",
        "exports",
        "value",
        "prisma_lib_1",
        "require",
        "typeDefs",
        "models",
        "name",
        "embedded",
        "Prisma",
        "makePrismaClientClass",
        "endpoint",
        "process",
        "env",
        "secret",
        "prisma"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAP,CAA2BC,QAA1C;;AAEA,IAAIC,MAAM,GAAG,CACX;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CADW,EAKX;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CALW,EASX;AACED,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CATW,EAaX;AACED,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAbW,EAiBX;AACED,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAjBW,EAqBX;AACED,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CArBW,EAyBX;AACED,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,QAAQ,EAAE;AAFZ,CAzBW,CAAb;AA8BAP,OAAO,CAACQ,MAAR,GAAiBN,YAAY,CAACO,qBAAb,CAAmC;AAClDL,EAAAA,QAAQ,EAARA,QADkD;AAElDC,EAAAA,MAAM,EAANA,MAFkD;AAGlDK,EAAAA,QAAQ,YAAKC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAL,CAH0C;AAIlDC,EAAAA,MAAM,YAAKF,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAL;AAJ4C,CAAnC,CAAjB;AAMAZ,OAAO,CAACc,MAAR,GAAiB,IAAId,OAAO,CAACQ,MAAZ,EAAjB",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client",
      "sourcesContent": [
        "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar prisma_lib_1 = require(\"prisma-client-lib\");\nvar typeDefs = require(\"./prisma-schema\").typeDefs;\n\nvar models = [\n  {\n    name: \"User\",\n    embedded: false\n  },\n  {\n    name: \"Serie\",\n    embedded: false\n  },\n  {\n    name: \"Saison\",\n    embedded: false\n  },\n  {\n    name: \"Episode\",\n    embedded: false\n  },\n  {\n    name: \"Film\",\n    embedded: false\n  },\n  {\n    name: \"FilmUser\",\n    embedded: false\n  },\n  {\n    name: \"SerieUser\",\n    embedded: false\n  }\n];\nexports.Prisma = prisma_lib_1.makePrismaClientClass({\n  typeDefs,\n  models,\n  endpoint: `${process.env[\"PRISMA_ENDPOINT\"]}`,\n  secret: `${process.env[\"PRISMA_SECRET\"]}`\n});\nexports.prisma = new exports.Prisma();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553464595530
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/prisma-schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/prisma-schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/prisma-schema.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client/prisma-schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client",
        "sourceFileName": "prisma-schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  typeDefs: // Code generated by Prisma (prisma@1.28.5). DO NOT EDIT.\n  // Please don't change this file manually but run `prisma generate` to update it.\n  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/\n\n  /* GraphQL */\n  \"type AggregateEpisode {\\n  count: Int!\\n}\\n\\ntype AggregateFilm {\\n  count: Int!\\n}\\n\\ntype AggregateFilmUser {\\n  count: Int!\\n}\\n\\ntype AggregateSaison {\\n  count: Int!\\n}\\n\\ntype AggregateSerie {\\n  count: Int!\\n}\\n\\ntype AggregateSerieUser {\\n  count: Int!\\n}\\n\\ntype AggregateUser {\\n  count: Int!\\n}\\n\\ntype BatchPayload {\\n  count: Long!\\n}\\n\\ntype Episode {\\n  id: ID!\\n  name: String!\\n  description: String!\\n  saison: Saison!\\n  serie: Serie!\\n}\\n\\ntype EpisodeConnection {\\n  pageInfo: PageInfo!\\n  edges: [EpisodeEdge]!\\n  aggregate: AggregateEpisode!\\n}\\n\\ninput EpisodeCreateInput {\\n  name: String!\\n  description: String!\\n  saison: SaisonCreateOneWithoutEpisodesInput!\\n  serie: SerieCreateOneWithoutEpisodesInput!\\n}\\n\\ninput EpisodeCreateManyWithoutSaisonInput {\\n  create: [EpisodeCreateWithoutSaisonInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n}\\n\\ninput EpisodeCreateManyWithoutSerieInput {\\n  create: [EpisodeCreateWithoutSerieInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n}\\n\\ninput EpisodeCreateWithoutSaisonInput {\\n  name: String!\\n  description: String!\\n  serie: SerieCreateOneWithoutEpisodesInput!\\n}\\n\\ninput EpisodeCreateWithoutSerieInput {\\n  name: String!\\n  description: String!\\n  saison: SaisonCreateOneWithoutEpisodesInput!\\n}\\n\\ntype EpisodeEdge {\\n  node: Episode!\\n  cursor: String!\\n}\\n\\nenum EpisodeOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n  description_ASC\\n  description_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype EpisodePreviousValues {\\n  id: ID!\\n  name: String!\\n  description: String!\\n}\\n\\ninput EpisodeScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  AND: [EpisodeScalarWhereInput!]\\n  OR: [EpisodeScalarWhereInput!]\\n  NOT: [EpisodeScalarWhereInput!]\\n}\\n\\ntype EpisodeSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Episode\\n  updatedFields: [String!]\\n  previousValues: EpisodePreviousValues\\n}\\n\\ninput EpisodeSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: EpisodeWhereInput\\n  AND: [EpisodeSubscriptionWhereInput!]\\n  OR: [EpisodeSubscriptionWhereInput!]\\n  NOT: [EpisodeSubscriptionWhereInput!]\\n}\\n\\ninput EpisodeUpdateInput {\\n  name: String\\n  description: String\\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\\n}\\n\\ninput EpisodeUpdateManyDataInput {\\n  name: String\\n  description: String\\n}\\n\\ninput EpisodeUpdateManyMutationInput {\\n  name: String\\n  description: String\\n}\\n\\ninput EpisodeUpdateManyWithoutSaisonInput {\\n  create: [EpisodeCreateWithoutSaisonInput!]\\n  delete: [EpisodeWhereUniqueInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n  set: [EpisodeWhereUniqueInput!]\\n  disconnect: [EpisodeWhereUniqueInput!]\\n  update: [EpisodeUpdateWithWhereUniqueWithoutSaisonInput!]\\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSaisonInput!]\\n  deleteMany: [EpisodeScalarWhereInput!]\\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput EpisodeUpdateManyWithoutSerieInput {\\n  create: [EpisodeCreateWithoutSerieInput!]\\n  delete: [EpisodeWhereUniqueInput!]\\n  connect: [EpisodeWhereUniqueInput!]\\n  set: [EpisodeWhereUniqueInput!]\\n  disconnect: [EpisodeWhereUniqueInput!]\\n  update: [EpisodeUpdateWithWhereUniqueWithoutSerieInput!]\\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSerieInput!]\\n  deleteMany: [EpisodeScalarWhereInput!]\\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput EpisodeUpdateManyWithWhereNestedInput {\\n  where: EpisodeScalarWhereInput!\\n  data: EpisodeUpdateManyDataInput!\\n}\\n\\ninput EpisodeUpdateWithoutSaisonDataInput {\\n  name: String\\n  description: String\\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\\n}\\n\\ninput EpisodeUpdateWithoutSerieDataInput {\\n  name: String\\n  description: String\\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\\n}\\n\\ninput EpisodeUpdateWithWhereUniqueWithoutSaisonInput {\\n  where: EpisodeWhereUniqueInput!\\n  data: EpisodeUpdateWithoutSaisonDataInput!\\n}\\n\\ninput EpisodeUpdateWithWhereUniqueWithoutSerieInput {\\n  where: EpisodeWhereUniqueInput!\\n  data: EpisodeUpdateWithoutSerieDataInput!\\n}\\n\\ninput EpisodeUpsertWithWhereUniqueWithoutSaisonInput {\\n  where: EpisodeWhereUniqueInput!\\n  update: EpisodeUpdateWithoutSaisonDataInput!\\n  create: EpisodeCreateWithoutSaisonInput!\\n}\\n\\ninput EpisodeUpsertWithWhereUniqueWithoutSerieInput {\\n  where: EpisodeWhereUniqueInput!\\n  update: EpisodeUpdateWithoutSerieDataInput!\\n  create: EpisodeCreateWithoutSerieInput!\\n}\\n\\ninput EpisodeWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  saison: SaisonWhereInput\\n  serie: SerieWhereInput\\n  AND: [EpisodeWhereInput!]\\n  OR: [EpisodeWhereInput!]\\n  NOT: [EpisodeWhereInput!]\\n}\\n\\ninput EpisodeWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Film {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n  duration: String!\\n}\\n\\ntype FilmConnection {\\n  pageInfo: PageInfo!\\n  edges: [FilmEdge]!\\n  aggregate: AggregateFilm!\\n}\\n\\ninput FilmCreateInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  duration: String!\\n}\\n\\ninput FilmCreateOneInput {\\n  create: FilmCreateInput\\n  connect: FilmWhereUniqueInput\\n}\\n\\ntype FilmEdge {\\n  node: Film!\\n  cursor: String!\\n}\\n\\nenum FilmOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n  genre_ASC\\n  genre_DESC\\n  description_ASC\\n  description_DESC\\n  duration_ASC\\n  duration_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype FilmPreviousValues {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n  duration: String!\\n}\\n\\ntype FilmSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Film\\n  updatedFields: [String!]\\n  previousValues: FilmPreviousValues\\n}\\n\\ninput FilmSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: FilmWhereInput\\n  AND: [FilmSubscriptionWhereInput!]\\n  OR: [FilmSubscriptionWhereInput!]\\n  NOT: [FilmSubscriptionWhereInput!]\\n}\\n\\ninput FilmUpdateDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  duration: String\\n}\\n\\ninput FilmUpdateInput {\\n  name: String\\n  genre: String\\n  description: String\\n  duration: String\\n}\\n\\ninput FilmUpdateManyMutationInput {\\n  name: String\\n  genre: String\\n  description: String\\n  duration: String\\n}\\n\\ninput FilmUpdateOneRequiredInput {\\n  create: FilmCreateInput\\n  update: FilmUpdateDataInput\\n  upsert: FilmUpsertNestedInput\\n  connect: FilmWhereUniqueInput\\n}\\n\\ninput FilmUpsertNestedInput {\\n  update: FilmUpdateDataInput!\\n  create: FilmCreateInput!\\n}\\n\\ntype FilmUser {\\n  id: ID!\\n  finish: Boolean\\n  progress: String!\\n  film: Film!\\n  user: User!\\n}\\n\\ntype FilmUserConnection {\\n  pageInfo: PageInfo!\\n  edges: [FilmUserEdge]!\\n  aggregate: AggregateFilmUser!\\n}\\n\\ninput FilmUserCreateInput {\\n  finish: Boolean\\n  progress: String!\\n  film: FilmCreateOneInput!\\n  user: UserCreateOneWithoutFilmInput!\\n}\\n\\ninput FilmUserCreateManyWithoutUserInput {\\n  create: [FilmUserCreateWithoutUserInput!]\\n  connect: [FilmUserWhereUniqueInput!]\\n}\\n\\ninput FilmUserCreateWithoutUserInput {\\n  finish: Boolean\\n  progress: String!\\n  film: FilmCreateOneInput!\\n}\\n\\ntype FilmUserEdge {\\n  node: FilmUser!\\n  cursor: String!\\n}\\n\\nenum FilmUserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  finish_ASC\\n  finish_DESC\\n  progress_ASC\\n  progress_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype FilmUserPreviousValues {\\n  id: ID!\\n  finish: Boolean\\n  progress: String!\\n}\\n\\ninput FilmUserScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  progress: String\\n  progress_not: String\\n  progress_in: [String!]\\n  progress_not_in: [String!]\\n  progress_lt: String\\n  progress_lte: String\\n  progress_gt: String\\n  progress_gte: String\\n  progress_contains: String\\n  progress_not_contains: String\\n  progress_starts_with: String\\n  progress_not_starts_with: String\\n  progress_ends_with: String\\n  progress_not_ends_with: String\\n  AND: [FilmUserScalarWhereInput!]\\n  OR: [FilmUserScalarWhereInput!]\\n  NOT: [FilmUserScalarWhereInput!]\\n}\\n\\ntype FilmUserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: FilmUser\\n  updatedFields: [String!]\\n  previousValues: FilmUserPreviousValues\\n}\\n\\ninput FilmUserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: FilmUserWhereInput\\n  AND: [FilmUserSubscriptionWhereInput!]\\n  OR: [FilmUserSubscriptionWhereInput!]\\n  NOT: [FilmUserSubscriptionWhereInput!]\\n}\\n\\ninput FilmUserUpdateInput {\\n  finish: Boolean\\n  progress: String\\n  film: FilmUpdateOneRequiredInput\\n  user: UserUpdateOneRequiredWithoutFilmInput\\n}\\n\\ninput FilmUserUpdateManyDataInput {\\n  finish: Boolean\\n  progress: String\\n}\\n\\ninput FilmUserUpdateManyMutationInput {\\n  finish: Boolean\\n  progress: String\\n}\\n\\ninput FilmUserUpdateManyWithoutUserInput {\\n  create: [FilmUserCreateWithoutUserInput!]\\n  delete: [FilmUserWhereUniqueInput!]\\n  connect: [FilmUserWhereUniqueInput!]\\n  set: [FilmUserWhereUniqueInput!]\\n  disconnect: [FilmUserWhereUniqueInput!]\\n  update: [FilmUserUpdateWithWhereUniqueWithoutUserInput!]\\n  upsert: [FilmUserUpsertWithWhereUniqueWithoutUserInput!]\\n  deleteMany: [FilmUserScalarWhereInput!]\\n  updateMany: [FilmUserUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput FilmUserUpdateManyWithWhereNestedInput {\\n  where: FilmUserScalarWhereInput!\\n  data: FilmUserUpdateManyDataInput!\\n}\\n\\ninput FilmUserUpdateWithoutUserDataInput {\\n  finish: Boolean\\n  progress: String\\n  film: FilmUpdateOneRequiredInput\\n}\\n\\ninput FilmUserUpdateWithWhereUniqueWithoutUserInput {\\n  where: FilmUserWhereUniqueInput!\\n  data: FilmUserUpdateWithoutUserDataInput!\\n}\\n\\ninput FilmUserUpsertWithWhereUniqueWithoutUserInput {\\n  where: FilmUserWhereUniqueInput!\\n  update: FilmUserUpdateWithoutUserDataInput!\\n  create: FilmUserCreateWithoutUserInput!\\n}\\n\\ninput FilmUserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  progress: String\\n  progress_not: String\\n  progress_in: [String!]\\n  progress_not_in: [String!]\\n  progress_lt: String\\n  progress_lte: String\\n  progress_gt: String\\n  progress_gte: String\\n  progress_contains: String\\n  progress_not_contains: String\\n  progress_starts_with: String\\n  progress_not_starts_with: String\\n  progress_ends_with: String\\n  progress_not_ends_with: String\\n  film: FilmWhereInput\\n  user: UserWhereInput\\n  AND: [FilmUserWhereInput!]\\n  OR: [FilmUserWhereInput!]\\n  NOT: [FilmUserWhereInput!]\\n}\\n\\ninput FilmUserWhereUniqueInput {\\n  id: ID\\n}\\n\\ninput FilmWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  genre: String\\n  genre_not: String\\n  genre_in: [String!]\\n  genre_not_in: [String!]\\n  genre_lt: String\\n  genre_lte: String\\n  genre_gt: String\\n  genre_gte: String\\n  genre_contains: String\\n  genre_not_contains: String\\n  genre_starts_with: String\\n  genre_not_starts_with: String\\n  genre_ends_with: String\\n  genre_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  duration: String\\n  duration_not: String\\n  duration_in: [String!]\\n  duration_not_in: [String!]\\n  duration_lt: String\\n  duration_lte: String\\n  duration_gt: String\\n  duration_gte: String\\n  duration_contains: String\\n  duration_not_contains: String\\n  duration_starts_with: String\\n  duration_not_starts_with: String\\n  duration_ends_with: String\\n  duration_not_ends_with: String\\n  AND: [FilmWhereInput!]\\n  OR: [FilmWhereInput!]\\n  NOT: [FilmWhereInput!]\\n}\\n\\ninput FilmWhereUniqueInput {\\n  id: ID\\n}\\n\\nscalar Long\\n\\ntype Mutation {\\n  createEpisode(data: EpisodeCreateInput!): Episode!\\n  updateEpisode(data: EpisodeUpdateInput!, where: EpisodeWhereUniqueInput!): Episode\\n  updateManyEpisodes(data: EpisodeUpdateManyMutationInput!, where: EpisodeWhereInput): BatchPayload!\\n  upsertEpisode(where: EpisodeWhereUniqueInput!, create: EpisodeCreateInput!, update: EpisodeUpdateInput!): Episode!\\n  deleteEpisode(where: EpisodeWhereUniqueInput!): Episode\\n  deleteManyEpisodes(where: EpisodeWhereInput): BatchPayload!\\n  createFilm(data: FilmCreateInput!): Film!\\n  updateFilm(data: FilmUpdateInput!, where: FilmWhereUniqueInput!): Film\\n  updateManyFilms(data: FilmUpdateManyMutationInput!, where: FilmWhereInput): BatchPayload!\\n  upsertFilm(where: FilmWhereUniqueInput!, create: FilmCreateInput!, update: FilmUpdateInput!): Film!\\n  deleteFilm(where: FilmWhereUniqueInput!): Film\\n  deleteManyFilms(where: FilmWhereInput): BatchPayload!\\n  createFilmUser(data: FilmUserCreateInput!): FilmUser!\\n  updateFilmUser(data: FilmUserUpdateInput!, where: FilmUserWhereUniqueInput!): FilmUser\\n  updateManyFilmUsers(data: FilmUserUpdateManyMutationInput!, where: FilmUserWhereInput): BatchPayload!\\n  upsertFilmUser(where: FilmUserWhereUniqueInput!, create: FilmUserCreateInput!, update: FilmUserUpdateInput!): FilmUser!\\n  deleteFilmUser(where: FilmUserWhereUniqueInput!): FilmUser\\n  deleteManyFilmUsers(where: FilmUserWhereInput): BatchPayload!\\n  createSaison(data: SaisonCreateInput!): Saison!\\n  updateSaison(data: SaisonUpdateInput!, where: SaisonWhereUniqueInput!): Saison\\n  updateManySaisons(data: SaisonUpdateManyMutationInput!, where: SaisonWhereInput): BatchPayload!\\n  upsertSaison(where: SaisonWhereUniqueInput!, create: SaisonCreateInput!, update: SaisonUpdateInput!): Saison!\\n  deleteSaison(where: SaisonWhereUniqueInput!): Saison\\n  deleteManySaisons(where: SaisonWhereInput): BatchPayload!\\n  createSerie(data: SerieCreateInput!): Serie!\\n  updateSerie(data: SerieUpdateInput!, where: SerieWhereUniqueInput!): Serie\\n  updateManySeries(data: SerieUpdateManyMutationInput!, where: SerieWhereInput): BatchPayload!\\n  upsertSerie(where: SerieWhereUniqueInput!, create: SerieCreateInput!, update: SerieUpdateInput!): Serie!\\n  deleteSerie(where: SerieWhereUniqueInput!): Serie\\n  deleteManySeries(where: SerieWhereInput): BatchPayload!\\n  createSerieUser(data: SerieUserCreateInput!): SerieUser!\\n  updateSerieUser(data: SerieUserUpdateInput!, where: SerieUserWhereUniqueInput!): SerieUser\\n  updateManySerieUsers(data: SerieUserUpdateManyMutationInput!, where: SerieUserWhereInput): BatchPayload!\\n  upsertSerieUser(where: SerieUserWhereUniqueInput!, create: SerieUserCreateInput!, update: SerieUserUpdateInput!): SerieUser!\\n  deleteSerieUser(where: SerieUserWhereUniqueInput!): SerieUser\\n  deleteManySerieUsers(where: SerieUserWhereInput): BatchPayload!\\n  createUser(data: UserCreateInput!): User!\\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\\n  deleteUser(where: UserWhereUniqueInput!): User\\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\\n}\\n\\nenum MutationType {\\n  CREATED\\n  UPDATED\\n  DELETED\\n}\\n\\ninterface Node {\\n  id: ID!\\n}\\n\\ntype PageInfo {\\n  hasNextPage: Boolean!\\n  hasPreviousPage: Boolean!\\n  startCursor: String\\n  endCursor: String\\n}\\n\\ntype Query {\\n  episode(where: EpisodeWhereUniqueInput!): Episode\\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode]!\\n  episodesConnection(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EpisodeConnection!\\n  film(where: FilmWhereUniqueInput!): Film\\n  films(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Film]!\\n  filmsConnection(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmConnection!\\n  filmUser(where: FilmUserWhereUniqueInput!): FilmUser\\n  filmUsers(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser]!\\n  filmUsersConnection(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmUserConnection!\\n  saison(where: SaisonWhereUniqueInput!): Saison\\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison]!\\n  saisonsConnection(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SaisonConnection!\\n  serie(where: SerieWhereUniqueInput!): Serie\\n  series(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Serie]!\\n  seriesConnection(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieConnection!\\n  serieUser(where: SerieUserWhereUniqueInput!): SerieUser\\n  serieUsers(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser]!\\n  serieUsersConnection(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieUserConnection!\\n  user(where: UserWhereUniqueInput!): User\\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\\n  node(id: ID!): Node\\n}\\n\\ntype Saison {\\n  id: ID!\\n  number: String!\\n  serie: Serie!\\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\\n}\\n\\ntype SaisonConnection {\\n  pageInfo: PageInfo!\\n  edges: [SaisonEdge]!\\n  aggregate: AggregateSaison!\\n}\\n\\ninput SaisonCreateInput {\\n  number: String!\\n  serie: SerieCreateOneWithoutSaisonsInput!\\n  episodes: EpisodeCreateManyWithoutSaisonInput\\n}\\n\\ninput SaisonCreateManyWithoutSerieInput {\\n  create: [SaisonCreateWithoutSerieInput!]\\n  connect: [SaisonWhereUniqueInput!]\\n}\\n\\ninput SaisonCreateOneWithoutEpisodesInput {\\n  create: SaisonCreateWithoutEpisodesInput\\n  connect: SaisonWhereUniqueInput\\n}\\n\\ninput SaisonCreateWithoutEpisodesInput {\\n  number: String!\\n  serie: SerieCreateOneWithoutSaisonsInput!\\n}\\n\\ninput SaisonCreateWithoutSerieInput {\\n  number: String!\\n  episodes: EpisodeCreateManyWithoutSaisonInput\\n}\\n\\ntype SaisonEdge {\\n  node: Saison!\\n  cursor: String!\\n}\\n\\nenum SaisonOrderByInput {\\n  id_ASC\\n  id_DESC\\n  number_ASC\\n  number_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype SaisonPreviousValues {\\n  id: ID!\\n  number: String!\\n}\\n\\ninput SaisonScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  number: String\\n  number_not: String\\n  number_in: [String!]\\n  number_not_in: [String!]\\n  number_lt: String\\n  number_lte: String\\n  number_gt: String\\n  number_gte: String\\n  number_contains: String\\n  number_not_contains: String\\n  number_starts_with: String\\n  number_not_starts_with: String\\n  number_ends_with: String\\n  number_not_ends_with: String\\n  AND: [SaisonScalarWhereInput!]\\n  OR: [SaisonScalarWhereInput!]\\n  NOT: [SaisonScalarWhereInput!]\\n}\\n\\ntype SaisonSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Saison\\n  updatedFields: [String!]\\n  previousValues: SaisonPreviousValues\\n}\\n\\ninput SaisonSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SaisonWhereInput\\n  AND: [SaisonSubscriptionWhereInput!]\\n  OR: [SaisonSubscriptionWhereInput!]\\n  NOT: [SaisonSubscriptionWhereInput!]\\n}\\n\\ninput SaisonUpdateInput {\\n  number: String\\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\\n  episodes: EpisodeUpdateManyWithoutSaisonInput\\n}\\n\\ninput SaisonUpdateManyDataInput {\\n  number: String\\n}\\n\\ninput SaisonUpdateManyMutationInput {\\n  number: String\\n}\\n\\ninput SaisonUpdateManyWithoutSerieInput {\\n  create: [SaisonCreateWithoutSerieInput!]\\n  delete: [SaisonWhereUniqueInput!]\\n  connect: [SaisonWhereUniqueInput!]\\n  set: [SaisonWhereUniqueInput!]\\n  disconnect: [SaisonWhereUniqueInput!]\\n  update: [SaisonUpdateWithWhereUniqueWithoutSerieInput!]\\n  upsert: [SaisonUpsertWithWhereUniqueWithoutSerieInput!]\\n  deleteMany: [SaisonScalarWhereInput!]\\n  updateMany: [SaisonUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput SaisonUpdateManyWithWhereNestedInput {\\n  where: SaisonScalarWhereInput!\\n  data: SaisonUpdateManyDataInput!\\n}\\n\\ninput SaisonUpdateOneRequiredWithoutEpisodesInput {\\n  create: SaisonCreateWithoutEpisodesInput\\n  update: SaisonUpdateWithoutEpisodesDataInput\\n  upsert: SaisonUpsertWithoutEpisodesInput\\n  connect: SaisonWhereUniqueInput\\n}\\n\\ninput SaisonUpdateWithoutEpisodesDataInput {\\n  number: String\\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\\n}\\n\\ninput SaisonUpdateWithoutSerieDataInput {\\n  number: String\\n  episodes: EpisodeUpdateManyWithoutSaisonInput\\n}\\n\\ninput SaisonUpdateWithWhereUniqueWithoutSerieInput {\\n  where: SaisonWhereUniqueInput!\\n  data: SaisonUpdateWithoutSerieDataInput!\\n}\\n\\ninput SaisonUpsertWithoutEpisodesInput {\\n  update: SaisonUpdateWithoutEpisodesDataInput!\\n  create: SaisonCreateWithoutEpisodesInput!\\n}\\n\\ninput SaisonUpsertWithWhereUniqueWithoutSerieInput {\\n  where: SaisonWhereUniqueInput!\\n  update: SaisonUpdateWithoutSerieDataInput!\\n  create: SaisonCreateWithoutSerieInput!\\n}\\n\\ninput SaisonWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  number: String\\n  number_not: String\\n  number_in: [String!]\\n  number_not_in: [String!]\\n  number_lt: String\\n  number_lte: String\\n  number_gt: String\\n  number_gte: String\\n  number_contains: String\\n  number_not_contains: String\\n  number_starts_with: String\\n  number_not_starts_with: String\\n  number_ends_with: String\\n  number_not_ends_with: String\\n  serie: SerieWhereInput\\n  episodes_every: EpisodeWhereInput\\n  episodes_some: EpisodeWhereInput\\n  episodes_none: EpisodeWhereInput\\n  AND: [SaisonWhereInput!]\\n  OR: [SaisonWhereInput!]\\n  NOT: [SaisonWhereInput!]\\n}\\n\\ninput SaisonWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Serie {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison!]\\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\\n}\\n\\ntype SerieConnection {\\n  pageInfo: PageInfo!\\n  edges: [SerieEdge]!\\n  aggregate: AggregateSerie!\\n}\\n\\ninput SerieCreateInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  saisons: SaisonCreateManyWithoutSerieInput\\n  episodes: EpisodeCreateManyWithoutSerieInput\\n}\\n\\ninput SerieCreateOneInput {\\n  create: SerieCreateInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieCreateOneWithoutEpisodesInput {\\n  create: SerieCreateWithoutEpisodesInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieCreateOneWithoutSaisonsInput {\\n  create: SerieCreateWithoutSaisonsInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieCreateWithoutEpisodesInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  saisons: SaisonCreateManyWithoutSerieInput\\n}\\n\\ninput SerieCreateWithoutSaisonsInput {\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n  episodes: EpisodeCreateManyWithoutSerieInput\\n}\\n\\ntype SerieEdge {\\n  node: Serie!\\n  cursor: String!\\n}\\n\\nenum SerieOrderByInput {\\n  id_ASC\\n  id_DESC\\n  name_ASC\\n  name_DESC\\n  genre_ASC\\n  genre_DESC\\n  description_ASC\\n  description_DESC\\n  nbEp_ASC\\n  nbEp_DESC\\n  nbSais_ASC\\n  nbSais_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype SeriePreviousValues {\\n  id: ID!\\n  name: String!\\n  genre: String!\\n  description: String!\\n  nbEp: String!\\n  nbSais: String!\\n}\\n\\ntype SerieSubscriptionPayload {\\n  mutation: MutationType!\\n  node: Serie\\n  updatedFields: [String!]\\n  previousValues: SeriePreviousValues\\n}\\n\\ninput SerieSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SerieWhereInput\\n  AND: [SerieSubscriptionWhereInput!]\\n  OR: [SerieSubscriptionWhereInput!]\\n  NOT: [SerieSubscriptionWhereInput!]\\n}\\n\\ninput SerieUpdateDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  saisons: SaisonUpdateManyWithoutSerieInput\\n  episodes: EpisodeUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpdateInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  saisons: SaisonUpdateManyWithoutSerieInput\\n  episodes: EpisodeUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpdateManyMutationInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n}\\n\\ninput SerieUpdateOneRequiredInput {\\n  create: SerieCreateInput\\n  update: SerieUpdateDataInput\\n  upsert: SerieUpsertNestedInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieUpdateOneRequiredWithoutEpisodesInput {\\n  create: SerieCreateWithoutEpisodesInput\\n  update: SerieUpdateWithoutEpisodesDataInput\\n  upsert: SerieUpsertWithoutEpisodesInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieUpdateOneRequiredWithoutSaisonsInput {\\n  create: SerieCreateWithoutSaisonsInput\\n  update: SerieUpdateWithoutSaisonsDataInput\\n  upsert: SerieUpsertWithoutSaisonsInput\\n  connect: SerieWhereUniqueInput\\n}\\n\\ninput SerieUpdateWithoutEpisodesDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  saisons: SaisonUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpdateWithoutSaisonsDataInput {\\n  name: String\\n  genre: String\\n  description: String\\n  nbEp: String\\n  nbSais: String\\n  episodes: EpisodeUpdateManyWithoutSerieInput\\n}\\n\\ninput SerieUpsertNestedInput {\\n  update: SerieUpdateDataInput!\\n  create: SerieCreateInput!\\n}\\n\\ninput SerieUpsertWithoutEpisodesInput {\\n  update: SerieUpdateWithoutEpisodesDataInput!\\n  create: SerieCreateWithoutEpisodesInput!\\n}\\n\\ninput SerieUpsertWithoutSaisonsInput {\\n  update: SerieUpdateWithoutSaisonsDataInput!\\n  create: SerieCreateWithoutSaisonsInput!\\n}\\n\\ntype SerieUser {\\n  id: ID!\\n  finish: Boolean\\n  serie: Serie!\\n  user: User!\\n}\\n\\ntype SerieUserConnection {\\n  pageInfo: PageInfo!\\n  edges: [SerieUserEdge]!\\n  aggregate: AggregateSerieUser!\\n}\\n\\ninput SerieUserCreateInput {\\n  finish: Boolean\\n  serie: SerieCreateOneInput!\\n  user: UserCreateOneWithoutSerieInput!\\n}\\n\\ninput SerieUserCreateManyWithoutUserInput {\\n  create: [SerieUserCreateWithoutUserInput!]\\n  connect: [SerieUserWhereUniqueInput!]\\n}\\n\\ninput SerieUserCreateWithoutUserInput {\\n  finish: Boolean\\n  serie: SerieCreateOneInput!\\n}\\n\\ntype SerieUserEdge {\\n  node: SerieUser!\\n  cursor: String!\\n}\\n\\nenum SerieUserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  finish_ASC\\n  finish_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype SerieUserPreviousValues {\\n  id: ID!\\n  finish: Boolean\\n}\\n\\ninput SerieUserScalarWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  AND: [SerieUserScalarWhereInput!]\\n  OR: [SerieUserScalarWhereInput!]\\n  NOT: [SerieUserScalarWhereInput!]\\n}\\n\\ntype SerieUserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: SerieUser\\n  updatedFields: [String!]\\n  previousValues: SerieUserPreviousValues\\n}\\n\\ninput SerieUserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: SerieUserWhereInput\\n  AND: [SerieUserSubscriptionWhereInput!]\\n  OR: [SerieUserSubscriptionWhereInput!]\\n  NOT: [SerieUserSubscriptionWhereInput!]\\n}\\n\\ninput SerieUserUpdateInput {\\n  finish: Boolean\\n  serie: SerieUpdateOneRequiredInput\\n  user: UserUpdateOneRequiredWithoutSerieInput\\n}\\n\\ninput SerieUserUpdateManyDataInput {\\n  finish: Boolean\\n}\\n\\ninput SerieUserUpdateManyMutationInput {\\n  finish: Boolean\\n}\\n\\ninput SerieUserUpdateManyWithoutUserInput {\\n  create: [SerieUserCreateWithoutUserInput!]\\n  delete: [SerieUserWhereUniqueInput!]\\n  connect: [SerieUserWhereUniqueInput!]\\n  set: [SerieUserWhereUniqueInput!]\\n  disconnect: [SerieUserWhereUniqueInput!]\\n  update: [SerieUserUpdateWithWhereUniqueWithoutUserInput!]\\n  upsert: [SerieUserUpsertWithWhereUniqueWithoutUserInput!]\\n  deleteMany: [SerieUserScalarWhereInput!]\\n  updateMany: [SerieUserUpdateManyWithWhereNestedInput!]\\n}\\n\\ninput SerieUserUpdateManyWithWhereNestedInput {\\n  where: SerieUserScalarWhereInput!\\n  data: SerieUserUpdateManyDataInput!\\n}\\n\\ninput SerieUserUpdateWithoutUserDataInput {\\n  finish: Boolean\\n  serie: SerieUpdateOneRequiredInput\\n}\\n\\ninput SerieUserUpdateWithWhereUniqueWithoutUserInput {\\n  where: SerieUserWhereUniqueInput!\\n  data: SerieUserUpdateWithoutUserDataInput!\\n}\\n\\ninput SerieUserUpsertWithWhereUniqueWithoutUserInput {\\n  where: SerieUserWhereUniqueInput!\\n  update: SerieUserUpdateWithoutUserDataInput!\\n  create: SerieUserCreateWithoutUserInput!\\n}\\n\\ninput SerieUserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  finish: Boolean\\n  finish_not: Boolean\\n  serie: SerieWhereInput\\n  user: UserWhereInput\\n  AND: [SerieUserWhereInput!]\\n  OR: [SerieUserWhereInput!]\\n  NOT: [SerieUserWhereInput!]\\n}\\n\\ninput SerieUserWhereUniqueInput {\\n  id: ID\\n}\\n\\ninput SerieWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  name: String\\n  name_not: String\\n  name_in: [String!]\\n  name_not_in: [String!]\\n  name_lt: String\\n  name_lte: String\\n  name_gt: String\\n  name_gte: String\\n  name_contains: String\\n  name_not_contains: String\\n  name_starts_with: String\\n  name_not_starts_with: String\\n  name_ends_with: String\\n  name_not_ends_with: String\\n  genre: String\\n  genre_not: String\\n  genre_in: [String!]\\n  genre_not_in: [String!]\\n  genre_lt: String\\n  genre_lte: String\\n  genre_gt: String\\n  genre_gte: String\\n  genre_contains: String\\n  genre_not_contains: String\\n  genre_starts_with: String\\n  genre_not_starts_with: String\\n  genre_ends_with: String\\n  genre_not_ends_with: String\\n  description: String\\n  description_not: String\\n  description_in: [String!]\\n  description_not_in: [String!]\\n  description_lt: String\\n  description_lte: String\\n  description_gt: String\\n  description_gte: String\\n  description_contains: String\\n  description_not_contains: String\\n  description_starts_with: String\\n  description_not_starts_with: String\\n  description_ends_with: String\\n  description_not_ends_with: String\\n  nbEp: String\\n  nbEp_not: String\\n  nbEp_in: [String!]\\n  nbEp_not_in: [String!]\\n  nbEp_lt: String\\n  nbEp_lte: String\\n  nbEp_gt: String\\n  nbEp_gte: String\\n  nbEp_contains: String\\n  nbEp_not_contains: String\\n  nbEp_starts_with: String\\n  nbEp_not_starts_with: String\\n  nbEp_ends_with: String\\n  nbEp_not_ends_with: String\\n  nbSais: String\\n  nbSais_not: String\\n  nbSais_in: [String!]\\n  nbSais_not_in: [String!]\\n  nbSais_lt: String\\n  nbSais_lte: String\\n  nbSais_gt: String\\n  nbSais_gte: String\\n  nbSais_contains: String\\n  nbSais_not_contains: String\\n  nbSais_starts_with: String\\n  nbSais_not_starts_with: String\\n  nbSais_ends_with: String\\n  nbSais_not_ends_with: String\\n  saisons_every: SaisonWhereInput\\n  saisons_some: SaisonWhereInput\\n  saisons_none: SaisonWhereInput\\n  episodes_every: EpisodeWhereInput\\n  episodes_some: EpisodeWhereInput\\n  episodes_none: EpisodeWhereInput\\n  AND: [SerieWhereInput!]\\n  OR: [SerieWhereInput!]\\n  NOT: [SerieWhereInput!]\\n}\\n\\ninput SerieWhereUniqueInput {\\n  id: ID\\n}\\n\\ntype Subscription {\\n  episode(where: EpisodeSubscriptionWhereInput): EpisodeSubscriptionPayload\\n  film(where: FilmSubscriptionWhereInput): FilmSubscriptionPayload\\n  filmUser(where: FilmUserSubscriptionWhereInput): FilmUserSubscriptionPayload\\n  saison(where: SaisonSubscriptionWhereInput): SaisonSubscriptionPayload\\n  serie(where: SerieSubscriptionWhereInput): SerieSubscriptionPayload\\n  serieUser(where: SerieUserSubscriptionWhereInput): SerieUserSubscriptionPayload\\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\\n}\\n\\ntype User {\\n  id: ID!\\n  email: String!\\n  password: String!\\n  username: String!\\n  type: String!\\n  serie(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser!]\\n  film(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser!]\\n}\\n\\ntype UserConnection {\\n  pageInfo: PageInfo!\\n  edges: [UserEdge]!\\n  aggregate: AggregateUser!\\n}\\n\\ninput UserCreateInput {\\n  email: String!\\n  password: String!\\n  username: String!\\n  type: String!\\n  serie: SerieUserCreateManyWithoutUserInput\\n  film: FilmUserCreateManyWithoutUserInput\\n}\\n\\ninput UserCreateOneWithoutFilmInput {\\n  create: UserCreateWithoutFilmInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserCreateOneWithoutSerieInput {\\n  create: UserCreateWithoutSerieInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserCreateWithoutFilmInput {\\n  email: String!\\n  password: String!\\n  username: String!\\n  type: String!\\n  serie: SerieUserCreateManyWithoutUserInput\\n}\\n\\ninput UserCreateWithoutSerieInput {\\n  email: String!\\n  password: String!\\n  username: String!\\n  type: String!\\n  film: FilmUserCreateManyWithoutUserInput\\n}\\n\\ntype UserEdge {\\n  node: User!\\n  cursor: String!\\n}\\n\\nenum UserOrderByInput {\\n  id_ASC\\n  id_DESC\\n  email_ASC\\n  email_DESC\\n  password_ASC\\n  password_DESC\\n  username_ASC\\n  username_DESC\\n  type_ASC\\n  type_DESC\\n  createdAt_ASC\\n  createdAt_DESC\\n  updatedAt_ASC\\n  updatedAt_DESC\\n}\\n\\ntype UserPreviousValues {\\n  id: ID!\\n  email: String!\\n  password: String!\\n  username: String!\\n  type: String!\\n}\\n\\ntype UserSubscriptionPayload {\\n  mutation: MutationType!\\n  node: User\\n  updatedFields: [String!]\\n  previousValues: UserPreviousValues\\n}\\n\\ninput UserSubscriptionWhereInput {\\n  mutation_in: [MutationType!]\\n  updatedFields_contains: String\\n  updatedFields_contains_every: [String!]\\n  updatedFields_contains_some: [String!]\\n  node: UserWhereInput\\n  AND: [UserSubscriptionWhereInput!]\\n  OR: [UserSubscriptionWhereInput!]\\n  NOT: [UserSubscriptionWhereInput!]\\n}\\n\\ninput UserUpdateInput {\\n  email: String\\n  password: String\\n  username: String\\n  type: String\\n  serie: SerieUserUpdateManyWithoutUserInput\\n  film: FilmUserUpdateManyWithoutUserInput\\n}\\n\\ninput UserUpdateManyMutationInput {\\n  email: String\\n  password: String\\n  username: String\\n  type: String\\n}\\n\\ninput UserUpdateOneRequiredWithoutFilmInput {\\n  create: UserCreateWithoutFilmInput\\n  update: UserUpdateWithoutFilmDataInput\\n  upsert: UserUpsertWithoutFilmInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserUpdateOneRequiredWithoutSerieInput {\\n  create: UserCreateWithoutSerieInput\\n  update: UserUpdateWithoutSerieDataInput\\n  upsert: UserUpsertWithoutSerieInput\\n  connect: UserWhereUniqueInput\\n}\\n\\ninput UserUpdateWithoutFilmDataInput {\\n  email: String\\n  password: String\\n  username: String\\n  type: String\\n  serie: SerieUserUpdateManyWithoutUserInput\\n}\\n\\ninput UserUpdateWithoutSerieDataInput {\\n  email: String\\n  password: String\\n  username: String\\n  type: String\\n  film: FilmUserUpdateManyWithoutUserInput\\n}\\n\\ninput UserUpsertWithoutFilmInput {\\n  update: UserUpdateWithoutFilmDataInput!\\n  create: UserCreateWithoutFilmInput!\\n}\\n\\ninput UserUpsertWithoutSerieInput {\\n  update: UserUpdateWithoutSerieDataInput!\\n  create: UserCreateWithoutSerieInput!\\n}\\n\\ninput UserWhereInput {\\n  id: ID\\n  id_not: ID\\n  id_in: [ID!]\\n  id_not_in: [ID!]\\n  id_lt: ID\\n  id_lte: ID\\n  id_gt: ID\\n  id_gte: ID\\n  id_contains: ID\\n  id_not_contains: ID\\n  id_starts_with: ID\\n  id_not_starts_with: ID\\n  id_ends_with: ID\\n  id_not_ends_with: ID\\n  email: String\\n  email_not: String\\n  email_in: [String!]\\n  email_not_in: [String!]\\n  email_lt: String\\n  email_lte: String\\n  email_gt: String\\n  email_gte: String\\n  email_contains: String\\n  email_not_contains: String\\n  email_starts_with: String\\n  email_not_starts_with: String\\n  email_ends_with: String\\n  email_not_ends_with: String\\n  password: String\\n  password_not: String\\n  password_in: [String!]\\n  password_not_in: [String!]\\n  password_lt: String\\n  password_lte: String\\n  password_gt: String\\n  password_gte: String\\n  password_contains: String\\n  password_not_contains: String\\n  password_starts_with: String\\n  password_not_starts_with: String\\n  password_ends_with: String\\n  password_not_ends_with: String\\n  username: String\\n  username_not: String\\n  username_in: [String!]\\n  username_not_in: [String!]\\n  username_lt: String\\n  username_lte: String\\n  username_gt: String\\n  username_gte: String\\n  username_contains: String\\n  username_not_contains: String\\n  username_starts_with: String\\n  username_not_starts_with: String\\n  username_ends_with: String\\n  username_not_ends_with: String\\n  type: String\\n  type_not: String\\n  type_in: [String!]\\n  type_not_in: [String!]\\n  type_lt: String\\n  type_lte: String\\n  type_gt: String\\n  type_gte: String\\n  type_contains: String\\n  type_not_contains: String\\n  type_starts_with: String\\n  type_not_starts_with: String\\n  type_ends_with: String\\n  type_not_ends_with: String\\n  serie_every: SerieUserWhereInput\\n  serie_some: SerieUserWhereInput\\n  serie_none: SerieUserWhereInput\\n  film_every: FilmUserWhereInput\\n  film_some: FilmUserWhereInput\\n  film_none: FilmUserWhereInput\\n  AND: [UserWhereInput!]\\n  OR: [UserWhereInput!]\\n  NOT: [UserWhereInput!]\\n}\\n\\ninput UserWhereUniqueInput {\\n  id: ID\\n  email: String\\n  username: String\\n}\\n\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "prisma-schema.js"
      ],
      "names": [
        "module",
        "exports",
        "typeDefs"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACTC,EAAAA,QAAQ,EAAE;AAChB;AACA;;AAEF;AAJgB;AADC,CAAjB",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/generated/prisma-client",
      "sourcesContent": [
        "module.exports = {\n        typeDefs: // Code generated by Prisma (prisma@1.28.5). DO NOT EDIT.\n  // Please don't change this file manually but run `prisma generate` to update it.\n  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/\n\n/* GraphQL */ `type AggregateEpisode {\n  count: Int!\n}\n\ntype AggregateFilm {\n  count: Int!\n}\n\ntype AggregateFilmUser {\n  count: Int!\n}\n\ntype AggregateSaison {\n  count: Int!\n}\n\ntype AggregateSerie {\n  count: Int!\n}\n\ntype AggregateSerieUser {\n  count: Int!\n}\n\ntype AggregateUser {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Episode {\n  id: ID!\n  name: String!\n  description: String!\n  saison: Saison!\n  serie: Serie!\n}\n\ntype EpisodeConnection {\n  pageInfo: PageInfo!\n  edges: [EpisodeEdge]!\n  aggregate: AggregateEpisode!\n}\n\ninput EpisodeCreateInput {\n  name: String!\n  description: String!\n  saison: SaisonCreateOneWithoutEpisodesInput!\n  serie: SerieCreateOneWithoutEpisodesInput!\n}\n\ninput EpisodeCreateManyWithoutSaisonInput {\n  create: [EpisodeCreateWithoutSaisonInput!]\n  connect: [EpisodeWhereUniqueInput!]\n}\n\ninput EpisodeCreateManyWithoutSerieInput {\n  create: [EpisodeCreateWithoutSerieInput!]\n  connect: [EpisodeWhereUniqueInput!]\n}\n\ninput EpisodeCreateWithoutSaisonInput {\n  name: String!\n  description: String!\n  serie: SerieCreateOneWithoutEpisodesInput!\n}\n\ninput EpisodeCreateWithoutSerieInput {\n  name: String!\n  description: String!\n  saison: SaisonCreateOneWithoutEpisodesInput!\n}\n\ntype EpisodeEdge {\n  node: Episode!\n  cursor: String!\n}\n\nenum EpisodeOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  description_ASC\n  description_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype EpisodePreviousValues {\n  id: ID!\n  name: String!\n  description: String!\n}\n\ninput EpisodeScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  AND: [EpisodeScalarWhereInput!]\n  OR: [EpisodeScalarWhereInput!]\n  NOT: [EpisodeScalarWhereInput!]\n}\n\ntype EpisodeSubscriptionPayload {\n  mutation: MutationType!\n  node: Episode\n  updatedFields: [String!]\n  previousValues: EpisodePreviousValues\n}\n\ninput EpisodeSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: EpisodeWhereInput\n  AND: [EpisodeSubscriptionWhereInput!]\n  OR: [EpisodeSubscriptionWhereInput!]\n  NOT: [EpisodeSubscriptionWhereInput!]\n}\n\ninput EpisodeUpdateInput {\n  name: String\n  description: String\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\n}\n\ninput EpisodeUpdateManyDataInput {\n  name: String\n  description: String\n}\n\ninput EpisodeUpdateManyMutationInput {\n  name: String\n  description: String\n}\n\ninput EpisodeUpdateManyWithoutSaisonInput {\n  create: [EpisodeCreateWithoutSaisonInput!]\n  delete: [EpisodeWhereUniqueInput!]\n  connect: [EpisodeWhereUniqueInput!]\n  set: [EpisodeWhereUniqueInput!]\n  disconnect: [EpisodeWhereUniqueInput!]\n  update: [EpisodeUpdateWithWhereUniqueWithoutSaisonInput!]\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSaisonInput!]\n  deleteMany: [EpisodeScalarWhereInput!]\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\n}\n\ninput EpisodeUpdateManyWithoutSerieInput {\n  create: [EpisodeCreateWithoutSerieInput!]\n  delete: [EpisodeWhereUniqueInput!]\n  connect: [EpisodeWhereUniqueInput!]\n  set: [EpisodeWhereUniqueInput!]\n  disconnect: [EpisodeWhereUniqueInput!]\n  update: [EpisodeUpdateWithWhereUniqueWithoutSerieInput!]\n  upsert: [EpisodeUpsertWithWhereUniqueWithoutSerieInput!]\n  deleteMany: [EpisodeScalarWhereInput!]\n  updateMany: [EpisodeUpdateManyWithWhereNestedInput!]\n}\n\ninput EpisodeUpdateManyWithWhereNestedInput {\n  where: EpisodeScalarWhereInput!\n  data: EpisodeUpdateManyDataInput!\n}\n\ninput EpisodeUpdateWithoutSaisonDataInput {\n  name: String\n  description: String\n  serie: SerieUpdateOneRequiredWithoutEpisodesInput\n}\n\ninput EpisodeUpdateWithoutSerieDataInput {\n  name: String\n  description: String\n  saison: SaisonUpdateOneRequiredWithoutEpisodesInput\n}\n\ninput EpisodeUpdateWithWhereUniqueWithoutSaisonInput {\n  where: EpisodeWhereUniqueInput!\n  data: EpisodeUpdateWithoutSaisonDataInput!\n}\n\ninput EpisodeUpdateWithWhereUniqueWithoutSerieInput {\n  where: EpisodeWhereUniqueInput!\n  data: EpisodeUpdateWithoutSerieDataInput!\n}\n\ninput EpisodeUpsertWithWhereUniqueWithoutSaisonInput {\n  where: EpisodeWhereUniqueInput!\n  update: EpisodeUpdateWithoutSaisonDataInput!\n  create: EpisodeCreateWithoutSaisonInput!\n}\n\ninput EpisodeUpsertWithWhereUniqueWithoutSerieInput {\n  where: EpisodeWhereUniqueInput!\n  update: EpisodeUpdateWithoutSerieDataInput!\n  create: EpisodeCreateWithoutSerieInput!\n}\n\ninput EpisodeWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  saison: SaisonWhereInput\n  serie: SerieWhereInput\n  AND: [EpisodeWhereInput!]\n  OR: [EpisodeWhereInput!]\n  NOT: [EpisodeWhereInput!]\n}\n\ninput EpisodeWhereUniqueInput {\n  id: ID\n}\n\ntype Film {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n  duration: String!\n}\n\ntype FilmConnection {\n  pageInfo: PageInfo!\n  edges: [FilmEdge]!\n  aggregate: AggregateFilm!\n}\n\ninput FilmCreateInput {\n  name: String!\n  genre: String!\n  description: String!\n  duration: String!\n}\n\ninput FilmCreateOneInput {\n  create: FilmCreateInput\n  connect: FilmWhereUniqueInput\n}\n\ntype FilmEdge {\n  node: Film!\n  cursor: String!\n}\n\nenum FilmOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  genre_ASC\n  genre_DESC\n  description_ASC\n  description_DESC\n  duration_ASC\n  duration_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FilmPreviousValues {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n  duration: String!\n}\n\ntype FilmSubscriptionPayload {\n  mutation: MutationType!\n  node: Film\n  updatedFields: [String!]\n  previousValues: FilmPreviousValues\n}\n\ninput FilmSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FilmWhereInput\n  AND: [FilmSubscriptionWhereInput!]\n  OR: [FilmSubscriptionWhereInput!]\n  NOT: [FilmSubscriptionWhereInput!]\n}\n\ninput FilmUpdateDataInput {\n  name: String\n  genre: String\n  description: String\n  duration: String\n}\n\ninput FilmUpdateInput {\n  name: String\n  genre: String\n  description: String\n  duration: String\n}\n\ninput FilmUpdateManyMutationInput {\n  name: String\n  genre: String\n  description: String\n  duration: String\n}\n\ninput FilmUpdateOneRequiredInput {\n  create: FilmCreateInput\n  update: FilmUpdateDataInput\n  upsert: FilmUpsertNestedInput\n  connect: FilmWhereUniqueInput\n}\n\ninput FilmUpsertNestedInput {\n  update: FilmUpdateDataInput!\n  create: FilmCreateInput!\n}\n\ntype FilmUser {\n  id: ID!\n  finish: Boolean\n  progress: String!\n  film: Film!\n  user: User!\n}\n\ntype FilmUserConnection {\n  pageInfo: PageInfo!\n  edges: [FilmUserEdge]!\n  aggregate: AggregateFilmUser!\n}\n\ninput FilmUserCreateInput {\n  finish: Boolean\n  progress: String!\n  film: FilmCreateOneInput!\n  user: UserCreateOneWithoutFilmInput!\n}\n\ninput FilmUserCreateManyWithoutUserInput {\n  create: [FilmUserCreateWithoutUserInput!]\n  connect: [FilmUserWhereUniqueInput!]\n}\n\ninput FilmUserCreateWithoutUserInput {\n  finish: Boolean\n  progress: String!\n  film: FilmCreateOneInput!\n}\n\ntype FilmUserEdge {\n  node: FilmUser!\n  cursor: String!\n}\n\nenum FilmUserOrderByInput {\n  id_ASC\n  id_DESC\n  finish_ASC\n  finish_DESC\n  progress_ASC\n  progress_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype FilmUserPreviousValues {\n  id: ID!\n  finish: Boolean\n  progress: String!\n}\n\ninput FilmUserScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  progress: String\n  progress_not: String\n  progress_in: [String!]\n  progress_not_in: [String!]\n  progress_lt: String\n  progress_lte: String\n  progress_gt: String\n  progress_gte: String\n  progress_contains: String\n  progress_not_contains: String\n  progress_starts_with: String\n  progress_not_starts_with: String\n  progress_ends_with: String\n  progress_not_ends_with: String\n  AND: [FilmUserScalarWhereInput!]\n  OR: [FilmUserScalarWhereInput!]\n  NOT: [FilmUserScalarWhereInput!]\n}\n\ntype FilmUserSubscriptionPayload {\n  mutation: MutationType!\n  node: FilmUser\n  updatedFields: [String!]\n  previousValues: FilmUserPreviousValues\n}\n\ninput FilmUserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: FilmUserWhereInput\n  AND: [FilmUserSubscriptionWhereInput!]\n  OR: [FilmUserSubscriptionWhereInput!]\n  NOT: [FilmUserSubscriptionWhereInput!]\n}\n\ninput FilmUserUpdateInput {\n  finish: Boolean\n  progress: String\n  film: FilmUpdateOneRequiredInput\n  user: UserUpdateOneRequiredWithoutFilmInput\n}\n\ninput FilmUserUpdateManyDataInput {\n  finish: Boolean\n  progress: String\n}\n\ninput FilmUserUpdateManyMutationInput {\n  finish: Boolean\n  progress: String\n}\n\ninput FilmUserUpdateManyWithoutUserInput {\n  create: [FilmUserCreateWithoutUserInput!]\n  delete: [FilmUserWhereUniqueInput!]\n  connect: [FilmUserWhereUniqueInput!]\n  set: [FilmUserWhereUniqueInput!]\n  disconnect: [FilmUserWhereUniqueInput!]\n  update: [FilmUserUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [FilmUserUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [FilmUserScalarWhereInput!]\n  updateMany: [FilmUserUpdateManyWithWhereNestedInput!]\n}\n\ninput FilmUserUpdateManyWithWhereNestedInput {\n  where: FilmUserScalarWhereInput!\n  data: FilmUserUpdateManyDataInput!\n}\n\ninput FilmUserUpdateWithoutUserDataInput {\n  finish: Boolean\n  progress: String\n  film: FilmUpdateOneRequiredInput\n}\n\ninput FilmUserUpdateWithWhereUniqueWithoutUserInput {\n  where: FilmUserWhereUniqueInput!\n  data: FilmUserUpdateWithoutUserDataInput!\n}\n\ninput FilmUserUpsertWithWhereUniqueWithoutUserInput {\n  where: FilmUserWhereUniqueInput!\n  update: FilmUserUpdateWithoutUserDataInput!\n  create: FilmUserCreateWithoutUserInput!\n}\n\ninput FilmUserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  progress: String\n  progress_not: String\n  progress_in: [String!]\n  progress_not_in: [String!]\n  progress_lt: String\n  progress_lte: String\n  progress_gt: String\n  progress_gte: String\n  progress_contains: String\n  progress_not_contains: String\n  progress_starts_with: String\n  progress_not_starts_with: String\n  progress_ends_with: String\n  progress_not_ends_with: String\n  film: FilmWhereInput\n  user: UserWhereInput\n  AND: [FilmUserWhereInput!]\n  OR: [FilmUserWhereInput!]\n  NOT: [FilmUserWhereInput!]\n}\n\ninput FilmUserWhereUniqueInput {\n  id: ID\n}\n\ninput FilmWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  genre: String\n  genre_not: String\n  genre_in: [String!]\n  genre_not_in: [String!]\n  genre_lt: String\n  genre_lte: String\n  genre_gt: String\n  genre_gte: String\n  genre_contains: String\n  genre_not_contains: String\n  genre_starts_with: String\n  genre_not_starts_with: String\n  genre_ends_with: String\n  genre_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  duration: String\n  duration_not: String\n  duration_in: [String!]\n  duration_not_in: [String!]\n  duration_lt: String\n  duration_lte: String\n  duration_gt: String\n  duration_gte: String\n  duration_contains: String\n  duration_not_contains: String\n  duration_starts_with: String\n  duration_not_starts_with: String\n  duration_ends_with: String\n  duration_not_ends_with: String\n  AND: [FilmWhereInput!]\n  OR: [FilmWhereInput!]\n  NOT: [FilmWhereInput!]\n}\n\ninput FilmWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createEpisode(data: EpisodeCreateInput!): Episode!\n  updateEpisode(data: EpisodeUpdateInput!, where: EpisodeWhereUniqueInput!): Episode\n  updateManyEpisodes(data: EpisodeUpdateManyMutationInput!, where: EpisodeWhereInput): BatchPayload!\n  upsertEpisode(where: EpisodeWhereUniqueInput!, create: EpisodeCreateInput!, update: EpisodeUpdateInput!): Episode!\n  deleteEpisode(where: EpisodeWhereUniqueInput!): Episode\n  deleteManyEpisodes(where: EpisodeWhereInput): BatchPayload!\n  createFilm(data: FilmCreateInput!): Film!\n  updateFilm(data: FilmUpdateInput!, where: FilmWhereUniqueInput!): Film\n  updateManyFilms(data: FilmUpdateManyMutationInput!, where: FilmWhereInput): BatchPayload!\n  upsertFilm(where: FilmWhereUniqueInput!, create: FilmCreateInput!, update: FilmUpdateInput!): Film!\n  deleteFilm(where: FilmWhereUniqueInput!): Film\n  deleteManyFilms(where: FilmWhereInput): BatchPayload!\n  createFilmUser(data: FilmUserCreateInput!): FilmUser!\n  updateFilmUser(data: FilmUserUpdateInput!, where: FilmUserWhereUniqueInput!): FilmUser\n  updateManyFilmUsers(data: FilmUserUpdateManyMutationInput!, where: FilmUserWhereInput): BatchPayload!\n  upsertFilmUser(where: FilmUserWhereUniqueInput!, create: FilmUserCreateInput!, update: FilmUserUpdateInput!): FilmUser!\n  deleteFilmUser(where: FilmUserWhereUniqueInput!): FilmUser\n  deleteManyFilmUsers(where: FilmUserWhereInput): BatchPayload!\n  createSaison(data: SaisonCreateInput!): Saison!\n  updateSaison(data: SaisonUpdateInput!, where: SaisonWhereUniqueInput!): Saison\n  updateManySaisons(data: SaisonUpdateManyMutationInput!, where: SaisonWhereInput): BatchPayload!\n  upsertSaison(where: SaisonWhereUniqueInput!, create: SaisonCreateInput!, update: SaisonUpdateInput!): Saison!\n  deleteSaison(where: SaisonWhereUniqueInput!): Saison\n  deleteManySaisons(where: SaisonWhereInput): BatchPayload!\n  createSerie(data: SerieCreateInput!): Serie!\n  updateSerie(data: SerieUpdateInput!, where: SerieWhereUniqueInput!): Serie\n  updateManySeries(data: SerieUpdateManyMutationInput!, where: SerieWhereInput): BatchPayload!\n  upsertSerie(where: SerieWhereUniqueInput!, create: SerieCreateInput!, update: SerieUpdateInput!): Serie!\n  deleteSerie(where: SerieWhereUniqueInput!): Serie\n  deleteManySeries(where: SerieWhereInput): BatchPayload!\n  createSerieUser(data: SerieUserCreateInput!): SerieUser!\n  updateSerieUser(data: SerieUserUpdateInput!, where: SerieUserWhereUniqueInput!): SerieUser\n  updateManySerieUsers(data: SerieUserUpdateManyMutationInput!, where: SerieUserWhereInput): BatchPayload!\n  upsertSerieUser(where: SerieUserWhereUniqueInput!, create: SerieUserCreateInput!, update: SerieUserUpdateInput!): SerieUser!\n  deleteSerieUser(where: SerieUserWhereUniqueInput!): SerieUser\n  deleteManySerieUsers(where: SerieUserWhereInput): BatchPayload!\n  createUser(data: UserCreateInput!): User!\n  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User\n  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!\n  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!\n  deleteUser(where: UserWhereUniqueInput!): User\n  deleteManyUsers(where: UserWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  episode(where: EpisodeWhereUniqueInput!): Episode\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode]!\n  episodesConnection(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EpisodeConnection!\n  film(where: FilmWhereUniqueInput!): Film\n  films(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Film]!\n  filmsConnection(where: FilmWhereInput, orderBy: FilmOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmConnection!\n  filmUser(where: FilmUserWhereUniqueInput!): FilmUser\n  filmUsers(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser]!\n  filmUsersConnection(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FilmUserConnection!\n  saison(where: SaisonWhereUniqueInput!): Saison\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison]!\n  saisonsConnection(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SaisonConnection!\n  serie(where: SerieWhereUniqueInput!): Serie\n  series(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Serie]!\n  seriesConnection(where: SerieWhereInput, orderBy: SerieOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieConnection!\n  serieUser(where: SerieUserWhereUniqueInput!): SerieUser\n  serieUsers(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser]!\n  serieUsersConnection(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SerieUserConnection!\n  user(where: UserWhereUniqueInput!): User\n  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!\n  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!\n  node(id: ID!): Node\n}\n\ntype Saison {\n  id: ID!\n  number: String!\n  serie: Serie!\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\n}\n\ntype SaisonConnection {\n  pageInfo: PageInfo!\n  edges: [SaisonEdge]!\n  aggregate: AggregateSaison!\n}\n\ninput SaisonCreateInput {\n  number: String!\n  serie: SerieCreateOneWithoutSaisonsInput!\n  episodes: EpisodeCreateManyWithoutSaisonInput\n}\n\ninput SaisonCreateManyWithoutSerieInput {\n  create: [SaisonCreateWithoutSerieInput!]\n  connect: [SaisonWhereUniqueInput!]\n}\n\ninput SaisonCreateOneWithoutEpisodesInput {\n  create: SaisonCreateWithoutEpisodesInput\n  connect: SaisonWhereUniqueInput\n}\n\ninput SaisonCreateWithoutEpisodesInput {\n  number: String!\n  serie: SerieCreateOneWithoutSaisonsInput!\n}\n\ninput SaisonCreateWithoutSerieInput {\n  number: String!\n  episodes: EpisodeCreateManyWithoutSaisonInput\n}\n\ntype SaisonEdge {\n  node: Saison!\n  cursor: String!\n}\n\nenum SaisonOrderByInput {\n  id_ASC\n  id_DESC\n  number_ASC\n  number_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SaisonPreviousValues {\n  id: ID!\n  number: String!\n}\n\ninput SaisonScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  AND: [SaisonScalarWhereInput!]\n  OR: [SaisonScalarWhereInput!]\n  NOT: [SaisonScalarWhereInput!]\n}\n\ntype SaisonSubscriptionPayload {\n  mutation: MutationType!\n  node: Saison\n  updatedFields: [String!]\n  previousValues: SaisonPreviousValues\n}\n\ninput SaisonSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SaisonWhereInput\n  AND: [SaisonSubscriptionWhereInput!]\n  OR: [SaisonSubscriptionWhereInput!]\n  NOT: [SaisonSubscriptionWhereInput!]\n}\n\ninput SaisonUpdateInput {\n  number: String\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\n  episodes: EpisodeUpdateManyWithoutSaisonInput\n}\n\ninput SaisonUpdateManyDataInput {\n  number: String\n}\n\ninput SaisonUpdateManyMutationInput {\n  number: String\n}\n\ninput SaisonUpdateManyWithoutSerieInput {\n  create: [SaisonCreateWithoutSerieInput!]\n  delete: [SaisonWhereUniqueInput!]\n  connect: [SaisonWhereUniqueInput!]\n  set: [SaisonWhereUniqueInput!]\n  disconnect: [SaisonWhereUniqueInput!]\n  update: [SaisonUpdateWithWhereUniqueWithoutSerieInput!]\n  upsert: [SaisonUpsertWithWhereUniqueWithoutSerieInput!]\n  deleteMany: [SaisonScalarWhereInput!]\n  updateMany: [SaisonUpdateManyWithWhereNestedInput!]\n}\n\ninput SaisonUpdateManyWithWhereNestedInput {\n  where: SaisonScalarWhereInput!\n  data: SaisonUpdateManyDataInput!\n}\n\ninput SaisonUpdateOneRequiredWithoutEpisodesInput {\n  create: SaisonCreateWithoutEpisodesInput\n  update: SaisonUpdateWithoutEpisodesDataInput\n  upsert: SaisonUpsertWithoutEpisodesInput\n  connect: SaisonWhereUniqueInput\n}\n\ninput SaisonUpdateWithoutEpisodesDataInput {\n  number: String\n  serie: SerieUpdateOneRequiredWithoutSaisonsInput\n}\n\ninput SaisonUpdateWithoutSerieDataInput {\n  number: String\n  episodes: EpisodeUpdateManyWithoutSaisonInput\n}\n\ninput SaisonUpdateWithWhereUniqueWithoutSerieInput {\n  where: SaisonWhereUniqueInput!\n  data: SaisonUpdateWithoutSerieDataInput!\n}\n\ninput SaisonUpsertWithoutEpisodesInput {\n  update: SaisonUpdateWithoutEpisodesDataInput!\n  create: SaisonCreateWithoutEpisodesInput!\n}\n\ninput SaisonUpsertWithWhereUniqueWithoutSerieInput {\n  where: SaisonWhereUniqueInput!\n  update: SaisonUpdateWithoutSerieDataInput!\n  create: SaisonCreateWithoutSerieInput!\n}\n\ninput SaisonWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  serie: SerieWhereInput\n  episodes_every: EpisodeWhereInput\n  episodes_some: EpisodeWhereInput\n  episodes_none: EpisodeWhereInput\n  AND: [SaisonWhereInput!]\n  OR: [SaisonWhereInput!]\n  NOT: [SaisonWhereInput!]\n}\n\ninput SaisonWhereUniqueInput {\n  id: ID\n}\n\ntype Serie {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  saisons(where: SaisonWhereInput, orderBy: SaisonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Saison!]\n  episodes(where: EpisodeWhereInput, orderBy: EpisodeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Episode!]\n}\n\ntype SerieConnection {\n  pageInfo: PageInfo!\n  edges: [SerieEdge]!\n  aggregate: AggregateSerie!\n}\n\ninput SerieCreateInput {\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  saisons: SaisonCreateManyWithoutSerieInput\n  episodes: EpisodeCreateManyWithoutSerieInput\n}\n\ninput SerieCreateOneInput {\n  create: SerieCreateInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieCreateOneWithoutEpisodesInput {\n  create: SerieCreateWithoutEpisodesInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieCreateOneWithoutSaisonsInput {\n  create: SerieCreateWithoutSaisonsInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieCreateWithoutEpisodesInput {\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  saisons: SaisonCreateManyWithoutSerieInput\n}\n\ninput SerieCreateWithoutSaisonsInput {\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n  episodes: EpisodeCreateManyWithoutSerieInput\n}\n\ntype SerieEdge {\n  node: Serie!\n  cursor: String!\n}\n\nenum SerieOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  genre_ASC\n  genre_DESC\n  description_ASC\n  description_DESC\n  nbEp_ASC\n  nbEp_DESC\n  nbSais_ASC\n  nbSais_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SeriePreviousValues {\n  id: ID!\n  name: String!\n  genre: String!\n  description: String!\n  nbEp: String!\n  nbSais: String!\n}\n\ntype SerieSubscriptionPayload {\n  mutation: MutationType!\n  node: Serie\n  updatedFields: [String!]\n  previousValues: SeriePreviousValues\n}\n\ninput SerieSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SerieWhereInput\n  AND: [SerieSubscriptionWhereInput!]\n  OR: [SerieSubscriptionWhereInput!]\n  NOT: [SerieSubscriptionWhereInput!]\n}\n\ninput SerieUpdateDataInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  saisons: SaisonUpdateManyWithoutSerieInput\n  episodes: EpisodeUpdateManyWithoutSerieInput\n}\n\ninput SerieUpdateInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  saisons: SaisonUpdateManyWithoutSerieInput\n  episodes: EpisodeUpdateManyWithoutSerieInput\n}\n\ninput SerieUpdateManyMutationInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n}\n\ninput SerieUpdateOneRequiredInput {\n  create: SerieCreateInput\n  update: SerieUpdateDataInput\n  upsert: SerieUpsertNestedInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieUpdateOneRequiredWithoutEpisodesInput {\n  create: SerieCreateWithoutEpisodesInput\n  update: SerieUpdateWithoutEpisodesDataInput\n  upsert: SerieUpsertWithoutEpisodesInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieUpdateOneRequiredWithoutSaisonsInput {\n  create: SerieCreateWithoutSaisonsInput\n  update: SerieUpdateWithoutSaisonsDataInput\n  upsert: SerieUpsertWithoutSaisonsInput\n  connect: SerieWhereUniqueInput\n}\n\ninput SerieUpdateWithoutEpisodesDataInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  saisons: SaisonUpdateManyWithoutSerieInput\n}\n\ninput SerieUpdateWithoutSaisonsDataInput {\n  name: String\n  genre: String\n  description: String\n  nbEp: String\n  nbSais: String\n  episodes: EpisodeUpdateManyWithoutSerieInput\n}\n\ninput SerieUpsertNestedInput {\n  update: SerieUpdateDataInput!\n  create: SerieCreateInput!\n}\n\ninput SerieUpsertWithoutEpisodesInput {\n  update: SerieUpdateWithoutEpisodesDataInput!\n  create: SerieCreateWithoutEpisodesInput!\n}\n\ninput SerieUpsertWithoutSaisonsInput {\n  update: SerieUpdateWithoutSaisonsDataInput!\n  create: SerieCreateWithoutSaisonsInput!\n}\n\ntype SerieUser {\n  id: ID!\n  finish: Boolean\n  serie: Serie!\n  user: User!\n}\n\ntype SerieUserConnection {\n  pageInfo: PageInfo!\n  edges: [SerieUserEdge]!\n  aggregate: AggregateSerieUser!\n}\n\ninput SerieUserCreateInput {\n  finish: Boolean\n  serie: SerieCreateOneInput!\n  user: UserCreateOneWithoutSerieInput!\n}\n\ninput SerieUserCreateManyWithoutUserInput {\n  create: [SerieUserCreateWithoutUserInput!]\n  connect: [SerieUserWhereUniqueInput!]\n}\n\ninput SerieUserCreateWithoutUserInput {\n  finish: Boolean\n  serie: SerieCreateOneInput!\n}\n\ntype SerieUserEdge {\n  node: SerieUser!\n  cursor: String!\n}\n\nenum SerieUserOrderByInput {\n  id_ASC\n  id_DESC\n  finish_ASC\n  finish_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SerieUserPreviousValues {\n  id: ID!\n  finish: Boolean\n}\n\ninput SerieUserScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  AND: [SerieUserScalarWhereInput!]\n  OR: [SerieUserScalarWhereInput!]\n  NOT: [SerieUserScalarWhereInput!]\n}\n\ntype SerieUserSubscriptionPayload {\n  mutation: MutationType!\n  node: SerieUser\n  updatedFields: [String!]\n  previousValues: SerieUserPreviousValues\n}\n\ninput SerieUserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SerieUserWhereInput\n  AND: [SerieUserSubscriptionWhereInput!]\n  OR: [SerieUserSubscriptionWhereInput!]\n  NOT: [SerieUserSubscriptionWhereInput!]\n}\n\ninput SerieUserUpdateInput {\n  finish: Boolean\n  serie: SerieUpdateOneRequiredInput\n  user: UserUpdateOneRequiredWithoutSerieInput\n}\n\ninput SerieUserUpdateManyDataInput {\n  finish: Boolean\n}\n\ninput SerieUserUpdateManyMutationInput {\n  finish: Boolean\n}\n\ninput SerieUserUpdateManyWithoutUserInput {\n  create: [SerieUserCreateWithoutUserInput!]\n  delete: [SerieUserWhereUniqueInput!]\n  connect: [SerieUserWhereUniqueInput!]\n  set: [SerieUserWhereUniqueInput!]\n  disconnect: [SerieUserWhereUniqueInput!]\n  update: [SerieUserUpdateWithWhereUniqueWithoutUserInput!]\n  upsert: [SerieUserUpsertWithWhereUniqueWithoutUserInput!]\n  deleteMany: [SerieUserScalarWhereInput!]\n  updateMany: [SerieUserUpdateManyWithWhereNestedInput!]\n}\n\ninput SerieUserUpdateManyWithWhereNestedInput {\n  where: SerieUserScalarWhereInput!\n  data: SerieUserUpdateManyDataInput!\n}\n\ninput SerieUserUpdateWithoutUserDataInput {\n  finish: Boolean\n  serie: SerieUpdateOneRequiredInput\n}\n\ninput SerieUserUpdateWithWhereUniqueWithoutUserInput {\n  where: SerieUserWhereUniqueInput!\n  data: SerieUserUpdateWithoutUserDataInput!\n}\n\ninput SerieUserUpsertWithWhereUniqueWithoutUserInput {\n  where: SerieUserWhereUniqueInput!\n  update: SerieUserUpdateWithoutUserDataInput!\n  create: SerieUserCreateWithoutUserInput!\n}\n\ninput SerieUserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  finish: Boolean\n  finish_not: Boolean\n  serie: SerieWhereInput\n  user: UserWhereInput\n  AND: [SerieUserWhereInput!]\n  OR: [SerieUserWhereInput!]\n  NOT: [SerieUserWhereInput!]\n}\n\ninput SerieUserWhereUniqueInput {\n  id: ID\n}\n\ninput SerieWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  genre: String\n  genre_not: String\n  genre_in: [String!]\n  genre_not_in: [String!]\n  genre_lt: String\n  genre_lte: String\n  genre_gt: String\n  genre_gte: String\n  genre_contains: String\n  genre_not_contains: String\n  genre_starts_with: String\n  genre_not_starts_with: String\n  genre_ends_with: String\n  genre_not_ends_with: String\n  description: String\n  description_not: String\n  description_in: [String!]\n  description_not_in: [String!]\n  description_lt: String\n  description_lte: String\n  description_gt: String\n  description_gte: String\n  description_contains: String\n  description_not_contains: String\n  description_starts_with: String\n  description_not_starts_with: String\n  description_ends_with: String\n  description_not_ends_with: String\n  nbEp: String\n  nbEp_not: String\n  nbEp_in: [String!]\n  nbEp_not_in: [String!]\n  nbEp_lt: String\n  nbEp_lte: String\n  nbEp_gt: String\n  nbEp_gte: String\n  nbEp_contains: String\n  nbEp_not_contains: String\n  nbEp_starts_with: String\n  nbEp_not_starts_with: String\n  nbEp_ends_with: String\n  nbEp_not_ends_with: String\n  nbSais: String\n  nbSais_not: String\n  nbSais_in: [String!]\n  nbSais_not_in: [String!]\n  nbSais_lt: String\n  nbSais_lte: String\n  nbSais_gt: String\n  nbSais_gte: String\n  nbSais_contains: String\n  nbSais_not_contains: String\n  nbSais_starts_with: String\n  nbSais_not_starts_with: String\n  nbSais_ends_with: String\n  nbSais_not_ends_with: String\n  saisons_every: SaisonWhereInput\n  saisons_some: SaisonWhereInput\n  saisons_none: SaisonWhereInput\n  episodes_every: EpisodeWhereInput\n  episodes_some: EpisodeWhereInput\n  episodes_none: EpisodeWhereInput\n  AND: [SerieWhereInput!]\n  OR: [SerieWhereInput!]\n  NOT: [SerieWhereInput!]\n}\n\ninput SerieWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  episode(where: EpisodeSubscriptionWhereInput): EpisodeSubscriptionPayload\n  film(where: FilmSubscriptionWhereInput): FilmSubscriptionPayload\n  filmUser(where: FilmUserSubscriptionWhereInput): FilmUserSubscriptionPayload\n  saison(where: SaisonSubscriptionWhereInput): SaisonSubscriptionPayload\n  serie(where: SerieSubscriptionWhereInput): SerieSubscriptionPayload\n  serieUser(where: SerieUserSubscriptionWhereInput): SerieUserSubscriptionPayload\n  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload\n}\n\ntype User {\n  id: ID!\n  email: String!\n  password: String!\n  username: String!\n  type: String!\n  serie(where: SerieUserWhereInput, orderBy: SerieUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SerieUser!]\n  film(where: FilmUserWhereInput, orderBy: FilmUserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FilmUser!]\n}\n\ntype UserConnection {\n  pageInfo: PageInfo!\n  edges: [UserEdge]!\n  aggregate: AggregateUser!\n}\n\ninput UserCreateInput {\n  email: String!\n  password: String!\n  username: String!\n  type: String!\n  serie: SerieUserCreateManyWithoutUserInput\n  film: FilmUserCreateManyWithoutUserInput\n}\n\ninput UserCreateOneWithoutFilmInput {\n  create: UserCreateWithoutFilmInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateOneWithoutSerieInput {\n  create: UserCreateWithoutSerieInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserCreateWithoutFilmInput {\n  email: String!\n  password: String!\n  username: String!\n  type: String!\n  serie: SerieUserCreateManyWithoutUserInput\n}\n\ninput UserCreateWithoutSerieInput {\n  email: String!\n  password: String!\n  username: String!\n  type: String!\n  film: FilmUserCreateManyWithoutUserInput\n}\n\ntype UserEdge {\n  node: User!\n  cursor: String!\n}\n\nenum UserOrderByInput {\n  id_ASC\n  id_DESC\n  email_ASC\n  email_DESC\n  password_ASC\n  password_DESC\n  username_ASC\n  username_DESC\n  type_ASC\n  type_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype UserPreviousValues {\n  id: ID!\n  email: String!\n  password: String!\n  username: String!\n  type: String!\n}\n\ntype UserSubscriptionPayload {\n  mutation: MutationType!\n  node: User\n  updatedFields: [String!]\n  previousValues: UserPreviousValues\n}\n\ninput UserSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: UserWhereInput\n  AND: [UserSubscriptionWhereInput!]\n  OR: [UserSubscriptionWhereInput!]\n  NOT: [UserSubscriptionWhereInput!]\n}\n\ninput UserUpdateInput {\n  email: String\n  password: String\n  username: String\n  type: String\n  serie: SerieUserUpdateManyWithoutUserInput\n  film: FilmUserUpdateManyWithoutUserInput\n}\n\ninput UserUpdateManyMutationInput {\n  email: String\n  password: String\n  username: String\n  type: String\n}\n\ninput UserUpdateOneRequiredWithoutFilmInput {\n  create: UserCreateWithoutFilmInput\n  update: UserUpdateWithoutFilmDataInput\n  upsert: UserUpsertWithoutFilmInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateOneRequiredWithoutSerieInput {\n  create: UserCreateWithoutSerieInput\n  update: UserUpdateWithoutSerieDataInput\n  upsert: UserUpsertWithoutSerieInput\n  connect: UserWhereUniqueInput\n}\n\ninput UserUpdateWithoutFilmDataInput {\n  email: String\n  password: String\n  username: String\n  type: String\n  serie: SerieUserUpdateManyWithoutUserInput\n}\n\ninput UserUpdateWithoutSerieDataInput {\n  email: String\n  password: String\n  username: String\n  type: String\n  film: FilmUserUpdateManyWithoutUserInput\n}\n\ninput UserUpsertWithoutFilmInput {\n  update: UserUpdateWithoutFilmDataInput!\n  create: UserCreateWithoutFilmInput!\n}\n\ninput UserUpsertWithoutSerieInput {\n  update: UserUpdateWithoutSerieDataInput!\n  create: UserCreateWithoutSerieInput!\n}\n\ninput UserWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  email: String\n  email_not: String\n  email_in: [String!]\n  email_not_in: [String!]\n  email_lt: String\n  email_lte: String\n  email_gt: String\n  email_gte: String\n  email_contains: String\n  email_not_contains: String\n  email_starts_with: String\n  email_not_starts_with: String\n  email_ends_with: String\n  email_not_ends_with: String\n  password: String\n  password_not: String\n  password_in: [String!]\n  password_not_in: [String!]\n  password_lt: String\n  password_lte: String\n  password_gt: String\n  password_gte: String\n  password_contains: String\n  password_not_contains: String\n  password_starts_with: String\n  password_not_starts_with: String\n  password_ends_with: String\n  password_not_ends_with: String\n  username: String\n  username_not: String\n  username_in: [String!]\n  username_not_in: [String!]\n  username_lt: String\n  username_lte: String\n  username_gt: String\n  username_gte: String\n  username_contains: String\n  username_not_contains: String\n  username_starts_with: String\n  username_not_starts_with: String\n  username_ends_with: String\n  username_not_ends_with: String\n  type: String\n  type_not: String\n  type_in: [String!]\n  type_not_in: [String!]\n  type_lt: String\n  type_lte: String\n  type_gt: String\n  type_gte: String\n  type_contains: String\n  type_not_contains: String\n  type_starts_with: String\n  type_not_starts_with: String\n  type_ends_with: String\n  type_not_ends_with: String\n  serie_every: SerieUserWhereInput\n  serie_some: SerieUserWhereInput\n  serie_none: SerieUserWhereInput\n  film_every: FilmUserWhereInput\n  film_some: FilmUserWhereInput\n  film_none: FilmUserWhereInput\n  AND: [UserWhereInput!]\n  OR: [UserWhereInput!]\n  NOT: [UserWhereInput!]\n}\n\ninput UserWhereUniqueInput {\n  id: ID\n  email: String\n  username: String\n}\n`\n      }\n    "
      ]
    },
    "sourceType": "script",
    "mtime": 1553464596201
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Query.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Query.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Query.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Query.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "Query.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  users: function users(parent, args, ctx) {\n    return ctx.prisma.users({\n      orderBy: args.orderBy\n    });\n  },\n  user: function user(parent, _ref, ctx) {\n    var id = _ref.id;\n    return ctx.prisma.user({\n      id: id\n    });\n  },\n  amIAuth: function amIAuth(parent, args, ctx) {\n    var Authorization = ctx.request.get('Authorization');\n\n    if (Authorization) {\n      try {\n        var token = Authorization.replace('Bearer ', '');\n\n        var _jwt$verify = _jsonwebtoken.default.verify(token, process.env.API_SECRET),\n            userId = _jwt$verify.userId;\n\n        var me = ctx.prisma.user({\n          id: userId\n        });\n        return {\n          isAuth: true,\n          me: me\n        };\n      } catch (e) {\n        return {\n          isAuth: false\n        };\n      }\n    }\n\n    return {\n      isAuth: false\n    };\n  },\n  films: function films(parent, args, ctx) {\n    return ctx.prisma.films({});\n  },\n  film: function film(parent, args, ctx) {\n    return ctx.prisma.film({\n      id: args.idFilm\n    });\n  },\n  series: function series(parent, args, ctx) {\n    return ctx.prisma.series({});\n  },\n  serie: function serie(parent, args, ctx) {\n    return ctx.prisma.serie({\n      id: args.idSerie\n    });\n  },\n  filmsUser: function filmsUser(parent, args, ctx) {\n    var userId = (0, _utils.getUserId)(ctx);\n    return ctx.prisma.filmUsers({\n      where: {\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  filmsUsers: function filmsUsers(parent, args, ctx) {\n    return ctx.prisma.filmUsers({});\n  },\n  filmsUserNotFinished: function filmsUserNotFinished(parent, args, ctx) {\n    var userId = (0, _utils.getUserId)(ctx);\n    return ctx.prisma.filmUsers({\n      where: {\n        finish: false,\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  filmsUserFinished: function filmsUserFinished(parent, args, ctx) {\n    var userId = (0, _utils.getUserId)(ctx);\n    return ctx.prisma.filmUsers({\n      where: {\n        finish: true,\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  seriesUser: function seriesUser(parent, args, ctx) {\n    var userId = (0, _utils.getUserId)(ctx);\n    return ctx.prisma.serieUsers({\n      where: {\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  seriesUsers: function seriesUsers(parent, args, ctx) {\n    return ctx.prisma.serieUsers({});\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXJ5LmpzIl0sIm5hbWVzIjpbInVzZXJzIiwicGFyZW50IiwiYXJncyIsImN0eCIsInByaXNtYSIsIm9yZGVyQnkiLCJ1c2VyIiwiaWQiLCJhbUlBdXRoIiwiQXV0aG9yaXphdGlvbiIsInJlcXVlc3QiLCJnZXQiLCJ0b2tlbiIsInJlcGxhY2UiLCJqd3QiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiQVBJX1NFQ1JFVCIsInVzZXJJZCIsIm1lIiwiaXNBdXRoIiwiZSIsImZpbG1zIiwiZmlsbSIsImlkRmlsbSIsInNlcmllcyIsInNlcmllIiwiaWRTZXJpZSIsImZpbG1zVXNlciIsImZpbG1Vc2VycyIsIndoZXJlIiwiZmlsbXNVc2VycyIsImZpbG1zVXNlck5vdEZpbmlzaGVkIiwiZmluaXNoIiwiZmlsbXNVc2VyRmluaXNoZWQiLCJzZXJpZXNVc2VyIiwic2VyaWVVc2VycyIsInNlcmllc1VzZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7ZUFFZTtBQUNiQSxFQUFBQSxLQURhLGlCQUNOQyxNQURNLEVBQ0VDLElBREYsRUFDUUMsR0FEUixFQUNhO0FBQ3hCLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXSixLQUFYLENBQWlCO0FBQ3RCSyxNQUFBQSxPQUFPLEVBQUVILElBQUksQ0FBQ0c7QUFEUSxLQUFqQixDQUFQO0FBR0QsR0FMWTtBQU9iQyxFQUFBQSxJQVBhLGdCQU9QTCxNQVBPLFFBT1NFLEdBUFQsRUFPYztBQUFBLFFBQVhJLEVBQVcsUUFBWEEsRUFBVztBQUN6QixXQUFPSixHQUFHLENBQUNDLE1BQUosQ0FBV0UsSUFBWCxDQUFnQjtBQUFFQyxNQUFBQSxFQUFFLEVBQUZBO0FBQUYsS0FBaEIsQ0FBUDtBQUNELEdBVFk7QUFXYkMsRUFBQUEsT0FYYSxtQkFXSlAsTUFYSSxFQVdJQyxJQVhKLEVBV1VDLEdBWFYsRUFXZ0I7QUFDM0IsUUFBTU0sYUFBYSxHQUFHTixHQUFHLENBQUNPLE9BQUosQ0FBWUMsR0FBWixDQUFnQixlQUFoQixDQUF0Qjs7QUFDQSxRQUFJRixhQUFKLEVBQW1CO0FBQ2pCLFVBQUk7QUFDRixZQUFNRyxLQUFLLEdBQUdILGFBQWEsQ0FBQ0ksT0FBZCxDQUFzQixTQUF0QixFQUFpQyxFQUFqQyxDQUFkOztBQURFLDBCQUVpQkMsc0JBQUlDLE1BQUosQ0FBV0gsS0FBWCxFQUFrQkksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBRmpCO0FBQUEsWUFFTUMsTUFGTixlQUVNQSxNQUZOOztBQUdGLFlBQU1DLEVBQUUsR0FBR2pCLEdBQUcsQ0FBQ0MsTUFBSixDQUFXRSxJQUFYLENBQWdCO0FBQUVDLFVBQUFBLEVBQUUsRUFBRVk7QUFBTixTQUFoQixDQUFYO0FBQ0EsZUFBTztBQUFFRSxVQUFBQSxNQUFNLEVBQUUsSUFBVjtBQUFnQkQsVUFBQUEsRUFBRSxFQUFGQTtBQUFoQixTQUFQO0FBQ0QsT0FMRCxDQUtFLE9BQU9FLENBQVAsRUFBVTtBQUNWLGVBQU87QUFBRUQsVUFBQUEsTUFBTSxFQUFFO0FBQVYsU0FBUDtBQUNEO0FBQ0Y7O0FBQ0QsV0FBTztBQUFFQSxNQUFBQSxNQUFNLEVBQUU7QUFBVixLQUFQO0FBQ0QsR0F4Qlk7QUEwQmJFLEVBQUFBLEtBMUJhLGlCQTBCTnRCLE1BMUJNLEVBMEJFQyxJQTFCRixFQTBCUUMsR0ExQlIsRUEwQmE7QUFDeEIsV0FBT0EsR0FBRyxDQUFDQyxNQUFKLENBQVdtQixLQUFYLENBQWlCLEVBQWpCLENBQVA7QUFDRCxHQTVCWTtBQTZCYkMsRUFBQUEsSUE3QmEsZ0JBNkJQdkIsTUE3Qk8sRUE2QkNDLElBN0JELEVBNkJPQyxHQTdCUCxFQTZCWTtBQUN2QixXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBV29CLElBQVgsQ0FBZ0I7QUFDckJqQixNQUFBQSxFQUFFLEVBQUVMLElBQUksQ0FBQ3VCO0FBRFksS0FBaEIsQ0FBUDtBQUdELEdBakNZO0FBbUNiQyxFQUFBQSxNQW5DYSxrQkFtQ0x6QixNQW5DSyxFQW1DR0MsSUFuQ0gsRUFtQ1NDLEdBbkNULEVBbUNjO0FBQ3pCLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXc0IsTUFBWCxDQUFrQixFQUFsQixDQUFQO0FBQ0QsR0FyQ1k7QUFzQ2JDLEVBQUFBLEtBdENhLGlCQXNDTjFCLE1BdENNLEVBc0NFQyxJQXRDRixFQXNDUUMsR0F0Q1IsRUFzQ2E7QUFDeEIsV0FBT0EsR0FBRyxDQUFDQyxNQUFKLENBQVd1QixLQUFYLENBQWlCO0FBQ3RCcEIsTUFBQUEsRUFBRSxFQUFFTCxJQUFJLENBQUMwQjtBQURhLEtBQWpCLENBQVA7QUFHRCxHQTFDWTtBQTRDYkMsRUFBQUEsU0E1Q2EscUJBNENGNUIsTUE1Q0UsRUE0Q01DLElBNUNOLEVBNENZQyxHQTVDWixFQTRDaUI7QUFDNUIsUUFBTWdCLE1BQU0sR0FBRyxzQkFBVWhCLEdBQVYsQ0FBZjtBQUNBLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXMEIsU0FBWCxDQUFxQjtBQUMxQkMsTUFBQUEsS0FBSyxFQUFDO0FBQUN6QixRQUFBQSxJQUFJLEVBQUM7QUFBQ0MsVUFBQUEsRUFBRSxFQUFFWTtBQUFMO0FBQU47QUFEb0IsS0FBckIsQ0FBUDtBQUdELEdBakRZO0FBa0RiYSxFQUFBQSxVQWxEYSxzQkFrREQvQixNQWxEQyxFQWtET0MsSUFsRFAsRUFrRGFDLEdBbERiLEVBa0RrQjtBQUM3QixXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBVzBCLFNBQVgsQ0FBcUIsRUFBckIsQ0FBUDtBQUVELEdBckRZO0FBc0RiRyxFQUFBQSxvQkF0RGEsZ0NBc0RRaEMsTUF0RFIsRUFzRGdCQyxJQXREaEIsRUFzRHNCQyxHQXREdEIsRUFzRDJCO0FBQ3RDLFFBQU1nQixNQUFNLEdBQUcsc0JBQVVoQixHQUFWLENBQWY7QUFDQSxXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBVzBCLFNBQVgsQ0FBcUI7QUFDMUJDLE1BQUFBLEtBQUssRUFBRTtBQUNMRyxRQUFBQSxNQUFNLEVBQUUsS0FESDtBQUVMNUIsUUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFVBQUFBLEVBQUUsRUFBRVk7QUFEQTtBQUZEO0FBRG1CLEtBQXJCLENBQVA7QUFRRCxHQWhFWTtBQWlFYmdCLEVBQUFBLGlCQWpFYSw2QkFpRUtsQyxNQWpFTCxFQWlFYUMsSUFqRWIsRUFpRW1CQyxHQWpFbkIsRUFpRXdCO0FBQ25DLFFBQU1nQixNQUFNLEdBQUcsc0JBQVVoQixHQUFWLENBQWY7QUFDQSxXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBVzBCLFNBQVgsQ0FBcUI7QUFDMUJDLE1BQUFBLEtBQUssRUFBRTtBQUNMRyxRQUFBQSxNQUFNLEVBQUUsSUFESDtBQUVMNUIsUUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFVBQUFBLEVBQUUsRUFBRVk7QUFEQTtBQUZEO0FBRG1CLEtBQXJCLENBQVA7QUFRRCxHQTNFWTtBQTZFYmlCLEVBQUFBLFVBN0VhLHNCQTZFRG5DLE1BN0VDLEVBNkVPQyxJQTdFUCxFQTZFYUMsR0E3RWIsRUE2RWlCO0FBQzVCLFFBQU1nQixNQUFNLEdBQUcsc0JBQVVoQixHQUFWLENBQWY7QUFDQSxXQUFPQSxHQUFHLENBQUNDLE1BQUosQ0FBV2lDLFVBQVgsQ0FBc0I7QUFDM0JOLE1BQUFBLEtBQUssRUFBQztBQUFDekIsUUFBQUEsSUFBSSxFQUFDO0FBQUNDLFVBQUFBLEVBQUUsRUFBRVk7QUFBTDtBQUFOO0FBRHFCLEtBQXRCLENBQVA7QUFHRCxHQWxGWTtBQW1GYm1CLEVBQUFBLFdBbkZhLHVCQW1GQXJDLE1BbkZBLEVBbUZRQyxJQW5GUixFQW1GY0MsR0FuRmQsRUFtRmtCO0FBQzdCLFdBQU9BLEdBQUcsQ0FBQ0MsTUFBSixDQUFXaUMsVUFBWCxDQUFzQixFQUF0QixDQUFQO0FBRUQ7QUF0RlksQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9Bbmd1bGFyX1ByaXNtYS9hcGkvc3JjL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xuaW1wb3J0IHsgZ2V0VXNlcklkIH0gZnJvbSAnLi4vdXRpbHMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdXNlcnMgKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEudXNlcnMoe1xuICAgICAgb3JkZXJCeTogYXJncy5vcmRlckJ5XG4gICAgfSlcbiAgfSxcblxuICB1c2VyIChwYXJlbnQsIHsgaWQgfSwgY3R4KSB7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEudXNlcih7IGlkIH0pXG4gIH0sXG5cbiAgYW1JQXV0aCAocGFyZW50LCBhcmdzLCBjdHgsKSB7XG4gICAgY29uc3QgQXV0aG9yaXphdGlvbiA9IGN0eC5yZXF1ZXN0LmdldCgnQXV0aG9yaXphdGlvbicpXG4gICAgaWYgKEF1dGhvcml6YXRpb24pIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHRva2VuID0gQXV0aG9yaXphdGlvbi5yZXBsYWNlKCdCZWFyZXIgJywgJycpXG4gICAgICAgIGNvbnN0IHsgdXNlcklkIH0gPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5BUElfU0VDUkVUKVxuICAgICAgICBjb25zdCBtZSA9IGN0eC5wcmlzbWEudXNlcih7IGlkOiB1c2VySWQgfSlcbiAgICAgICAgcmV0dXJuIHsgaXNBdXRoOiB0cnVlLCBtZSB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiB7IGlzQXV0aDogZmFsc2UgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBpc0F1dGg6IGZhbHNlIH1cbiAgfSxcblxuICBmaWxtcyAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5maWxtcyh7fSk7XG4gIH0sXG4gIGZpbG0gKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuZmlsbSh7XG4gICAgICBpZDogYXJncy5pZEZpbG1cbiAgICB9KVxuICB9LFxuXG4gIHNlcmllcyAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5zZXJpZXMoe30pO1xuICB9LFxuICBzZXJpZSAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5zZXJpZSh7XG4gICAgICBpZDogYXJncy5pZFNlcmllXG4gICAgfSlcbiAgfSxcblxuICBmaWxtc1VzZXIgKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgY29uc3QgdXNlcklkID0gZ2V0VXNlcklkKGN0eCk7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuZmlsbVVzZXJzKHtcbiAgICAgIHdoZXJlOnt1c2VyOntpZDogdXNlcklkfX1cbiAgICB9KTtcbiAgfSxcbiAgZmlsbXNVc2VycyAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5maWxtVXNlcnMoe1xuICAgIH0pO1xuICB9LFxuICBmaWxtc1VzZXJOb3RGaW5pc2hlZChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpO1xuICAgIHJldHVybiBjdHgucHJpc21hLmZpbG1Vc2Vycyh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBmaW5pc2g6IGZhbHNlLFxuICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgaWQ6IHVzZXJJZFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIGZpbG1zVXNlckZpbmlzaGVkKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgY29uc3QgdXNlcklkID0gZ2V0VXNlcklkKGN0eCk7XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuZmlsbVVzZXJzKHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIGZpbmlzaDogdHJ1ZSxcbiAgICAgICAgdXNlcjoge1xuICAgICAgICAgIGlkOiB1c2VySWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIHNlcmllc1VzZXIgKHBhcmVudCwgYXJncywgY3R4KXtcbiAgICBjb25zdCB1c2VySWQgPSBnZXRVc2VySWQoY3R4KTtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5zZXJpZVVzZXJzKHtcbiAgICAgIHdoZXJlOnt1c2VyOntpZDogdXNlcklkfX1cbiAgICB9KTtcbiAgfSxcbiAgc2VyaWVzVXNlcnMgKHBhcmVudCwgYXJncywgY3R4KXtcbiAgICByZXR1cm4gY3R4LnByaXNtYS5zZXJpZVVzZXJzKHtcbiAgICB9KTtcbiAgfSxcblxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Query.js"
      ],
      "names": [
        "users",
        "parent",
        "args",
        "ctx",
        "prisma",
        "orderBy",
        "user",
        "id",
        "amIAuth",
        "Authorization",
        "request",
        "get",
        "token",
        "replace",
        "jwt",
        "verify",
        "process",
        "env",
        "API_SECRET",
        "userId",
        "me",
        "isAuth",
        "e",
        "films",
        "film",
        "idFilm",
        "series",
        "serie",
        "idSerie",
        "filmsUser",
        "filmUsers",
        "where",
        "filmsUsers",
        "filmsUserNotFinished",
        "finish",
        "filmsUserFinished",
        "seriesUser",
        "serieUsers",
        "seriesUsers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;eAEe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,GADR,EACa;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAWJ,KAAX,CAAiB;AACtBK,MAAAA,OAAO,EAAEH,IAAI,CAACG;AADQ,KAAjB,CAAP;AAGD,GALY;AAObC,EAAAA,IAPa,gBAOPL,MAPO,QAOSE,GAPT,EAOc;AAAA,QAAXI,EAAW,QAAXA,EAAW;AACzB,WAAOJ,GAAG,CAACC,MAAJ,CAAWE,IAAX,CAAgB;AAAEC,MAAAA,EAAE,EAAFA;AAAF,KAAhB,CAAP;AACD,GATY;AAWbC,EAAAA,OAXa,mBAWJP,MAXI,EAWIC,IAXJ,EAWUC,GAXV,EAWgB;AAC3B,QAAMM,aAAa,GAAGN,GAAG,CAACO,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,CAAtB;;AACA,QAAIF,aAAJ,EAAmB;AACjB,UAAI;AACF,YAAMG,KAAK,GAAGH,aAAa,CAACI,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAd;;AADE,0BAEiBC,sBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFjB;AAAA,YAEMC,MAFN,eAEMA,MAFN;;AAGF,YAAMC,EAAE,GAAGjB,GAAG,CAACC,MAAJ,CAAWE,IAAX,CAAgB;AAAEC,UAAAA,EAAE,EAAEY;AAAN,SAAhB,CAAX;AACA,eAAO;AAAEE,UAAAA,MAAM,EAAE,IAAV;AAAgBD,UAAAA,EAAE,EAAFA;AAAhB,SAAP;AACD,OALD,CAKE,OAAOE,CAAP,EAAU;AACV,eAAO;AAAED,UAAAA,MAAM,EAAE;AAAV,SAAP;AACD;AACF;;AACD,WAAO;AAAEA,MAAAA,MAAM,EAAE;AAAV,KAAP;AACD,GAxBY;AA0BbE,EAAAA,KA1Ba,iBA0BNtB,MA1BM,EA0BEC,IA1BF,EA0BQC,GA1BR,EA0Ba;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAWmB,KAAX,CAAiB,EAAjB,CAAP;AACD,GA5BY;AA6BbC,EAAAA,IA7Ba,gBA6BPvB,MA7BO,EA6BCC,IA7BD,EA6BOC,GA7BP,EA6BY;AACvB,WAAOA,GAAG,CAACC,MAAJ,CAAWoB,IAAX,CAAgB;AACrBjB,MAAAA,EAAE,EAAEL,IAAI,CAACuB;AADY,KAAhB,CAAP;AAGD,GAjCY;AAmCbC,EAAAA,MAnCa,kBAmCLzB,MAnCK,EAmCGC,IAnCH,EAmCSC,GAnCT,EAmCc;AACzB,WAAOA,GAAG,CAACC,MAAJ,CAAWsB,MAAX,CAAkB,EAAlB,CAAP;AACD,GArCY;AAsCbC,EAAAA,KAtCa,iBAsCN1B,MAtCM,EAsCEC,IAtCF,EAsCQC,GAtCR,EAsCa;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAWuB,KAAX,CAAiB;AACtBpB,MAAAA,EAAE,EAAEL,IAAI,CAAC0B;AADa,KAAjB,CAAP;AAGD,GA1CY;AA4CbC,EAAAA,SA5Ca,qBA4CF5B,MA5CE,EA4CMC,IA5CN,EA4CYC,GA5CZ,EA4CiB;AAC5B,QAAMgB,MAAM,GAAG,sBAAUhB,GAAV,CAAf;AACA,WAAOA,GAAG,CAACC,MAAJ,CAAW0B,SAAX,CAAqB;AAC1BC,MAAAA,KAAK,EAAC;AAACzB,QAAAA,IAAI,EAAC;AAACC,UAAAA,EAAE,EAAEY;AAAL;AAAN;AADoB,KAArB,CAAP;AAGD,GAjDY;AAkDba,EAAAA,UAlDa,sBAkDD/B,MAlDC,EAkDOC,IAlDP,EAkDaC,GAlDb,EAkDkB;AAC7B,WAAOA,GAAG,CAACC,MAAJ,CAAW0B,SAAX,CAAqB,EAArB,CAAP;AAED,GArDY;AAsDbG,EAAAA,oBAtDa,gCAsDQhC,MAtDR,EAsDgBC,IAtDhB,EAsDsBC,GAtDtB,EAsD2B;AACtC,QAAMgB,MAAM,GAAG,sBAAUhB,GAAV,CAAf;AACA,WAAOA,GAAG,CAACC,MAAJ,CAAW0B,SAAX,CAAqB;AAC1BC,MAAAA,KAAK,EAAE;AACLG,QAAAA,MAAM,EAAE,KADH;AAEL5B,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAEY;AADA;AAFD;AADmB,KAArB,CAAP;AAQD,GAhEY;AAiEbgB,EAAAA,iBAjEa,6BAiEKlC,MAjEL,EAiEaC,IAjEb,EAiEmBC,GAjEnB,EAiEwB;AACnC,QAAMgB,MAAM,GAAG,sBAAUhB,GAAV,CAAf;AACA,WAAOA,GAAG,CAACC,MAAJ,CAAW0B,SAAX,CAAqB;AAC1BC,MAAAA,KAAK,EAAE;AACLG,QAAAA,MAAM,EAAE,IADH;AAEL5B,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAEY;AADA;AAFD;AADmB,KAArB,CAAP;AAQD,GA3EY;AA6EbiB,EAAAA,UA7Ea,sBA6EDnC,MA7EC,EA6EOC,IA7EP,EA6EaC,GA7Eb,EA6EiB;AAC5B,QAAMgB,MAAM,GAAG,sBAAUhB,GAAV,CAAf;AACA,WAAOA,GAAG,CAACC,MAAJ,CAAWiC,UAAX,CAAsB;AAC3BN,MAAAA,KAAK,EAAC;AAACzB,QAAAA,IAAI,EAAC;AAACC,UAAAA,EAAE,EAAEY;AAAL;AAAN;AADqB,KAAtB,CAAP;AAGD,GAlFY;AAmFbmB,EAAAA,WAnFa,uBAmFArC,MAnFA,EAmFQC,IAnFR,EAmFcC,GAnFd,EAmFkB;AAC7B,WAAOA,GAAG,CAACC,MAAJ,CAAWiC,UAAX,CAAsB,EAAtB,CAAP;AAED;AAtFY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\nimport { getUserId } from '../utils'\n\nexport default {\n  users (parent, args, ctx) {\n    return ctx.prisma.users({\n      orderBy: args.orderBy\n    })\n  },\n\n  user (parent, { id }, ctx) {\n    return ctx.prisma.user({ id })\n  },\n\n  amIAuth (parent, args, ctx,) {\n    const Authorization = ctx.request.get('Authorization')\n    if (Authorization) {\n      try {\n        const token = Authorization.replace('Bearer ', '')\n        const { userId } = jwt.verify(token, process.env.API_SECRET)\n        const me = ctx.prisma.user({ id: userId })\n        return { isAuth: true, me }\n      } catch (e) {\n        return { isAuth: false }\n      }\n    }\n    return { isAuth: false }\n  },\n\n  films (parent, args, ctx) {\n    return ctx.prisma.films({});\n  },\n  film (parent, args, ctx) {\n    return ctx.prisma.film({\n      id: args.idFilm\n    })\n  },\n\n  series (parent, args, ctx) {\n    return ctx.prisma.series({});\n  },\n  serie (parent, args, ctx) {\n    return ctx.prisma.serie({\n      id: args.idSerie\n    })\n  },\n\n  filmsUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    return ctx.prisma.filmUsers({\n      where:{user:{id: userId}}\n    });\n  },\n  filmsUsers (parent, args, ctx) {\n    return ctx.prisma.filmUsers({\n    });\n  },\n  filmsUserNotFinished(parent, args, ctx) {\n    const userId = getUserId(ctx);\n    return ctx.prisma.filmUsers({\n      where: {\n        finish: false,\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n  filmsUserFinished(parent, args, ctx) {\n    const userId = getUserId(ctx);\n    return ctx.prisma.filmUsers({\n      where: {\n        finish: true,\n        user: {\n          id: userId\n        }\n      }\n    });\n  },\n\n  seriesUser (parent, args, ctx){\n    const userId = getUserId(ctx);\n    return ctx.prisma.serieUsers({\n      where:{user:{id: userId}}\n    });\n  },\n  seriesUsers (parent, args, ctx){\n    return ctx.prisma.serieUsers({\n    });\n  },\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553465983680
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/utils.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserId = getUserId;\nexports.sleep = sleep;\nexports.AuthError = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _fs = require(\"fs\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction getUserId(ctx) {\n  var Authorization = ctx.request.get('Authorization');\n\n  if (Authorization) {\n    var token = Authorization.replace('Bearer ', '');\n\n    var _jwt$verify = _jsonwebtoken.default.verify(token, process.env.API_SECRET),\n        userId = _jwt$verify.userId;\n\n    return userId;\n  }\n\n  throw new AuthError();\n}\n\nvar AuthError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AuthError, _Error);\n\n  function AuthError() {\n    _classCallCheck(this, AuthError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AuthError).call(this, 'Not authorized'));\n  }\n\n  return AuthError;\n}(_wrapNativeSuper(Error));\n\nexports.AuthError = AuthError;\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImdldFVzZXJJZCIsImN0eCIsIkF1dGhvcml6YXRpb24iLCJyZXF1ZXN0IiwiZ2V0IiwidG9rZW4iLCJyZXBsYWNlIiwiand0IiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkFQSV9TRUNSRVQiLCJ1c2VySWQiLCJBdXRoRXJyb3IiLCJFcnJvciIsInNsZWVwIiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVPLFNBQVNBLFNBQVQsQ0FBb0JDLEdBQXBCLEVBQXlCO0FBQzlCLE1BQU1DLGFBQWEsR0FBR0QsR0FBRyxDQUFDRSxPQUFKLENBQVlDLEdBQVosQ0FBZ0IsZUFBaEIsQ0FBdEI7O0FBQ0EsTUFBSUYsYUFBSixFQUFtQjtBQUNqQixRQUFNRyxLQUFLLEdBQUdILGFBQWEsQ0FBQ0ksT0FBZCxDQUFzQixTQUF0QixFQUFpQyxFQUFqQyxDQUFkOztBQURpQixzQkFFRUMsc0JBQUlDLE1BQUosQ0FBV0gsS0FBWCxFQUFrQkksT0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQTlCLENBRkY7QUFBQSxRQUVUQyxNQUZTLGVBRVRBLE1BRlM7O0FBR2pCLFdBQU9BLE1BQVA7QUFDRDs7QUFDRCxRQUFNLElBQUlDLFNBQUosRUFBTjtBQUNEOztJQUVZQSxTOzs7OztBQUNYLHVCQUFlO0FBQUE7O0FBQUEsa0ZBQ1AsZ0JBRE87QUFFZDs7O21CQUg0QkMsSzs7OztBQU14QixTQUFTQyxLQUFULENBQWdCQyxFQUFoQixFQUFvQjtBQUN6QixTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFBQyxPQUFPO0FBQUEsV0FBSUMsVUFBVSxDQUFDRCxPQUFELEVBQVVGLEVBQVYsQ0FBZDtBQUFBLEdBQW5CLENBQVA7QUFDRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9Bbmd1bGFyX1ByaXNtYS9hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXG5pbXBvcnQge2NyZWF0ZVdyaXRlU3RyZWFtfSBmcm9tICdmcydcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJJZCAoY3R4KSB7XG4gIGNvbnN0IEF1dGhvcml6YXRpb24gPSBjdHgucmVxdWVzdC5nZXQoJ0F1dGhvcml6YXRpb24nKVxuICBpZiAoQXV0aG9yaXphdGlvbikge1xuICAgIGNvbnN0IHRva2VuID0gQXV0aG9yaXphdGlvbi5yZXBsYWNlKCdCZWFyZXIgJywgJycpXG4gICAgY29uc3QgeyB1c2VySWQgfSA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkFQSV9TRUNSRVQpXG4gICAgcmV0dXJuIHVzZXJJZFxuICB9XG4gIHRocm93IG5ldyBBdXRoRXJyb3IoKVxufVxuXG5leHBvcnQgY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoJ05vdCBhdXRob3JpemVkJylcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2xlZXAgKG1zKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "getUserId",
        "ctx",
        "Authorization",
        "request",
        "get",
        "token",
        "replace",
        "jwt",
        "verify",
        "process",
        "env",
        "API_SECRET",
        "userId",
        "AuthError",
        "Error",
        "sleep",
        "ms",
        "Promise",
        "resolve",
        "setTimeout"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,SAAT,CAAoBC,GAApB,EAAyB;AAC9B,MAAMC,aAAa,GAAGD,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAgB,eAAhB,CAAtB;;AACA,MAAIF,aAAJ,EAAmB;AACjB,QAAMG,KAAK,GAAGH,aAAa,CAACI,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAd;;AADiB,sBAEEC,sBAAIC,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAFF;AAAA,QAETC,MAFS,eAETA,MAFS;;AAGjB,WAAOA,MAAP;AACD;;AACD,QAAM,IAAIC,SAAJ,EAAN;AACD;;IAEYA,S;;;;;AACX,uBAAe;AAAA;;AAAA,kFACP,gBADO;AAEd;;;mBAH4BC,K;;;;AAMxB,SAASC,KAAT,CAAgBC,EAAhB,EAAoB;AACzB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAP;AACD",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\nimport {createWriteStream} from 'fs'\n\nexport function getUserId (ctx) {\n  const Authorization = ctx.request.get('Authorization')\n  if (Authorization) {\n    const token = Authorization.replace('Bearer ', '')\n    const { userId } = jwt.verify(token, process.env.API_SECRET)\n    return userId\n  }\n  throw new AuthError()\n}\n\nexport class AuthError extends Error {\n  constructor () {\n    super('Not authorized')\n  }\n}\n\nexport function sleep (ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552951510486
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Serie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Serie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Serie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Serie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "Serie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  saisons: function saisons(parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).saisons();\n  },\n  episodes: function episodes(parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).episodes();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcmllLmpzIl0sIm5hbWVzIjpbInNhaXNvbnMiLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsInNlcmllIiwiaWQiLCJlcGlzb2RlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsT0FEYSxtQkFDSkMsTUFESSxFQUNJQyxJQURKLEVBQ1VDLE9BRFYsRUFDbUI7QUFDOUIsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBcUI7QUFDMUJDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURlLEtBQXJCLEVBRUpOLE9BRkksRUFBUDtBQUdELEdBTFk7QUFPYk8sRUFBQUEsUUFQYSxvQkFPSE4sTUFQRyxFQU9LQyxJQVBMLEVBT1dDLE9BUFgsRUFPb0I7QUFDL0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBcUI7QUFDMUJDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURlLEtBQXJCLEVBRUpDLFFBRkksRUFBUDtBQUdEO0FBWFksQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9Bbmd1bGFyX1ByaXNtYS9hcGkvc3JjL3Jlc29sdmVycyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgc2Fpc29ucyAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLnNlcmllKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5zYWlzb25zKClcbiAgfSxcblxuICBlcGlzb2RlcyAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLnNlcmllKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5lcGlzb2RlcygpXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Serie.js"
      ],
      "names": [
        "saisons",
        "parent",
        "args",
        "context",
        "prisma",
        "serie",
        "id",
        "episodes"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,OADa,mBACJC,MADI,EACIC,IADJ,EACUC,OADV,EACmB;AAC9B,WAAOA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB;AAC1BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADe,KAArB,EAEJN,OAFI,EAAP;AAGD,GALY;AAObO,EAAAA,QAPa,oBAOHN,MAPG,EAOKC,IAPL,EAOWC,OAPX,EAOoB;AAC/B,WAAOA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqB;AAC1BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADe,KAArB,EAEJC,QAFI,EAAP;AAGD;AAXY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  saisons (parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).saisons()\n  },\n\n  episodes (parent, args, context) {\n    return context.prisma.serie({\n      id: parent.id\n    }).episodes()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551809966910
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Saison.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Saison.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Saison.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Saison.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "Saison.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  serie: function serie(parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).serie();\n  },\n  episodes: function episodes(parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).episodes();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNhaXNvbi5qcyJdLCJuYW1lcyI6WyJzZXJpZSIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwic2Fpc29uIiwiaWQiLCJlcGlzb2RlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsS0FEYSxpQkFDTkMsTUFETSxFQUNFQyxJQURGLEVBQ1FDLE9BRFIsRUFDaUI7QUFDNUIsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLE1BQWYsQ0FBc0I7QUFDM0JDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURnQixLQUF0QixFQUVKTixLQUZJLEVBQVA7QUFHRCxHQUxZO0FBTWJPLEVBQUFBLFFBTmEsb0JBTUhOLE1BTkcsRUFNS0MsSUFOTCxFQU1XQyxPQU5YLEVBTW9CO0FBQy9CLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxNQUFmLENBQXNCO0FBQzNCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEZ0IsS0FBdEIsRUFFSkMsUUFGSSxFQUFQO0FBR0Q7QUFWWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL0FuZ3VsYXJfUHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBzZXJpZSAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLnNhaXNvbih7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkuc2VyaWUoKVxuICB9LFxuICBlcGlzb2RlcyAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLnNhaXNvbih7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkuZXBpc29kZXMoKVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Saison.js"
      ],
      "names": [
        "serie",
        "parent",
        "args",
        "context",
        "prisma",
        "saison",
        "id",
        "episodes"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,OADR,EACiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,MAAf,CAAsB;AAC3BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADgB,KAAtB,EAEJN,KAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,QANa,oBAMHN,MANG,EAMKC,IANL,EAMWC,OANX,EAMoB;AAC/B,WAAOA,OAAO,CAACC,MAAR,CAAeC,MAAf,CAAsB;AAC3BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADgB,KAAtB,EAEJC,QAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  serie (parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).serie()\n  },\n  episodes (parent, args, context) {\n    return context.prisma.saison({\n      id: parent.id\n    }).episodes()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813543414
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Episode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Episode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Episode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Episode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "Episode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  serie: function serie(parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).serie();\n  },\n  saison: function saison(parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).saison();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVwaXNvZGUuanMiXSwibmFtZXMiOlsic2VyaWUiLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsImVwaXNvZGUiLCJpZCIsInNhaXNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsS0FEYSxpQkFDTkMsTUFETSxFQUNFQyxJQURGLEVBQ1FDLE9BRFIsRUFDaUI7QUFDNUIsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLE9BQWYsQ0FBdUI7QUFDNUJDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURpQixLQUF2QixFQUVKTixLQUZJLEVBQVA7QUFHRCxHQUxZO0FBTWJPLEVBQUFBLE1BTmEsa0JBTUxOLE1BTkssRUFNR0MsSUFOSCxFQU1TQyxPQU5ULEVBTWtCO0FBQzdCLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxPQUFmLENBQXVCO0FBQzVCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEaUIsS0FBdkIsRUFFSkMsTUFGSSxFQUFQO0FBR0Q7QUFWWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL0FuZ3VsYXJfUHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBzZXJpZSAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLmVwaXNvZGUoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLnNlcmllKClcbiAgfSxcbiAgc2Fpc29uIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuZXBpc29kZSh7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkuc2Fpc29uKClcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Episode.js"
      ],
      "names": [
        "serie",
        "parent",
        "args",
        "context",
        "prisma",
        "episode",
        "id",
        "saison"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,OADR,EACiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,CAAuB;AAC5BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADiB,KAAvB,EAEJN,KAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,MANa,kBAMLN,MANK,EAMGC,IANH,EAMSC,OANT,EAMkB;AAC7B,WAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,CAAuB;AAC5BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADiB,KAAvB,EAEJC,MAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  serie (parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).serie()\n  },\n  saison (parent, args, context) {\n    return context.prisma.episode({\n      id: parent.id\n    }).saison()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813654503
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "FilmUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  film: function film(parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).film();\n  },\n  user: function user(parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).user();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpbG1Vc2VyLmpzIl0sIm5hbWVzIjpbImZpbG0iLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsImZpbG1Vc2VyIiwiaWQiLCJ1c2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxJQURhLGdCQUNQQyxNQURPLEVBQ0NDLElBREQsRUFDT0MsT0FEUCxFQUNnQjtBQUMzQixXQUFPQSxPQUFPLENBQUNDLE1BQVIsQ0FBZUMsUUFBZixDQUF3QjtBQUM3QkMsTUFBQUEsRUFBRSxFQUFFTCxNQUFNLENBQUNLO0FBRGtCLEtBQXhCLEVBRUpOLElBRkksRUFBUDtBQUdELEdBTFk7QUFNYk8sRUFBQUEsSUFOYSxnQkFNUE4sTUFOTyxFQU1DQyxJQU5ELEVBTU9DLE9BTlAsRUFNZ0I7QUFDM0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLFFBQWYsQ0FBd0I7QUFDN0JDLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURrQixLQUF4QixFQUVKQyxJQUZJLEVBQVA7QUFHRDtBQVZZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvQW5ndWxhcl9QcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGZpbG0gKHBhcmVudCwgYXJncywgY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnByaXNtYS5maWxtVXNlcih7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkuZmlsbSgpXG4gIH0sXG4gIHVzZXIgKHBhcmVudCwgYXJncywgY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnByaXNtYS5maWxtVXNlcih7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkudXNlcigpXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "FilmUser.js"
      ],
      "names": [
        "film",
        "parent",
        "args",
        "context",
        "prisma",
        "filmUser",
        "id",
        "user"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,IADa,gBACPC,MADO,EACCC,IADD,EACOC,OADP,EACgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB;AAC7BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADkB,KAAxB,EAEJN,IAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,IANa,gBAMPN,MANO,EAMCC,IAND,EAMOC,OANP,EAMgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB;AAC7BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADkB,KAAxB,EAEJC,IAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  film (parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).film()\n  },\n  user (parent, args, context) {\n    return context.prisma.filmUser({\n      id: parent.id\n    }).user()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551442195778
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/SerieUser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/SerieUser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/SerieUser.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/SerieUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "SerieUser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  serie: function serie(parent, args, context) {\n    return context.prisma.serieUser({\n      id: parent.id\n    }).serie();\n  },\n  user: function user(parent, args, context) {\n    return context.prisma.SerieUser({\n      id: parent.id\n    }).user();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcmllVXNlci5qcyJdLCJuYW1lcyI6WyJzZXJpZSIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwic2VyaWVVc2VyIiwiaWQiLCJ1c2VyIiwiU2VyaWVVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxLQURhLGlCQUNOQyxNQURNLEVBQ0VDLElBREYsRUFDUUMsT0FEUixFQUNpQjtBQUM1QixXQUFPQSxPQUFPLENBQUNDLE1BQVIsQ0FBZUMsU0FBZixDQUF5QjtBQUM5QkMsTUFBQUEsRUFBRSxFQUFFTCxNQUFNLENBQUNLO0FBRG1CLEtBQXpCLEVBRUpOLEtBRkksRUFBUDtBQUdELEdBTFk7QUFNYk8sRUFBQUEsSUFOYSxnQkFNUE4sTUFOTyxFQU1DQyxJQU5ELEVBTU9DLE9BTlAsRUFNZ0I7QUFDM0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVJLFNBQWYsQ0FBeUI7QUFDOUJGLE1BQUFBLEVBQUUsRUFBRUwsTUFBTSxDQUFDSztBQURtQixLQUF6QixFQUVKQyxJQUZJLEVBQVA7QUFHRDtBQVZZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvQW5ndWxhcl9QcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIHNlcmllIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuc2VyaWVVc2VyKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5zZXJpZSgpXG4gIH0sXG4gIHVzZXIgKHBhcmVudCwgYXJncywgY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnByaXNtYS5TZXJpZVVzZXIoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLnVzZXIoKVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "SerieUser.js"
      ],
      "names": [
        "serie",
        "parent",
        "args",
        "context",
        "prisma",
        "serieUser",
        "id",
        "user",
        "SerieUser"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KADa,iBACNC,MADM,EACEC,IADF,EACQC,OADR,EACiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,SAAf,CAAyB;AAC9BC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADmB,KAAzB,EAEJN,KAFI,EAAP;AAGD,GALY;AAMbO,EAAAA,IANa,gBAMPN,MANO,EAMCC,IAND,EAMOC,OANP,EAMgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeI,SAAf,CAAyB;AAC9BF,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADmB,KAAzB,EAEJC,IAFI,EAAP;AAGD;AAVY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  serie (parent, args, context) {\n    return context.prisma.serieUser({\n      id: parent.id\n    }).serie()\n  },\n  user (parent, args, context) {\n    return context.prisma.SerieUser({\n      id: parent.id\n    }).user()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551813750573
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  film: function film(parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).film();\n  },\n  serie: function serie(parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).serie();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiZmlsbSIsInBhcmVudCIsImFyZ3MiLCJjb250ZXh0IiwicHJpc21hIiwidXNlciIsImlkIiwic2VyaWUiXSwibWFwcGluZ3MiOiI7Ozs7OztlQUFlO0FBQ2JBLEVBQUFBLElBRGEsZ0JBQ1BDLE1BRE8sRUFDQ0MsSUFERCxFQUNPQyxPQURQLEVBQ2dCO0FBQzNCLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxJQUFmLENBQW9CO0FBQ3pCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEYyxLQUFwQixFQUVKTixJQUZJLEVBQVA7QUFHRCxHQUxZO0FBT2JPLEVBQUFBLEtBUGEsaUJBT05OLE1BUE0sRUFPRUMsSUFQRixFQU9RQyxPQVBSLEVBT2lCO0FBQzVCLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxJQUFmLENBQW9CO0FBQ3pCQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEYyxLQUFwQixFQUVKQyxLQUZJLEVBQVA7QUFHRDtBQVhZLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3ZsYWRpc2xhdnZvcm9ieWV2L0Rlc2t0b3AvQW5ndWxhcl9QcmlzbWEvYXBpL3NyYy9yZXNvbHZlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGZpbG0gKHBhcmVudCwgYXJncywgY29udGV4dCkge1xuICAgIHJldHVybiBjb250ZXh0LnByaXNtYS51c2VyKHtcbiAgICAgIGlkOiBwYXJlbnQuaWRcbiAgICB9KS5maWxtKClcbiAgfSxcblxuICBzZXJpZSAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLnVzZXIoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLnNlcmllKClcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "film",
        "parent",
        "args",
        "context",
        "prisma",
        "user",
        "id",
        "serie"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,IADa,gBACPC,MADO,EACCC,IADD,EACOC,OADP,EACgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoB;AACzBC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADc,KAApB,EAEJN,IAFI,EAAP;AAGD,GALY;AAObO,EAAAA,KAPa,iBAONN,MAPM,EAOEC,IAPF,EAOQC,OAPR,EAOiB;AAC5B,WAAOA,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoB;AACzBC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AADc,KAApB,EAEJC,KAFI,EAAP;AAGD;AAXY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  film (parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).film()\n  },\n\n  serie (parent, args, context) {\n    return context.prisma.user({\n      id: parent.id\n    }).serie()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551809730368
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  signup: function () {\n    var _signup = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, args, ctx) {\n      var password, user;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _bcryptjs.default.hash(args.password, 10);\n\n            case 2:\n              password = _context.sent;\n              _context.next = 5;\n              return ctx.prisma.createUser({\n                email: args.email,\n                username: args.username,\n                password: password,\n                type: \"Normal\"\n              });\n\n            case 5:\n              user = _context.sent;\n              return _context.abrupt(\"return\", {\n                token: _jsonwebtoken.default.sign({\n                  userId: user.id\n                }, process.env.API_SECRET),\n                user: user\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function signup(_x, _x2, _x3) {\n      return _signup.apply(this, arguments);\n    }\n\n    return signup;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(parent, _ref, ctx) {\n      var email, password, user, valid;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              email = _ref.email, password = _ref.password;\n              _context2.next = 3;\n              return ctx.prisma.user({\n                email: email\n              });\n\n            case 3:\n              user = _context2.sent;\n\n              if (user) {\n                _context2.next = 6;\n                break;\n              }\n\n              throw new Error('Invalid email');\n\n            case 6:\n              _context2.next = 8;\n              return _bcryptjs.default.compare(password, user.password);\n\n            case 8:\n              valid = _context2.sent;\n\n              if (valid) {\n                _context2.next = 11;\n                break;\n              }\n\n              throw new Error('Invalid password');\n\n            case 11:\n              return _context2.abrupt(\"return\", {\n                token: _jsonwebtoken.default.sign({\n                  userId: user.id\n                }, process.env.API_SECRET),\n                user: user\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function login(_x4, _x5, _x6) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsic2lnbnVwIiwicGFyZW50IiwiYXJncyIsImN0eCIsImJjcnlwdCIsImhhc2giLCJwYXNzd29yZCIsInByaXNtYSIsImNyZWF0ZVVzZXIiLCJlbWFpbCIsInVzZXJuYW1lIiwidHlwZSIsInVzZXIiLCJ0b2tlbiIsImp3dCIsInNpZ24iLCJ1c2VySWQiLCJpZCIsInByb2Nlc3MiLCJlbnYiLCJBUElfU0VDUkVUIiwibG9naW4iLCJFcnJvciIsImNvbXBhcmUiLCJ2YWxpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztlQUVlO0FBQ1BBLEVBQUFBLE1BRE87QUFBQTtBQUFBO0FBQUEsNkNBQ0NDLE1BREQsRUFDU0MsSUFEVCxFQUNlQyxHQURmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBRVlDLGtCQUFPQyxJQUFQLENBQVlILElBQUksQ0FBQ0ksUUFBakIsRUFBMkIsRUFBM0IsQ0FGWjs7QUFBQTtBQUVMQSxjQUFBQSxRQUZLO0FBQUE7QUFBQSxxQkFHUUgsR0FBRyxDQUFDSSxNQUFKLENBQVdDLFVBQVgsQ0FBc0I7QUFDdkNDLGdCQUFBQSxLQUFLLEVBQUVQLElBQUksQ0FBQ08sS0FEMkI7QUFFdkNDLGdCQUFBQSxRQUFRLEVBQUVSLElBQUksQ0FBQ1EsUUFGd0I7QUFHdkNKLGdCQUFBQSxRQUFRLEVBQUVBLFFBSDZCO0FBSXZDSyxnQkFBQUEsSUFBSSxFQUFFO0FBSmlDLGVBQXRCLENBSFI7O0FBQUE7QUFHTEMsY0FBQUEsSUFISztBQUFBLCtDQVVKO0FBQ0xDLGdCQUFBQSxLQUFLLEVBQUVDLHNCQUFJQyxJQUFKLENBQVM7QUFBRUMsa0JBQUFBLE1BQU0sRUFBRUosSUFBSSxDQUFDSztBQUFmLGlCQUFULEVBQThCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsVUFBMUMsQ0FERjtBQUVMUixnQkFBQUEsSUFBSSxFQUFKQTtBQUZLLGVBVkk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFnQlBTLEVBQUFBLEtBaEJPO0FBQUE7QUFBQTtBQUFBLDhDQWdCQXBCLE1BaEJBLFFBZ0I2QkUsR0FoQjdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWdCVU0sY0FBQUEsS0FoQlYsUUFnQlVBLEtBaEJWLEVBZ0JpQkgsUUFoQmpCLFFBZ0JpQkEsUUFoQmpCO0FBQUE7QUFBQSxxQkFpQlFILEdBQUcsQ0FBQ0ksTUFBSixDQUFXSyxJQUFYLENBQWdCO0FBQUVILGdCQUFBQSxLQUFLLEVBQUxBO0FBQUYsZUFBaEIsQ0FqQlI7O0FBQUE7QUFpQkxHLGNBQUFBLElBakJLOztBQUFBLGtCQWtCTkEsSUFsQk07QUFBQTtBQUFBO0FBQUE7O0FBQUEsb0JBbUJILElBQUlVLEtBQUosQ0FBVSxlQUFWLENBbkJHOztBQUFBO0FBQUE7QUFBQSxxQkFzQlNsQixrQkFBT21CLE9BQVAsQ0FBZWpCLFFBQWYsRUFBeUJNLElBQUksQ0FBQ04sUUFBOUIsQ0F0QlQ7O0FBQUE7QUFzQkxrQixjQUFBQSxLQXRCSzs7QUFBQSxrQkF1Qk5BLEtBdkJNO0FBQUE7QUFBQTtBQUFBOztBQUFBLG9CQXdCSCxJQUFJRixLQUFKLENBQVUsa0JBQVYsQ0F4Qkc7O0FBQUE7QUFBQSxnREEyQko7QUFDTFQsZ0JBQUFBLEtBQUssRUFBRUMsc0JBQUlDLElBQUosQ0FBUztBQUFFQyxrQkFBQUEsTUFBTSxFQUFFSixJQUFJLENBQUNLO0FBQWYsaUJBQVQsRUFBOEJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUExQyxDQURGO0FBRUxSLGdCQUFBQSxJQUFJLEVBQUpBO0FBRkssZUEzQkk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL0FuZ3VsYXJfUHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzL011dGF0aW9uIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHRqcydcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGFzeW5jIHNpZ251cCAocGFyZW50LCBhcmdzLCBjdHgpIHtcbiAgICBjb25zdCBwYXNzd29yZCA9IGF3YWl0IGJjcnlwdC5oYXNoKGFyZ3MucGFzc3dvcmQsIDEwKVxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBjdHgucHJpc21hLmNyZWF0ZVVzZXIoe1xuICAgICAgZW1haWw6IGFyZ3MuZW1haWwsXG4gICAgICB1c2VybmFtZTogYXJncy51c2VybmFtZSxcbiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCxcbiAgICAgIHR5cGU6IFwiTm9ybWFsXCJcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICB0b2tlbjogand0LnNpZ24oeyB1c2VySWQ6IHVzZXIuaWQgfSwgcHJvY2Vzcy5lbnYuQVBJX1NFQ1JFVCksXG4gICAgICB1c2VyXG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIGxvZ2luIChwYXJlbnQsIHsgZW1haWwsIHBhc3N3b3JkIH0sIGN0eCkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBjdHgucHJpc21hLnVzZXIoeyBlbWFpbCB9KVxuICAgIGlmICghdXNlcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVtYWlsJylcbiAgICB9XG5cbiAgICBjb25zdCB2YWxpZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKVxuICAgIGlmICghdmFsaWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBwYXNzd29yZCcpXG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRva2VuOiBqd3Quc2lnbih7IHVzZXJJZDogdXNlci5pZCB9LCBwcm9jZXNzLmVudi5BUElfU0VDUkVUKSxcbiAgICAgIHVzZXJcbiAgICB9XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "signup",
        "parent",
        "args",
        "ctx",
        "bcrypt",
        "hash",
        "password",
        "prisma",
        "createUser",
        "email",
        "username",
        "type",
        "user",
        "token",
        "jwt",
        "sign",
        "userId",
        "id",
        "process",
        "env",
        "API_SECRET",
        "login",
        "Error",
        "compare",
        "valid"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;eAEe;AACPA,EAAAA,MADO;AAAA;AAAA;AAAA,6CACCC,MADD,EACSC,IADT,EACeC,GADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEYC,kBAAOC,IAAP,CAAYH,IAAI,CAACI,QAAjB,EAA2B,EAA3B,CAFZ;;AAAA;AAELA,cAAAA,QAFK;AAAA;AAAA,qBAGQH,GAAG,CAACI,MAAJ,CAAWC,UAAX,CAAsB;AACvCC,gBAAAA,KAAK,EAAEP,IAAI,CAACO,KAD2B;AAEvCC,gBAAAA,QAAQ,EAAER,IAAI,CAACQ,QAFwB;AAGvCJ,gBAAAA,QAAQ,EAAEA,QAH6B;AAIvCK,gBAAAA,IAAI,EAAE;AAJiC,eAAtB,CAHR;;AAAA;AAGLC,cAAAA,IAHK;AAAA,+CAUJ;AACLC,gBAAAA,KAAK,EAAEC,sBAAIC,IAAJ,CAAS;AAAEC,kBAAAA,MAAM,EAAEJ,IAAI,CAACK;AAAf,iBAAT,EAA8BC,OAAO,CAACC,GAAR,CAAYC,UAA1C,CADF;AAELR,gBAAAA,IAAI,EAAJA;AAFK,eAVI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBPS,EAAAA,KAhBO;AAAA;AAAA;AAAA,8CAgBApB,MAhBA,QAgB6BE,GAhB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBUM,cAAAA,KAhBV,QAgBUA,KAhBV,EAgBiBH,QAhBjB,QAgBiBA,QAhBjB;AAAA;AAAA,qBAiBQH,GAAG,CAACI,MAAJ,CAAWK,IAAX,CAAgB;AAAEH,gBAAAA,KAAK,EAALA;AAAF,eAAhB,CAjBR;;AAAA;AAiBLG,cAAAA,IAjBK;;AAAA,kBAkBNA,IAlBM;AAAA;AAAA;AAAA;;AAAA,oBAmBH,IAAIU,KAAJ,CAAU,eAAV,CAnBG;;AAAA;AAAA;AAAA,qBAsBSlB,kBAAOmB,OAAP,CAAejB,QAAf,EAAyBM,IAAI,CAACN,QAA9B,CAtBT;;AAAA;AAsBLkB,cAAAA,KAtBK;;AAAA,kBAuBNA,KAvBM;AAAA;AAAA;AAAA;;AAAA,oBAwBH,IAAIF,KAAJ,CAAU,kBAAV,CAxBG;;AAAA;AAAA,gDA2BJ;AACLT,gBAAAA,KAAK,EAAEC,sBAAIC,IAAJ,CAAS;AAAEC,kBAAAA,MAAM,EAAEJ,IAAI,CAACK;AAAf,iBAAT,EAA8BC,OAAO,CAACC,GAAR,CAAYC,UAA1C,CADF;AAELR,gBAAAA,IAAI,EAAJA;AAFK,eA3BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\n\nexport default {\n  async signup (parent, args, ctx) {\n    const password = await bcrypt.hash(args.password, 10)\n    const user = await ctx.prisma.createUser({\n      email: args.email,\n      username: args.username,\n      password: password,\n      type: \"Normal\"\n    });\n\n    return {\n      token: jwt.sign({ userId: user.id }, process.env.API_SECRET),\n      user\n    }\n  },\n\n  async login (parent, { email, password }, ctx) {\n    const user = await ctx.prisma.user({ email })\n    if (!user) {\n      throw new Error('Invalid email')\n    }\n\n    const valid = await bcrypt.compare(password, user.password)\n    if (!valid) {\n      throw new Error('Invalid password')\n    }\n\n    return {\n      token: jwt.sign({ userId: user.id }, process.env.API_SECRET),\n      user\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552929079073
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  updateUser: function () {\n    var _updateUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, _ref, ctx) {\n      var username, userId;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              username = _ref.username;\n              userId = (0, _utils.getUserId)(ctx);\n              return _context.abrupt(\"return\", ctx.prisma.updateUser({\n                where: {\n                  id: userId\n                },\n                data: {\n                  username: username\n                }\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function updateUser(_x, _x2, _x3) {\n      return _updateUser.apply(this, arguments);\n    }\n\n    return updateUser;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXBkYXRlVXNlciIsInBhcmVudCIsImN0eCIsInVzZXJuYW1lIiwidXNlcklkIiwicHJpc21hIiwid2hlcmUiLCJpZCIsImRhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBRWU7QUFDUEEsRUFBQUEsVUFETztBQUFBO0FBQUE7QUFBQSw2Q0FDS0MsTUFETCxRQUMyQkMsR0FEM0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2VDLGNBQUFBLFFBRGYsUUFDZUEsUUFEZjtBQUVMQyxjQUFBQSxNQUZLLEdBRUksc0JBQVVGLEdBQVYsQ0FGSjtBQUFBLCtDQUdKQSxHQUFHLENBQUNHLE1BQUosQ0FBV0wsVUFBWCxDQUFzQjtBQUMzQk0sZ0JBQUFBLEtBQUssRUFBRTtBQUFFQyxrQkFBQUEsRUFBRSxFQUFFSDtBQUFOLGlCQURvQjtBQUUzQkksZ0JBQUFBLElBQUksRUFBRTtBQUNKTCxrQkFBQUEsUUFBUSxFQUFSQTtBQURJO0FBRnFCLGVBQXRCLENBSEk7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL0FuZ3VsYXJfUHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzL011dGF0aW9uIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VXNlcklkIH0gZnJvbSAnLi4vLi4vdXRpbHMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgYXN5bmMgdXBkYXRlVXNlciAocGFyZW50LCB7IHVzZXJuYW1lIH0sIGN0eCkge1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpXG4gICAgcmV0dXJuIGN0eC5wcmlzbWEudXBkYXRlVXNlcih7XG4gICAgICB3aGVyZTogeyBpZDogdXNlcklkIH0sXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHVzZXJuYW1lXG4gICAgICB9XG4gICAgfSlcbiAgfVxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "updateUser",
        "parent",
        "ctx",
        "username",
        "userId",
        "prisma",
        "where",
        "id",
        "data"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAEe;AACPA,EAAAA,UADO;AAAA;AAAA;AAAA,6CACKC,MADL,QAC2BC,GAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACeC,cAAAA,QADf,QACeA,QADf;AAELC,cAAAA,MAFK,GAEI,sBAAUF,GAAV,CAFJ;AAAA,+CAGJA,GAAG,CAACG,MAAJ,CAAWL,UAAX,CAAsB;AAC3BM,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,EAAE,EAAEH;AAAN,iBADoB;AAE3BI,gBAAAA,IAAI,EAAE;AACJL,kBAAAA,QAAQ,EAARA;AADI;AAFqB,eAAtB,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import { getUserId } from '../../utils'\n\nexport default {\n  async updateUser (parent, { username }, ctx) {\n    const userId = getUserId(ctx)\n    return ctx.prisma.updateUser({\n      where: { id: userId },\n      data: {\n        username\n      }\n    })\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1552949688693
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/film.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/film.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/film.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/film.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
        "sourceFileName": "film.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  createFilm: function () {\n    var _createFilm = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context.abrupt(\"return\", ctx.prisma.createFilm({\n                name: args.name,\n                genre: args.genre,\n                description: args.description,\n                duration: args.duration\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function createFilm(_x, _x2, _x3) {\n      return _createFilm.apply(this, arguments);\n    }\n\n    return createFilm;\n  }(),\n  updateFilm: function () {\n    var _updateFilm = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context2.abrupt(\"return\", ctx.prisma.updateFilm({\n                where: {\n                  id: args.id\n                },\n                data: {\n                  name: args.name,\n                  genre: args.genre,\n                  description: args.description,\n                  duration: args.duration\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function updateFilm(_x4, _x5, _x6) {\n      return _updateFilm.apply(this, arguments);\n    }\n\n    return updateFilm;\n  }(),\n  deleteFilm: function () {\n    var _deleteFilm = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context3.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context3.abrupt(\"return\", ctx.prisma.deleteFilm({\n                id: args.idFilm\n              }));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteFilm(_x7, _x8, _x9) {\n      return _deleteFilm.apply(this, arguments);\n    }\n\n    return deleteFilm;\n  }(),\n  createFilmUser: function () {\n    var _createFilmUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //const userId = user.id;\n              userId = (0, _utils.getUserId)(ctx);\n              return _context4.abrupt(\"return\", ctx.prisma.createFilmUser({\n                finish: false,\n                progress: \"0\",\n                film: {\n                  connect: {\n                    id: args.idFilm\n                  }\n                },\n                user: {\n                  connect: {\n                    id: userId\n                  }\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function createFilmUser(_x10, _x11, _x12) {\n      return _createFilmUser.apply(this, arguments);\n    }\n\n    return createFilmUser;\n  }(),\n  updateFilmUser: function () {\n    var _updateFilmUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context5.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context5.abrupt(\"return\", ctx.prisma.updateFilmUser({\n                where: {\n                  id: args.idFilm\n                },\n                data: {\n                  finish: args.finish,\n                  progress: args.progress\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateFilmUser(_x13, _x14, _x15) {\n      return _updateFilmUser.apply(this, arguments);\n    }\n\n    return updateFilmUser;\n  }(),\n  deleteFilmUser: function () {\n    var _deleteFilmUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context6.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context6.abrupt(\"return\", ctx.prisma.deleteFilmUser({\n                id: args.idFilm\n              }));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function deleteFilmUser(_x16, _x17, _x18) {\n      return _deleteFilmUser.apply(this, arguments);\n    }\n\n    return deleteFilmUser;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbG0uanMiXSwibmFtZXMiOlsiY3JlYXRlRmlsbSIsInBhcmVudCIsImFyZ3MiLCJjdHgiLCJ1c2VySWQiLCJFcnJvciIsInByaXNtYSIsIm5hbWUiLCJnZW5yZSIsImRlc2NyaXB0aW9uIiwiZHVyYXRpb24iLCJ1cGRhdGVGaWxtIiwid2hlcmUiLCJpZCIsImRhdGEiLCJkZWxldGVGaWxtIiwiaWRGaWxtIiwiY3JlYXRlRmlsbVVzZXIiLCJmaW5pc2giLCJwcm9ncmVzcyIsImZpbG0iLCJjb25uZWN0IiwidXNlciIsInVwZGF0ZUZpbG1Vc2VyIiwiZGVsZXRlRmlsbVVzZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7O2VBRWU7QUFDUEEsRUFBQUEsVUFETztBQUFBO0FBQUE7QUFBQSw2Q0FDS0MsTUFETCxFQUNhQyxJQURiLEVBQ21CQyxHQURuQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFTEMsY0FBQUEsTUFGSyxHQUVJLHNCQUFVRCxHQUFWLENBRko7O0FBQUEsa0JBR05DLE1BSE07QUFBQTtBQUFBO0FBQUE7O0FBQUEsb0JBSUgsSUFBSUMsS0FBSixDQUFVLG1CQUFWLENBSkc7O0FBQUE7QUFBQSwrQ0FNSkYsR0FBRyxDQUFDRyxNQUFKLENBQVdOLFVBQVgsQ0FBc0I7QUFDM0JPLGdCQUFBQSxJQUFJLEVBQUVMLElBQUksQ0FBQ0ssSUFEZ0I7QUFFM0JDLGdCQUFBQSxLQUFLLEVBQUVOLElBQUksQ0FBQ00sS0FGZTtBQUczQkMsZ0JBQUFBLFdBQVcsRUFBRVAsSUFBSSxDQUFDTyxXQUhTO0FBSTNCQyxnQkFBQUEsUUFBUSxFQUFFUixJQUFJLENBQUNRO0FBSlksZUFBdEIsQ0FOSTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQWFQQyxFQUFBQSxVQWJPO0FBQUE7QUFBQTtBQUFBLDhDQWFLVixNQWJMLEVBYWFDLElBYmIsRUFhbUJDLEdBYm5CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWNMQyxjQUFBQSxNQWRLLEdBY0ksc0JBQVVELEdBQVYsQ0FkSjs7QUFBQSxrQkFlTkMsTUFmTTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxvQkFnQkgsSUFBSUMsS0FBSixDQUFVLG1CQUFWLENBaEJHOztBQUFBO0FBQUEsZ0RBa0JKRixHQUFHLENBQUNHLE1BQUosQ0FBV0ssVUFBWCxDQUF1QjtBQUM1QkMsZ0JBQUFBLEtBQUssRUFBRTtBQUFDQyxrQkFBQUEsRUFBRSxFQUFFWCxJQUFJLENBQUNXO0FBQVYsaUJBRHFCO0FBRTVCQyxnQkFBQUEsSUFBSSxFQUFDO0FBQ0hQLGtCQUFBQSxJQUFJLEVBQUVMLElBQUksQ0FBQ0ssSUFEUjtBQUVIQyxrQkFBQUEsS0FBSyxFQUFFTixJQUFJLENBQUNNLEtBRlQ7QUFHSEMsa0JBQUFBLFdBQVcsRUFBRVAsSUFBSSxDQUFDTyxXQUhmO0FBSUhDLGtCQUFBQSxRQUFRLEVBQUVSLElBQUksQ0FBQ1E7QUFKWjtBQUZ1QixlQUF2QixDQWxCSTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQTRCUEssRUFBQUEsVUE1Qk87QUFBQTtBQUFBO0FBQUEsOENBNEJLZCxNQTVCTCxFQTRCYUMsSUE1QmIsRUE0Qm1CQyxHQTVCbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBNkJMQyxjQUFBQSxNQTdCSyxHQTZCSSxzQkFBVUQsR0FBVixDQTdCSjs7QUFBQSxrQkE4Qk5DLE1BOUJNO0FBQUE7QUFBQTtBQUFBOztBQUFBLG9CQStCSCxJQUFJQyxLQUFKLENBQVUsbUJBQVYsQ0EvQkc7O0FBQUE7QUFBQSxnREFpQ0pGLEdBQUcsQ0FBQ0csTUFBSixDQUFXUyxVQUFYLENBQXVCO0FBQzVCRixnQkFBQUEsRUFBRSxFQUFFWCxJQUFJLENBQUNjO0FBRG1CLGVBQXZCLENBakNJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBdUNQQyxFQUFBQSxjQXZDTztBQUFBO0FBQUE7QUFBQSw4Q0F1Q1NoQixNQXZDVCxFQXVDaUJDLElBdkNqQixFQXVDdUJDLEdBdkN2QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUF3Q1g7QUFDTUMsY0FBQUEsTUF6Q0ssR0F5Q0ksc0JBQVVELEdBQVYsQ0F6Q0o7QUFBQSxnREEwQ0pBLEdBQUcsQ0FBQ0csTUFBSixDQUFXVyxjQUFYLENBQTBCO0FBQy9CQyxnQkFBQUEsTUFBTSxFQUFFLEtBRHVCO0FBRS9CQyxnQkFBQUEsUUFBUSxFQUFFLEdBRnFCO0FBRy9CQyxnQkFBQUEsSUFBSSxFQUFDO0FBQ0hDLGtCQUFBQSxPQUFPLEVBQUM7QUFDTlIsb0JBQUFBLEVBQUUsRUFBRVgsSUFBSSxDQUFDYztBQURIO0FBREwsaUJBSDBCO0FBTy9CTSxnQkFBQUEsSUFBSSxFQUFFO0FBQ0pELGtCQUFBQSxPQUFPLEVBQUU7QUFBQ1Isb0JBQUFBLEVBQUUsRUFBRVQ7QUFBTDtBQURMO0FBUHlCLGVBQTFCLENBMUNJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBc0RQbUIsRUFBQUEsY0F0RE87QUFBQTtBQUFBO0FBQUEsOENBc0RTdEIsTUF0RFQsRUFzRGlCQyxJQXREakIsRUFzRHVCQyxHQXREdkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBdURMQyxjQUFBQSxNQXZESyxHQXVESSxzQkFBVUQsR0FBVixDQXZESjs7QUFBQSxrQkF3RE5DLE1BeERNO0FBQUE7QUFBQTtBQUFBOztBQUFBLG9CQXlESCxJQUFJQyxLQUFKLENBQVUsbUJBQVYsQ0F6REc7O0FBQUE7QUFBQSxnREEyREpGLEdBQUcsQ0FBQ0csTUFBSixDQUFXaUIsY0FBWCxDQUEwQjtBQUMvQlgsZ0JBQUFBLEtBQUssRUFBRTtBQUFDQyxrQkFBQUEsRUFBRSxFQUFFWCxJQUFJLENBQUNjO0FBQVYsaUJBRHdCO0FBRS9CRixnQkFBQUEsSUFBSSxFQUFFO0FBQ0pJLGtCQUFBQSxNQUFNLEVBQUVoQixJQUFJLENBQUNnQixNQURUO0FBRUpDLGtCQUFBQSxRQUFRLEVBQUVqQixJQUFJLENBQUNpQjtBQUZYO0FBRnlCLGVBQTFCLENBM0RJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBbUVQSyxFQUFBQSxjQW5FTztBQUFBO0FBQUE7QUFBQSw4Q0FtRVN2QixNQW5FVCxFQW1FaUJDLElBbkVqQixFQW1FdUJDLEdBbkV2QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFvRUxDLGNBQUFBLE1BcEVLLEdBb0VJLHNCQUFVRCxHQUFWLENBcEVKOztBQUFBLGtCQXFFTkMsTUFyRU07QUFBQTtBQUFBO0FBQUE7O0FBQUEsb0JBc0VILElBQUlDLEtBQUosQ0FBVSxtQkFBVixDQXRFRzs7QUFBQTtBQUFBLGdEQXdFSkYsR0FBRyxDQUFDRyxNQUFKLENBQVdrQixjQUFYLENBQTBCO0FBQy9CWCxnQkFBQUEsRUFBRSxFQUFFWCxJQUFJLENBQUNjO0FBRHNCLGVBQTFCLENBeEVJOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmxhZGlzbGF2dm9yb2J5ZXYvRGVza3RvcC9Bbmd1bGFyX1ByaXNtYS9hcGkvc3JjL3Jlc29sdmVycy9NdXRhdGlvbiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFVzZXJJZCwgc3RvcmVVcGxvYWQgfSBmcm9tICcuLi8uLi91dGlscydcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhc3luYyBjcmVhdGVGaWxtIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpO1xuICAgIGlmICghdXNlcklkKXtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBBdXRoZW50aWNhdGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gY3R4LnByaXNtYS5jcmVhdGVGaWxtKHtcbiAgICAgIG5hbWU6IGFyZ3MubmFtZSxcbiAgICAgIGdlbnJlOiBhcmdzLmdlbnJlLFxuICAgICAgZGVzY3JpcHRpb246IGFyZ3MuZGVzY3JpcHRpb24sXG4gICAgICBkdXJhdGlvbjogYXJncy5kdXJhdGlvblxuICAgIH0pXG4gIH0sXG4gIGFzeW5jIHVwZGF0ZUZpbG0gKHBhcmVudCwgYXJncywgY3R4KXtcbiAgICBjb25zdCB1c2VySWQgPSBnZXRVc2VySWQoY3R4KTtcbiAgICBpZiAoIXVzZXJJZCl7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgQXV0aGVudGljYXRlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEudXBkYXRlRmlsbSAoe1xuICAgICAgd2hlcmU6IHtpZDogYXJncy5pZH0sXG4gICAgICBkYXRhOntcbiAgICAgICAgbmFtZTogYXJncy5uYW1lLFxuICAgICAgICBnZW5yZTogYXJncy5nZW5yZSxcbiAgICAgICAgZGVzY3JpcHRpb246IGFyZ3MuZGVzY3JpcHRpb24sXG4gICAgICAgIGR1cmF0aW9uOiBhcmdzLmR1cmF0aW9uXG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIGFzeW5jIGRlbGV0ZUZpbG0gKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgY29uc3QgdXNlcklkID0gZ2V0VXNlcklkKGN0eCk7XG4gICAgaWYgKCF1c2VySWQpe1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IEF1dGhlbnRpY2F0ZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBjdHgucHJpc21hLmRlbGV0ZUZpbG0gKHtcbiAgICAgIGlkOiBhcmdzLmlkRmlsbVxuICAgIH0pO1xuICB9LFxuXG5cbiAgYXN5bmMgY3JlYXRlRmlsbVVzZXIgKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgLy9jb25zdCB1c2VySWQgPSB1c2VyLmlkO1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpO1xuICAgIHJldHVybiBjdHgucHJpc21hLmNyZWF0ZUZpbG1Vc2VyKHtcbiAgICAgIGZpbmlzaDogZmFsc2UsXG4gICAgICBwcm9ncmVzczogXCIwXCIsXG4gICAgICBmaWxtOntcbiAgICAgICAgY29ubmVjdDp7XG4gICAgICAgICAgaWQ6IGFyZ3MuaWRGaWxtXG4gICAgICAgIH19LFxuICAgICAgdXNlcjoge1xuICAgICAgICBjb25uZWN0OiB7aWQ6IHVzZXJJZH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgYXN5bmMgdXBkYXRlRmlsbVVzZXIgKHBhcmVudCwgYXJncywgY3R4KSB7XG4gICAgY29uc3QgdXNlcklkID0gZ2V0VXNlcklkKGN0eCk7XG4gICAgaWYgKCF1c2VySWQpe1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IEF1dGhlbnRpY2F0ZWRcIik7XG4gICAgfVxuICAgIHJldHVybiBjdHgucHJpc21hLnVwZGF0ZUZpbG1Vc2VyKHtcbiAgICAgIHdoZXJlOiB7aWQ6IGFyZ3MuaWRGaWxtfSxcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgZmluaXNoOiBhcmdzLmZpbmlzaCxcbiAgICAgICAgcHJvZ3Jlc3M6IGFyZ3MucHJvZ3Jlc3MsXG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIGFzeW5jIGRlbGV0ZUZpbG1Vc2VyIChwYXJlbnQsIGFyZ3MsIGN0eCkge1xuICAgIGNvbnN0IHVzZXJJZCA9IGdldFVzZXJJZChjdHgpO1xuICAgIGlmICghdXNlcklkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgQXV0aGVudGljYXRlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGN0eC5wcmlzbWEuZGVsZXRlRmlsbVVzZXIoe1xuICAgICAgaWQ6IGFyZ3MuaWRGaWxtXG4gICAgfSk7XG4gIH0sXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "film.js"
      ],
      "names": [
        "createFilm",
        "parent",
        "args",
        "ctx",
        "userId",
        "Error",
        "prisma",
        "name",
        "genre",
        "description",
        "duration",
        "updateFilm",
        "where",
        "id",
        "data",
        "deleteFilm",
        "idFilm",
        "createFilmUser",
        "finish",
        "progress",
        "film",
        "connect",
        "user",
        "updateFilmUser",
        "deleteFilmUser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAEe;AACPA,EAAAA,UADO;AAAA;AAAA;AAAA,6CACKC,MADL,EACaC,IADb,EACmBC,GADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAELC,cAAAA,MAFK,GAEI,sBAAUD,GAAV,CAFJ;;AAAA,kBAGNC,MAHM;AAAA;AAAA;AAAA;;AAAA,oBAIH,IAAIC,KAAJ,CAAU,mBAAV,CAJG;;AAAA;AAAA,+CAMJF,GAAG,CAACG,MAAJ,CAAWN,UAAX,CAAsB;AAC3BO,gBAAAA,IAAI,EAAEL,IAAI,CAACK,IADgB;AAE3BC,gBAAAA,KAAK,EAAEN,IAAI,CAACM,KAFe;AAG3BC,gBAAAA,WAAW,EAAEP,IAAI,CAACO,WAHS;AAI3BC,gBAAAA,QAAQ,EAAER,IAAI,CAACQ;AAJY,eAAtB,CANI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAaPC,EAAAA,UAbO;AAAA;AAAA;AAAA,8CAaKV,MAbL,EAaaC,IAbb,EAamBC,GAbnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAcLC,cAAAA,MAdK,GAcI,sBAAUD,GAAV,CAdJ;;AAAA,kBAeNC,MAfM;AAAA;AAAA;AAAA;;AAAA,oBAgBH,IAAIC,KAAJ,CAAU,mBAAV,CAhBG;;AAAA;AAAA,gDAkBJF,GAAG,CAACG,MAAJ,CAAWK,UAAX,CAAuB;AAC5BC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAEX,IAAI,CAACW;AAAV,iBADqB;AAE5BC,gBAAAA,IAAI,EAAC;AACHP,kBAAAA,IAAI,EAAEL,IAAI,CAACK,IADR;AAEHC,kBAAAA,KAAK,EAAEN,IAAI,CAACM,KAFT;AAGHC,kBAAAA,WAAW,EAAEP,IAAI,CAACO,WAHf;AAIHC,kBAAAA,QAAQ,EAAER,IAAI,CAACQ;AAJZ;AAFuB,eAAvB,CAlBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4BPK,EAAAA,UA5BO;AAAA;AAAA;AAAA,8CA4BKd,MA5BL,EA4BaC,IA5Bb,EA4BmBC,GA5BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BLC,cAAAA,MA7BK,GA6BI,sBAAUD,GAAV,CA7BJ;;AAAA,kBA8BNC,MA9BM;AAAA;AAAA;AAAA;;AAAA,oBA+BH,IAAIC,KAAJ,CAAU,mBAAV,CA/BG;;AAAA;AAAA,gDAiCJF,GAAG,CAACG,MAAJ,CAAWS,UAAX,CAAuB;AAC5BF,gBAAAA,EAAE,EAAEX,IAAI,CAACc;AADmB,eAAvB,CAjCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuCPC,EAAAA,cAvCO;AAAA;AAAA;AAAA,8CAuCShB,MAvCT,EAuCiBC,IAvCjB,EAuCuBC,GAvCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCX;AACMC,cAAAA,MAzCK,GAyCI,sBAAUD,GAAV,CAzCJ;AAAA,gDA0CJA,GAAG,CAACG,MAAJ,CAAWW,cAAX,CAA0B;AAC/BC,gBAAAA,MAAM,EAAE,KADuB;AAE/BC,gBAAAA,QAAQ,EAAE,GAFqB;AAG/BC,gBAAAA,IAAI,EAAC;AACHC,kBAAAA,OAAO,EAAC;AACNR,oBAAAA,EAAE,EAAEX,IAAI,CAACc;AADH;AADL,iBAH0B;AAO/BM,gBAAAA,IAAI,EAAE;AACJD,kBAAAA,OAAO,EAAE;AAACR,oBAAAA,EAAE,EAAET;AAAL;AADL;AAPyB,eAA1B,CA1CI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsDPmB,EAAAA,cAtDO;AAAA;AAAA;AAAA,8CAsDStB,MAtDT,EAsDiBC,IAtDjB,EAsDuBC,GAtDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAuDLC,cAAAA,MAvDK,GAuDI,sBAAUD,GAAV,CAvDJ;;AAAA,kBAwDNC,MAxDM;AAAA;AAAA;AAAA;;AAAA,oBAyDH,IAAIC,KAAJ,CAAU,mBAAV,CAzDG;;AAAA;AAAA,gDA2DJF,GAAG,CAACG,MAAJ,CAAWiB,cAAX,CAA0B;AAC/BX,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAEX,IAAI,CAACc;AAAV,iBADwB;AAE/BF,gBAAAA,IAAI,EAAE;AACJI,kBAAAA,MAAM,EAAEhB,IAAI,CAACgB,MADT;AAEJC,kBAAAA,QAAQ,EAAEjB,IAAI,CAACiB;AAFX;AAFyB,eAA1B,CA3DI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmEPK,EAAAA,cAnEO;AAAA;AAAA;AAAA,8CAmESvB,MAnET,EAmEiBC,IAnEjB,EAmEuBC,GAnEvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAoELC,cAAAA,MApEK,GAoEI,sBAAUD,GAAV,CApEJ;;AAAA,kBAqENC,MArEM;AAAA;AAAA;AAAA;;AAAA,oBAsEH,IAAIC,KAAJ,CAAU,mBAAV,CAtEG;;AAAA;AAAA,gDAwEJF,GAAG,CAACG,MAAJ,CAAWkB,cAAX,CAA0B;AAC/BX,gBAAAA,EAAE,EAAEX,IAAI,CAACc;AADsB,eAA1B,CAxEI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import { getUserId, storeUpload } from '../../utils'\n\nexport default {\n  async createFilm (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.createFilm({\n      name: args.name,\n      genre: args.genre,\n      description: args.description,\n      duration: args.duration\n    })\n  },\n  async updateFilm (parent, args, ctx){\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.updateFilm ({\n      where: {id: args.id},\n      data:{\n        name: args.name,\n        genre: args.genre,\n        description: args.description,\n        duration: args.duration\n      }\n    });\n  },\n  async deleteFilm (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.deleteFilm ({\n      id: args.idFilm\n    });\n  },\n\n\n  async createFilmUser (parent, args, ctx) {\n    //const userId = user.id;\n    const userId = getUserId(ctx);\n    return ctx.prisma.createFilmUser({\n      finish: false,\n      progress: \"0\",\n      film:{\n        connect:{\n          id: args.idFilm\n        }},\n      user: {\n        connect: {id: userId}\n      }\n    });\n  },\n  async updateFilmUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.updateFilmUser({\n      where: {id: args.idFilm},\n      data: {\n        finish: args.finish,\n        progress: args.progress,\n      }\n    });\n  },\n  async deleteFilmUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId) {\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.deleteFilmUser({\n      id: args.idFilm\n    });\n  },\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553464561606
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/serie.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/serie.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/serie.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation/serie.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
        "sourceFileName": "serie.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../../utils\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  createSerie: function () {\n    var _createSerie = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", ctx.prisma.createSerie({\n                name: args.name,\n                genre: args.genre,\n                description: args.description,\n                nbEp: args.nbEp,\n                nbSais: args.nbSais\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function createSerie(_x, _x2, _x3) {\n      return _createSerie.apply(this, arguments);\n    }\n\n    return createSerie;\n  }(),\n  updateSerie: function () {\n    var _updateSerie = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", ctx.prisma.updateSerie({\n                where: {\n                  id: args.idSerie\n                },\n                data: {\n                  name: args.name,\n                  genre: args.genre,\n                  description: args.description,\n                  nbEp: args.nbEp,\n                  nbSais: args.nbSais\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function updateSerie(_x4, _x5, _x6) {\n      return _updateSerie.apply(this, arguments);\n    }\n\n    return updateSerie;\n  }(),\n  deleteSerie: function () {\n    var _deleteSerie = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", ctx.prisma.deleteSerie({\n                id: args.idSerie\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteSerie(_x7, _x8, _x9) {\n      return _deleteSerie.apply(this, arguments);\n    }\n\n    return deleteSerie;\n  }(),\n  createSaison: function () {\n    var _createSaison = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", ctx.prisma.createSaison({\n                number: args.number,\n                serie: {\n                  connect: {\n                    id: args.idSerie\n                  }\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function createSaison(_x10, _x11, _x12) {\n      return _createSaison.apply(this, arguments);\n    }\n\n    return createSaison;\n  }(),\n  deleteSaison: function () {\n    var _deleteSaison = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", ctx.prisma.deleteSaison({\n                id: args.idSais\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function deleteSaison(_x13, _x14, _x15) {\n      return _deleteSaison.apply(this, arguments);\n    }\n\n    return deleteSaison;\n  }(),\n  createEpisode: function () {\n    var _createEpisode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", ctx.prisma.createEpisode({\n                name: args.name,\n                description: args.description,\n                saison: {\n                  connect: {\n                    id: args.idSais\n                  }\n                },\n                serie: {\n                  connect: {\n                    id: args.idSerie\n                  }\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    function createEpisode(_x16, _x17, _x18) {\n      return _createEpisode.apply(this, arguments);\n    }\n\n    return createEpisode;\n  }(),\n  updateEpisode: function () {\n    var _updateEpisode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee7(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", ctx.prisma.updateEpisode({\n                where: {\n                  id: args.idEp\n                },\n                data: {\n                  name: args.name,\n                  description: args.description\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    function updateEpisode(_x19, _x20, _x21) {\n      return _updateEpisode.apply(this, arguments);\n    }\n\n    return updateEpisode;\n  }(),\n  deleteEpisode: function () {\n    var _deleteEpisode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee8(parent, args, ctx) {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", ctx.prisma.deleteEpisode({\n                id: args.idEp\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    function deleteEpisode(_x22, _x23, _x24) {\n      return _deleteEpisode.apply(this, arguments);\n    }\n\n    return deleteEpisode;\n  }(),\n  createSerieUser: function () {\n    var _createSerieUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee9(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              //const userId = user.id;\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context9.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context9.abrupt(\"return\", ctx.prisma.createSerieUser({\n                finish: false,\n                serie: {\n                  connect: {\n                    id: args.idSerie\n                  }\n                },\n                user: {\n                  connect: {\n                    id: userId\n                  }\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function createSerieUser(_x25, _x26, _x27) {\n      return _createSerieUser.apply(this, arguments);\n    }\n\n    return createSerieUser;\n  }(),\n  updateSerieUser: function () {\n    var _updateSerieUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee10(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context10.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context10.abrupt(\"return\", ctx.prisma.updateSerieUser({\n                where: {\n                  id: args.idSerie\n                },\n                data: {\n                  finish: args.finish\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function updateSerieUser(_x28, _x29, _x30) {\n      return _updateSerieUser.apply(this, arguments);\n    }\n\n    return updateSerieUser;\n  }(),\n  deleteSerieUser: function () {\n    var _deleteSerieUser = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee11(parent, args, ctx) {\n      var userId;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              userId = (0, _utils.getUserId)(ctx);\n\n              if (userId) {\n                _context11.next = 3;\n                break;\n              }\n\n              throw new Error(\"Not Authenticated\");\n\n            case 3:\n              return _context11.abrupt(\"return\", ctx.prisma.deleteSerieUser({\n                id: args.idSerie\n              }));\n\n            case 4:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function deleteSerieUser(_x31, _x32, _x33) {\n      return _deleteSerieUser.apply(this, arguments);\n    }\n\n    return deleteSerieUser;\n  }()\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "serie.js"
      ],
      "names": [
        "createSerie",
        "parent",
        "args",
        "ctx",
        "prisma",
        "name",
        "genre",
        "description",
        "nbEp",
        "nbSais",
        "updateSerie",
        "where",
        "id",
        "idSerie",
        "data",
        "deleteSerie",
        "createSaison",
        "number",
        "serie",
        "connect",
        "deleteSaison",
        "idSais",
        "createEpisode",
        "saison",
        "updateEpisode",
        "idEp",
        "deleteEpisode",
        "createSerieUser",
        "userId",
        "Error",
        "finish",
        "user",
        "updateSerieUser",
        "deleteSerieUser"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;eAEe;AACPA,EAAAA,WADO;AAAA;AAAA;AAAA,6CACMC,MADN,EACcC,IADd,EACoBC,GADpB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEJA,GAAG,CAACC,MAAJ,CAAWJ,WAAX,CAAwB;AAC7BK,gBAAAA,IAAI,EAAEH,IAAI,CAACG,IADkB;AAE7BC,gBAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFiB;AAG7BC,gBAAAA,WAAW,EAAEL,IAAI,CAACK,WAHW;AAI7BC,gBAAAA,IAAI,EAAEN,IAAI,CAACM,IAJkB;AAK7BC,gBAAAA,MAAM,EAAEP,IAAI,CAACO;AALgB,eAAxB,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAUPC,EAAAA,WAVO;AAAA;AAAA;AAAA,8CAUMT,MAVN,EAUcC,IAVd,EAUoBC,GAVpB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAWJA,GAAG,CAACC,MAAJ,CAAWM,WAAX,CAAwB;AAC7BC,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV,iBADsB;AAE7BC,gBAAAA,IAAI,EAAE;AACJT,kBAAAA,IAAI,EAAEH,IAAI,CAACG,IADP;AAEJC,kBAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFR;AAGJC,kBAAAA,WAAW,EAAEL,IAAI,CAACK,WAHd;AAIJC,kBAAAA,IAAI,EAAEN,IAAI,CAACM,IAJP;AAKJC,kBAAAA,MAAM,EAAEP,IAAI,CAACO;AALT;AAFuB,eAAxB,CAXI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBPM,EAAAA,WAtBO;AAAA;AAAA;AAAA,8CAsBMd,MAtBN,EAsBcC,IAtBd,EAsBoBC,GAtBpB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAuBJA,GAAG,CAACC,MAAJ,CAAWW,WAAX,CAAwB;AAC7BH,gBAAAA,EAAE,EAAEV,IAAI,CAACW;AADoB,eAAxB,CAvBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4BPG,EAAAA,YA5BO;AAAA;AAAA;AAAA,8CA4BOf,MA5BP,EA4BeC,IA5Bf,EA4BqBC,GA5BrB;AAAA;AAAA;AAAA;AAAA;AAAA,gDA6BJA,GAAG,CAACC,MAAJ,CAAWY,YAAX,CAAyB;AAC9BC,gBAAAA,MAAM,EAAEf,IAAI,CAACe,MADiB;AAE9BC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV;AADJ;AAFuB,eAAzB,CA7BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoCPO,EAAAA,YApCO;AAAA;AAAA;AAAA,8CAoCOnB,MApCP,EAoCeC,IApCf,EAoCqBC,GApCrB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAqCJA,GAAG,CAACC,MAAJ,CAAWgB,YAAX,CAAwB;AAC7BR,gBAAAA,EAAE,EAAEV,IAAI,CAACmB;AADoB,eAAxB,CArCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0CPC,EAAAA,aA1CO;AAAA;AAAA;AAAA,8CA0CQrB,MA1CR,EA0CgBC,IA1ChB,EA0CsBC,GA1CtB;AAAA;AAAA;AAAA;AAAA;AAAA,gDA2CJA,GAAG,CAACC,MAAJ,CAAWkB,aAAX,CAA0B;AAC/BjB,gBAAAA,IAAI,EAAEH,IAAI,CAACG,IADoB;AAE/BE,gBAAAA,WAAW,EAAEL,IAAI,CAACK,WAFa;AAG/BgB,gBAAAA,MAAM,EAAE;AACNJ,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEV,IAAI,CAACmB;AAAV;AADH,iBAHuB;AAM/BH,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV;AADJ;AANwB,eAA1B,CA3CI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsDPW,EAAAA,aAtDO;AAAA;AAAA;AAAA,8CAsDQvB,MAtDR,EAsDgBC,IAtDhB,EAsDsBC,GAtDtB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAuDJA,GAAG,CAACC,MAAJ,CAAWoB,aAAX,CAA0B;AAC/Bb,gBAAAA,KAAK,EAAC;AAACC,kBAAAA,EAAE,EAAEV,IAAI,CAACuB;AAAV,iBADyB;AAE/BX,gBAAAA,IAAI,EAAC;AACHT,kBAAAA,IAAI,EAAEH,IAAI,CAACG,IADR;AAEHE,kBAAAA,WAAW,EAAEL,IAAI,CAACK;AAFf;AAF0B,eAA1B,CAvDI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+DPmB,EAAAA,aA/DO;AAAA;AAAA;AAAA,8CA+DQzB,MA/DR,EA+DgBC,IA/DhB,EA+DsBC,GA/DtB;AAAA;AAAA;AAAA;AAAA;AAAA,gDAgEJA,GAAG,CAACC,MAAJ,CAAWsB,aAAX,CAA0B;AAC/Bd,gBAAAA,EAAE,EAAEV,IAAI,CAACuB;AADsB,eAA1B,CAhEI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqEPE,EAAAA,eArEO;AAAA;AAAA;AAAA,8CAqEU1B,MArEV,EAqEkBC,IArElB,EAqEwBC,GArExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAsEX;AACMyB,cAAAA,MAvEK,GAuEI,sBAAUzB,GAAV,CAvEJ;;AAAA,kBAwENyB,MAxEM;AAAA;AAAA;AAAA;;AAAA,oBAyEH,IAAIC,KAAJ,CAAU,mBAAV,CAzEG;;AAAA;AAAA,gDA2EJ1B,GAAG,CAACC,MAAJ,CAAWuB,eAAX,CAA2B;AAChCG,gBAAAA,MAAM,EAAE,KADwB;AAEhCZ,gBAAAA,KAAK,EAAC;AACJC,kBAAAA,OAAO,EAAC;AACNP,oBAAAA,EAAE,EAAEV,IAAI,CAACW;AADH;AADJ,iBAF0B;AAMhCkB,gBAAAA,IAAI,EAAE;AACJZ,kBAAAA,OAAO,EAAE;AAACP,oBAAAA,EAAE,EAAEgB;AAAL;AADL;AAN0B,eAA3B,CA3EI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsFPI,EAAAA,eAtFO;AAAA;AAAA;AAAA,+CAsFU/B,MAtFV,EAsFkBC,IAtFlB,EAsFwBC,GAtFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAuFLyB,cAAAA,MAvFK,GAuFI,sBAAUzB,GAAV,CAvFJ;;AAAA,kBAwFNyB,MAxFM;AAAA;AAAA;AAAA;;AAAA,oBAyFH,IAAIC,KAAJ,CAAU,mBAAV,CAzFG;;AAAA;AAAA,iDA2FJ1B,GAAG,CAACC,MAAJ,CAAW4B,eAAX,CAA2B;AAChCrB,gBAAAA,KAAK,EAAE;AAACC,kBAAAA,EAAE,EAAEV,IAAI,CAACW;AAAV,iBADyB;AAEhCC,gBAAAA,IAAI,EAAE;AACJgB,kBAAAA,MAAM,EAAE5B,IAAI,CAAC4B;AADT;AAF0B,eAA3B,CA3FI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkGPG,EAAAA,eAlGO;AAAA;AAAA;AAAA,+CAkGUhC,MAlGV,EAkGkBC,IAlGlB,EAkGwBC,GAlGxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAmGLyB,cAAAA,MAnGK,GAmGI,sBAAUzB,GAAV,CAnGJ;;AAAA,kBAoGNyB,MApGM;AAAA;AAAA;AAAA;;AAAA,oBAqGH,IAAIC,KAAJ,CAAU,mBAAV,CArGG;;AAAA;AAAA,iDAuGJ1B,GAAG,CAACC,MAAJ,CAAW6B,eAAX,CAA2B;AAChCrB,gBAAAA,EAAE,EAAEV,IAAI,CAACW;AADuB,eAA3B,CAvGI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/Mutation",
      "sourcesContent": [
        "import { getUserId } from '../../utils'\n\nexport default {\n  async createSerie (parent, args, ctx) {\n    return ctx.prisma.createSerie ({\n      name: args.name,\n      genre: args.genre,\n      description: args.description,\n      nbEp: args.nbEp,\n      nbSais: args.nbSais\n    });\n  },\n  async updateSerie (parent, args, ctx) {\n    return ctx.prisma.updateSerie ({\n      where: {id: args.idSerie},\n      data: {\n        name: args.name,\n        genre: args.genre,\n        description: args.description,\n        nbEp: args.nbEp,\n        nbSais: args.nbSais\n      }\n    });\n  },\n  async deleteSerie (parent, args, ctx) {\n    return ctx.prisma.deleteSerie ({\n      id: args.idSerie\n    });\n  },\n\n  async createSaison (parent, args, ctx){\n    return ctx.prisma.createSaison ({\n      number: args.number,\n      serie: {\n        connect: {id: args.idSerie},\n      }\n    });\n  },\n  async deleteSaison (parent, args, ctx){\n    return ctx.prisma.deleteSaison({\n      id: args.idSais\n    });\n  },\n\n  async createEpisode (parent, args, ctx) {\n    return ctx.prisma.createEpisode ({\n      name: args.name,\n      description: args.description,\n      saison: {\n        connect: {id: args.idSais}\n      },\n      serie: {\n        connect: {id: args.idSerie}\n      }\n    });\n  },\n  async updateEpisode (parent, args, ctx) {\n    return ctx.prisma.updateEpisode ({\n      where:{id: args.idEp},\n      data:{\n        name: args.name,\n        description: args.description\n      }\n    });\n  },\n  async deleteEpisode (parent, args, ctx) {\n    return ctx.prisma.deleteEpisode ({\n      id: args.idEp\n    });\n  },\n\n  async createSerieUser (parent, args, ctx) {\n    //const userId = user.id;\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.createSerieUser({\n      finish: false,\n      serie:{\n        connect:{\n          id: args.idSerie\n        }},\n      user: {\n        connect: {id: userId}\n      }\n    });\n  },\n  async updateSerieUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId){\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.updateSerieUser({\n      where: {id: args.idSerie},\n      data: {\n        finish: args.finish,\n      }\n    });\n  },\n  async deleteSerieUser (parent, args, ctx) {\n    const userId = getUserId(ctx);\n    if (!userId) {\n      throw new Error(\"Not Authenticated\");\n    }\n    return ctx.prisma.deleteSerieUser({\n      id: args.idSerie\n    });\n  },\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1551814354656
  },
  "{\"sourceRoot\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"filename\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUserFinished.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/vladislavvorobyev/Desktop/Angular_Prisma/api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.3.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUserFinished.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUserFinished.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers/FilmUserFinished.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
        "sourceFileName": "FilmUserFinished.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  filmUser: function filmUser(parent, args, context) {\n    return context.prisma.filmUserFinished({\n      id: parent.id\n    }).filmUser();\n  },\n  user: function user(parent, args, context) {\n    return context.prisma.filmUserFinished({\n      id: parent.id\n    }).user();\n  }\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpbG1Vc2VyRmluaXNoZWQuanMiXSwibmFtZXMiOlsiZmlsbVVzZXIiLCJwYXJlbnQiLCJhcmdzIiwiY29udGV4dCIsInByaXNtYSIsImZpbG1Vc2VyRmluaXNoZWQiLCJpZCIsInVzZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztlQUFlO0FBQ2JBLEVBQUFBLFFBRGEsb0JBQ0hDLE1BREcsRUFDS0MsSUFETCxFQUNXQyxPQURYLEVBQ29CO0FBQy9CLFdBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlQyxnQkFBZixDQUFnQztBQUNyQ0MsTUFBQUEsRUFBRSxFQUFFTCxNQUFNLENBQUNLO0FBRDBCLEtBQWhDLEVBRUpOLFFBRkksRUFBUDtBQUdELEdBTFk7QUFPYk8sRUFBQUEsSUFQYSxnQkFPUE4sTUFQTyxFQU9DQyxJQVBELEVBT09DLE9BUFAsRUFPZ0I7QUFDM0IsV0FBT0EsT0FBTyxDQUFDQyxNQUFSLENBQWVDLGdCQUFmLENBQWdDO0FBQ3JDQyxNQUFBQSxFQUFFLEVBQUVMLE1BQU0sQ0FBQ0s7QUFEMEIsS0FBaEMsRUFFSkMsSUFGSSxFQUFQO0FBR0Q7QUFYWSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92bGFkaXNsYXZ2b3JvYnlldi9EZXNrdG9wL0FuZ3VsYXJfUHJpc21hL2FwaS9zcmMvcmVzb2x2ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBmaWxtVXNlciAocGFyZW50LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIGNvbnRleHQucHJpc21hLmZpbG1Vc2VyRmluaXNoZWQoe1xuICAgICAgaWQ6IHBhcmVudC5pZFxuICAgIH0pLmZpbG1Vc2VyKClcbiAgfSxcblxuICB1c2VyIChwYXJlbnQsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gY29udGV4dC5wcmlzbWEuZmlsbVVzZXJGaW5pc2hlZCh7XG4gICAgICBpZDogcGFyZW50LmlkXG4gICAgfSkudXNlcigpXG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "FilmUserFinished.js"
      ],
      "names": [
        "filmUser",
        "parent",
        "args",
        "context",
        "prisma",
        "filmUserFinished",
        "id",
        "user"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,QADa,oBACHC,MADG,EACKC,IADL,EACWC,OADX,EACoB;AAC/B,WAAOA,OAAO,CAACC,MAAR,CAAeC,gBAAf,CAAgC;AACrCC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AAD0B,KAAhC,EAEJN,QAFI,EAAP;AAGD,GALY;AAObO,EAAAA,IAPa,gBAOPN,MAPO,EAOCC,IAPD,EAOOC,OAPP,EAOgB;AAC3B,WAAOA,OAAO,CAACC,MAAR,CAAeC,gBAAf,CAAgC;AACrCC,MAAAA,EAAE,EAAEL,MAAM,CAACK;AAD0B,KAAhC,EAEJC,IAFI,EAAP;AAGD;AAXY,C",
      "sourceRoot": "/Users/vladislavvorobyev/Desktop/Angular_Prisma/api/src/resolvers",
      "sourcesContent": [
        "export default {\n  filmUser (parent, args, context) {\n    return context.prisma.filmUserFinished({\n      id: parent.id\n    }).filmUser()\n  },\n\n  user (parent, args, context) {\n    return context.prisma.filmUserFinished({\n      id: parent.id\n    }).user()\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553463024188
  }
}